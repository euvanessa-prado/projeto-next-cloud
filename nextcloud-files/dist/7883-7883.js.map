{"version":3,"file":"7883-7883.js?v=5a61e353a3ada3863242","mappings":"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AQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,OAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,IAAQ,KACR,MAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,MAAO,KACP,IAAO,KACP,MAAO,KACP,IAAO,KACP,MAAO,KACP,IAAO,KACP,IAAO,KACP,MAAO,KACP,MAAO,KACP,IAAO,KACP,MAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,MAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,MAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,IAAO,KACP,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,OAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,OAAQ,MACR,KAAQ,MACR,OAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,OAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,OAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,OAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,OAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KAAQ,MACR,KA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","sources":["webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-class-remove-duplicates-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/utils/clone.js","webpack:///nextcloud/node_modules/regexp-tree/dist/transform/index.js","webpack:///nextcloud/node_modules/browserslist-useragent-regexp/dist/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-class-to-meta-transform.js","webpack:///nextcloud/node_modules/caniuse-lite/dist/unpacker/browserVersions.js","webpack:///nextcloud/node_modules/browserslist/parse.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-escape-unescape-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-surrogate-pair-to-single-unicode-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/compat-transpiler/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-class-to-single-char-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/generator/index.js","webpack:///nextcloud/node_modules/ua-regexes-lite/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/parser/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa-from-regexp.js","webpack:///nextcloud/node_modules/regexp-tree/dist/traverse/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/quantifiers-merge-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/dfa/dfa.js","webpack:///nextcloud/node_modules/regexp-tree/dist/transform/utils.js","webpack:///nextcloud/node_modules/regexp-tree/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/parser/unicode/parser-unicode-properties.js","webpack:///nextcloud/node_modules/regexp-tree/dist/traverse/node-path.js","webpack:///nextcloud/node_modules/regexp-tree/dist/compat-transpiler/transforms/index.js","webpack:///nextcloud/core/src/services/BrowserStorageService.js","webpack:///nextcloud/node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-dotall-s-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa-state.js","webpack:///nextcloud/node_modules/regexp-tree/dist/compat-transpiler/runtime/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/index.js","webpack:///nextcloud/node_modules/@nextcloud/browserslist-config/browserlist.config.js","webpack:///nextcloud/node_modules/regexp-tree/dist/regexp-tree.js","webpack:///nextcloud/core/src/services/BrowsersListService.js","webpack:///nextcloud/node_modules/caniuse-lite/data/browserVersions.js","webpack:///nextcloud/node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-x-flag-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/disjunction-remove-duplicates-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/compat-transpiler/transforms/compat-named-capturing-groups-transform.js","webpack:///nextcloud/node_modules/caniuse-lite/dist/unpacker/browsers.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/index.js","webpack:///nextcloud/node_modules/electron-to-chromium/versions.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-class-classranges-merge-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/builders.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/remove-empty-group-transform.js","webpack:///nextcloud/node_modules/browserslist/error.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/special-symbols.js","webpack:///nextcloud/node_modules/caniuse-lite/dist/unpacker/agents.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-class-classranges-to-chars-transform.js","webpack:///nextcloud/core/src/utils/RedirectUnsupportedBrowsers.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/state.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/group-single-chars-to-char-class.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/dfa/dfa-minimizer.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-code-to-simple-char-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/quantifier-range-to-symbol-transform.js","webpack:///nextcloud/node_modules/caniuse-lite/data/browsers.js","webpack:///nextcloud/node_modules/regexp-tree/dist/interpreter/finite-automaton/nfa/nfa.js","webpack:///nextcloud/node_modules/browserslist/browser.js","webpack:///nextcloud/node_modules/browserslist/index.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/ungroup-transform.js","webpack:///nextcloud/core/src/logger.js","webpack:///nextcloud/node_modules/caniuse-lite/data/agents.js","webpack:///nextcloud/node_modules/regexp-tree/dist/parser/generated/regexp-tree.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/combine-repeating-patterns-transform.js","webpack:///nextcloud/node_modules/regexp-tree/dist/optimizer/transforms/char-case-insensitive-lowercase-transform.js"],"sourcesContent":["/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove duplicates from character classes.\n */\n\nmodule.exports = {\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n    var sources = {};\n\n    for (var i = 0; i < node.expressions.length; i++) {\n      var childPath = path.getChild(i);\n      var source = childPath.jsonEncode();\n\n      if (sources.hasOwnProperty(source)) {\n        childPath.remove();\n\n        // Since we remove the current node.\n        // TODO: make it simpler for users with a method.\n        i--;\n      }\n\n      sources[source] = true;\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Performs a deep copy of an simple object.\n * Only handles scalar values, arrays and objects.\n *\n * @param obj Object\n */\n\nmodule.exports = function clone(obj) {\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n  var res = void 0;\n  if (Array.isArray(obj)) {\n    res = [];\n  } else {\n    res = {};\n  }\n  for (var i in obj) {\n    res[i] = clone(obj[i]);\n  }\n  return res;\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar generator = require('../generator');\nvar parser = require('../parser');\nvar traverse = require('../traverse');\n\n/**\n * Transform result.\n */\n\nvar TransformResult = function () {\n  /**\n   * Initializes a transform result for an AST.\n   *\n   * @param Object ast - an AST node\n   * @param mixed extra - any extra data a transform may return\n   */\n  function TransformResult(ast) {\n    var extra = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, TransformResult);\n\n    this._ast = ast;\n    this._source = null;\n    this._string = null;\n    this._regexp = null;\n    this._extra = extra;\n  }\n\n  _createClass(TransformResult, [{\n    key: 'getAST',\n    value: function getAST() {\n      return this._ast;\n    }\n  }, {\n    key: 'setExtra',\n    value: function setExtra(extra) {\n      this._extra = extra;\n    }\n  }, {\n    key: 'getExtra',\n    value: function getExtra() {\n      return this._extra;\n    }\n  }, {\n    key: 'toRegExp',\n    value: function toRegExp() {\n      if (!this._regexp) {\n        this._regexp = new RegExp(this.getSource(), this._ast.flags);\n      }\n      return this._regexp;\n    }\n  }, {\n    key: 'getSource',\n    value: function getSource() {\n      if (!this._source) {\n        this._source = generator.generate(this._ast.body);\n      }\n      return this._source;\n    }\n  }, {\n    key: 'getFlags',\n    value: function getFlags() {\n      return this._ast.flags;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (!this._string) {\n        this._string = generator.generate(this._ast);\n      }\n      return this._string;\n    }\n  }]);\n\n  return TransformResult;\n}();\n\nmodule.exports = {\n  /**\n   * Expose `TransformResult`.\n   */\n  TransformResult: TransformResult,\n\n  /**\n   * Transforms a regular expression applying a set of\n   * transformation handlers.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   *\n   * @param Object | Array<Object>:\n   *\n   *   a handler (or a list of handlers) from `traverse` API.\n   *\n   * @return TransformResult instance.\n   *\n   * Example:\n   *\n   *   transform(/[a-z]/i, {\n   *     onChar(path) {\n   *       const {node} = path;\n   *\n   *       if (...) {\n   *         path.remove();\n   *       }\n   *     }\n   *   });\n   */\n  transform: function transform(regexp, handlers) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    traverse.traverse(ast, handlers);\n\n    return new TransformResult(ast);\n  }\n};","import browserslist from 'browserslist';\nimport RegexpTree from 'regexp-tree';\nimport { regexes } from 'ua-regexes-lite';\n\n/**\n * Array of numbers to array of first and last elements.\n * @param numbers - Array of numbers.\n * @returns Number or two numbers.\n */ function numbersToRanges(numbers) {\n    if (typeof numbers === \"number\") {\n        return numbers;\n    }\n    if (numbers.length === 1) {\n        return numbers[0];\n    }\n    return [\n        numbers[0],\n        numbers[numbers.length - 1]\n    ];\n}\n\nvar SemverPart;\n(function(SemverPart) {\n    SemverPart[SemverPart[\"Major\"] = 0] = \"Major\";\n    SemverPart[SemverPart[\"Minor\"] = 1] = \"Minor\";\n    SemverPart[SemverPart[\"Patch\"] = 2] = \"Patch\";\n})(SemverPart || (SemverPart = {}));\n\n/**\n * Get semver from string or array.\n * @param version - Target to convert.\n * @returns Array with semver parts.\n */ function semverify(version) {\n    const versionParts = Array.isArray(version) ? version : version.toString().split(\".\");\n    if (versionParts[0] === \"all\") {\n        return [\n            Infinity,\n            0,\n            0\n        ];\n    }\n    let versionPart = null;\n    let semverPart = null;\n    const semver = [\n        0,\n        0,\n        0\n    ];\n    for(let i = 0; i < 3; i++){\n        versionPart = versionParts[i];\n        if (typeof versionPart === \"undefined\") {\n            continue;\n        }\n        semverPart = typeof versionPart === \"number\" ? versionPart : parseInt(versionPart, 10);\n        if (isNaN(semverPart)) {\n            return null;\n        }\n        semver[i] = semverPart;\n    }\n    return semver;\n}\n/**\n * Get semver range.\n * @param from\n * @param to\n * @returns Semver range.\n */ function rangeSemver(from, to) {\n    let partIndex = 0;\n    const range = [];\n    for(let i = 2; i >= 0; i--){\n        if (from[i] !== to[i]) {\n            partIndex = i;\n            break;\n        }\n    }\n    for(let i1 = from[partIndex], max = to[partIndex]; i1 <= max; i1++){\n        range.push(from.map((v, j)=>j === partIndex ? i1 : v));\n    }\n    return range;\n}\n/**\n * Compare semvers.\n * @param a - Semver to compare.\n * @param b - Semver to compare with.\n * @param options - Compare options.\n * @returns Equals or not.\n */ function compareSemvers(a, b, options) {\n    const [major, minor, patch] = a;\n    const [majorBase, minorBase, patchBase] = b;\n    const { ignoreMinor , ignorePatch , allowHigherVersions  } = options;\n    if (majorBase === Infinity) {\n        return true;\n    }\n    const compareMinor = !ignoreMinor;\n    const comparePatch = compareMinor && !ignorePatch;\n    if (allowHigherVersions) {\n        if (comparePatch && patch < patchBase || compareMinor && minor < minorBase) {\n            return false;\n        }\n        return major >= majorBase;\n    }\n    if (comparePatch && patch !== patchBase || compareMinor && minor !== minorBase) {\n        return false;\n    }\n    return major === majorBase;\n}\n/**\n * Get required semver parts count.\n * @param version - Semver parts or ranges.\n * @param options - Semver compare options.\n * @returns Required semver parts count.\n */ function getRequiredSemverPartsCount(version, options) {\n    const { ignoreMinor , ignorePatch , allowZeroSubversions  } = options;\n    let shouldRepeatCount = ignoreMinor ? 1 : ignorePatch ? 2 : 3;\n    if (allowZeroSubversions) {\n        for(let i = shouldRepeatCount - 1; i > 0; i--){\n            if (version[i] !== 0 || shouldRepeatCount === 1) {\n                break;\n            }\n            shouldRepeatCount--;\n        }\n    }\n    return shouldRepeatCount;\n}\n\n/**\n * Browsers strings to info objects.\n * @param browsersList - Browsers strings with family and version.\n * @returns Browser info objects.\n */ function parseBrowsersList(browsersList) {\n    return browsersList.reduce((browsers, browser)=>{\n        const [family, versionString, versionStringTo] = browser.split(/ |-/);\n        const version = semverify(versionString);\n        const versions = !version ? [] : versionStringTo ? rangeSemver(version, semverify(versionStringTo)) : [\n            version\n        ];\n        return versions.reduce((browsers, semver)=>{\n            if (semver) {\n                browsers.push({\n                    family,\n                    version: semver\n                });\n            }\n            return browsers;\n        }, browsers);\n    }, []);\n}\n/**\n * Request browsers list.\n * @param options - Options to get browsers list.\n * @returns Browser info objects.\n */ function getBrowsersList(options = {}) {\n    const { browsers , ...browserslistOptions } = options;\n    const browsersList = browserslist(browsers, browserslistOptions);\n    const parsedBrowsers = parseBrowsersList(browsersList);\n    return parsedBrowsers;\n}\n\n/**\n * Compare two arrays.\n * @param a - Array to compare.\n * @param b - Array to compare.\n * @param from - Index to start compare from.\n * @returns Equals or not.\n */ function compareArrays(a, b, from = 0) {\n    const len = a.length;\n    for(let i = from; i < len; i++){\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Clone simple object.\n * @param value\n * @returns Object clone.\n */ function clone(value) {\n    if (value === null || typeof value !== \"object\") {\n        return value;\n    }\n    /* eslint-disable */ const copy = Array.isArray(value) ? [] : {};\n    let i;\n    for(i in value){\n        copy[i] = clone(value[i]);\n    }\n    /* eslint-enable */ return copy;\n}\n/**\n * Concat arrays.\n * @param items\n * @returns Concatinated arrays.\n */ function concat(items) {\n    return [].concat(...items);\n}\n\n/**\n * Merge browser info object to map with versions.\n * @param browsers - Browser info object to merge.\n * @returns Merged browsers map.\n */ function mergeBrowserVersions(browsers) {\n    const merge = new Map();\n    browsers.forEach(({ family , version  })=>{\n        const versions = merge.get(family);\n        if (versions) {\n            const strVersion = version.join(\".\");\n            if (versions.every((_)=>_.join(\".\") !== strVersion)) {\n                versions.push(version);\n            }\n            return;\n        }\n        merge.set(family, [\n            version\n        ]);\n    });\n    merge.forEach((versions)=>{\n        versions.sort((a, b)=>{\n            for(const i in a){\n                if (a[i] !== b[i]) {\n                    return a[i] - b[i];\n                }\n            }\n            return 0;\n        });\n    });\n    return merge;\n}\n/**\n * Versions to ranged versions.\n * @param versions - Semver versions list.\n * @returns Ranged versions list.\n */ function versionsListToRanges(versions) {\n    if (versions.length < 2) {\n        return versions;\n    }\n    const max = versions.length + 1;\n    const ranges = [];\n    let prev = null;\n    let current = versions[0];\n    let major = [\n        current[SemverPart.Major]\n    ];\n    let minor = [\n        current[SemverPart.Minor]\n    ];\n    let patch = [\n        current[SemverPart.Patch]\n    ];\n    let part = null;\n    for(let i = 1; i < max; i++){\n        prev = versions[i - 1];\n        current = versions[i] || [];\n        for(let p = SemverPart.Major; p <= SemverPart.Patch; p++){\n            if ((p === part || part === null) && prev[p] + 1 === current[p] && compareArrays(prev, current, p + 1)) {\n                part = p;\n                if (p === SemverPart.Major) {\n                    major.push(current[SemverPart.Major]);\n                } else {\n                    major = current[SemverPart.Major];\n                }\n                if (p === SemverPart.Minor) {\n                    minor.push(current[SemverPart.Minor]);\n                } else {\n                    minor = current[SemverPart.Minor];\n                }\n                if (p === SemverPart.Patch) {\n                    patch.push(current[SemverPart.Patch]);\n                } else {\n                    patch = current[SemverPart.Patch];\n                }\n                break;\n            }\n            if (part === p || prev[p] !== current[p]) {\n                ranges.push([\n                    numbersToRanges(major),\n                    numbersToRanges(minor),\n                    numbersToRanges(patch)\n                ]);\n                major = [\n                    current[SemverPart.Major]\n                ];\n                minor = [\n                    current[SemverPart.Minor]\n                ];\n                patch = [\n                    current[SemverPart.Patch]\n                ];\n                part = null;\n                break;\n            }\n        }\n    }\n    return ranges;\n}\n\nfunction AstRegExpNode(body) {\n    return {\n        type: \"RegExp\",\n        body,\n        flags: \"\"\n    };\n}\nfunction AlternativeNode(...expressions) {\n    const exps = concat(expressions).filter(Boolean);\n    if (exps.length === 1) {\n        return exps[0];\n    }\n    return {\n        type: \"Alternative\",\n        expressions: exps\n    };\n}\nfunction SimpleCharNode(value) {\n    return {\n        type: \"Char\",\n        kind: \"simple\",\n        value: String(value),\n        codePoint: NaN\n    };\n}\nfunction MetaCharNode(value) {\n    return {\n        type: \"Char\",\n        kind: \"meta\",\n        value,\n        codePoint: NaN\n    };\n}\nfunction ClassRangeNode(from, to) {\n    return {\n        type: \"ClassRange\",\n        from,\n        to\n    };\n}\nfunction CharacterClassNode(...expressions) {\n    return {\n        type: \"CharacterClass\",\n        expressions: concat(expressions).filter(Boolean)\n    };\n}\nfunction SimpleQuantifierNode(kind) {\n    return {\n        type: \"Quantifier\",\n        kind,\n        greedy: true\n    };\n}\nfunction RangeQuantifierNode(from, to) {\n    return {\n        type: \"Quantifier\",\n        kind: \"Range\",\n        from,\n        to,\n        greedy: true\n    };\n}\nfunction CapturingGroupNode(expression) {\n    return {\n        type: \"Group\",\n        capturing: true,\n        expression,\n        number: null\n    };\n}\nfunction RepetitionNode(expression, quantifier) {\n    return {\n        type: \"Repetition\",\n        expression,\n        quantifier\n    };\n}\nfunction DisjunctionNode(...expressions) {\n    const exprs = concat(expressions).filter(Boolean);\n    if (exprs.length === 1) {\n        return exprs[0];\n    }\n    const disjunction = {\n        type: \"Disjunction\",\n        left: null,\n        right: exprs.pop()\n    };\n    exprs.reduceRight((disjunction, expr, i)=>{\n        if (i === 0) {\n            disjunction.left = expr;\n            return disjunction;\n        }\n        disjunction.left = {\n            type: \"Disjunction\",\n            left: null,\n            right: expr\n        };\n        return disjunction.left;\n    }, disjunction);\n    return disjunction;\n}\nfunction DisjunctionCapturingGroupNode(...expressions) {\n    const expr = DisjunctionNode(...expressions);\n    if (expr.type === \"Disjunction\") {\n        return CapturingGroupNode(expr);\n    }\n    return expr;\n}\nfunction DigitPatternNode() {\n    return MetaCharNode(\"\\\\d\");\n}\nfunction NumberPatternNode(quantifier = SimpleQuantifierNode(\"+\")) {\n    const numberPattern = RepetitionNode(DigitPatternNode(), quantifier);\n    return numberPattern;\n}\nfunction NumberCharsNode(value) {\n    return AlternativeNode(Array.from(String(value), SimpleCharNode));\n}\n\n/**\n * Check node whether is number pattern.\n * @param node - AST node to check.\n * @returns Is number pattern or not.\n */ function isNumberPatternNode(node) {\n    if (node.type === \"Group\" && node.expression.type === \"Repetition\") {\n        const { expression , quantifier  } = node.expression;\n        return expression.type === \"Char\" && expression.value === \"\\\\d\" && quantifier.kind === \"+\" && quantifier.greedy;\n    }\n    return false;\n}\n/**\n * Check node whether is char node.\n * @param node - AST node to check.\n * @param value - Value to compare.\n * @returns Is char node or not.\n */ function isCharNode(node, value) {\n    if (node && node.type === \"Char\") {\n        return typeof value === \"undefined\" || value instanceof RegExp && value.test(node.value) || String(value) === node.value;\n    }\n    return false;\n}\n/**\n * Check node whether is digit range.\n * @param node - AST node to check.\n * @returns Is digit range or not.\n */ function isDigitRangeNode(node) {\n    if (node.type === \"CharacterClass\" && node.expressions.length === 1) {\n        const [expression] = node.expressions;\n        return expression.type === \"ClassRange\" && isCharNode(expression.from, /\\d/) && isCharNode(expression.to, /\\d/);\n    }\n    return false;\n}\n/**\n * Check node whether is expression.\n * @param node - AST node to check.\n * @returns Is expression node or not.\n */ function isExpressionNode(node) {\n    return node.type !== \"RegExp\" && node.type !== \"ClassRange\" && node.type !== \"Quantifier\";\n}\nfunction parseRegex(regex) {\n    return typeof regex === \"string\" ? RegexpTree.parse(regex.replace(/^([^/])/, \"/$1\").replace(/([^/])$/, \"$1/\")) : regex instanceof RegExp ? RegexpTree.parse(regex) : regex;\n}\n/**\n * Get regex from string or AST.\n * @param src - String or AST.\n * @returns RegExp.\n */ function toRegex(src) {\n    return typeof src === \"string\" ? new RegExp(src) : new RegExp(RegexpTree.generate(src.body), src.flags);\n}\n/**\n * Get string from regex or AST.\n * @param src - RegExp or AST.\n * @returns String.\n */ function toString(src) {\n    return typeof src === \"string\" ? src : src instanceof RegExp ? src.toString() : RegexpTree.generate(src);\n}\n\nconst classes = [\n    \"RegExp\",\n    \"Disjunction\",\n    \"Alternative\",\n    \"Assertion\",\n    \"Char\",\n    \"CharacterClass\",\n    \"ClassRange\",\n    \"Backreference\",\n    \"Group\",\n    \"Repetition\",\n    \"Quantifier\"\n];\n/**\n * Create traversal visitors.\n * @param visitors\n * @returns Traversal handlers.\n */ function visitors(visitors) {\n    const { every  } = visitors;\n    if (!every) {\n        return visitors;\n    }\n    if (typeof every === \"function\") {\n        return {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"*\": every,\n            ...visitors\n        };\n    }\n    return classes.reduce((newVisitors, className)=>{\n        const visitor = visitors[className];\n        const visitorPre = visitor ? \"pre\" in visitor ? visitor.pre : visitor : null;\n        const visitorPost = visitor ? \"post\" in visitor ? visitor.post : null : null;\n        newVisitors[className] = {\n            pre (nodePath) {\n                if (every.pre(nodePath) !== false && visitorPre) {\n                    return visitorPre(nodePath);\n                }\n                return true;\n            },\n            post (nodePath) {\n                if (every.post(nodePath) !== false && visitorPost) {\n                    return visitorPost(nodePath);\n                }\n                return true;\n            }\n        };\n        return newVisitors;\n    }, {});\n}\n\nfunction optimizeRegex(regex) {\n    // Optimization requires filled codePoints\n    const regexAst = RegexpTree.optimize(parseRegex(toString(regex))).getAST();\n    RegexpTree.traverse(regexAst, {\n        Group (nodePath) {\n            const { parent , node  } = nodePath;\n            const { expression  } = node;\n            node.capturing = true;\n            if (parent.type === \"RegExp\" || expression.type !== \"Disjunction\" && parent.type !== \"Repetition\" || expression.type === \"Disjunction\" && parent.type === \"Disjunction\") {\n                nodePath.replace(nodePath.node.expression);\n            }\n        }\n    });\n    return regexAst;\n}\n/**\n * Merge digits patterns if possible.\n * @param a\n * @param b\n * @returns Merged node.\n */ function mergeDigits(a, b) {\n    if (isCharNode(a) && isCharNode(b) && a.value === b.value) {\n        return b;\n    }\n    if (isCharNode(a, /\\d/) && isDigitRangeNode(b) && Number(b.expressions[0].from.value) - Number(a.value) === 1) {\n        return {\n            ...b,\n            expressions: [\n                {\n                    ...b.expressions[0],\n                    from: a\n                }\n            ]\n        };\n    }\n    if (isDigitRangeNode(a) && isCharNode(b, /\\d/) && Number(b.value) - Number(a.expressions[0].to.value) === 1) {\n        return {\n            ...a,\n            expressions: [\n                {\n                    ...a.expressions[0],\n                    to: b\n                }\n            ]\n        };\n    }\n    return null;\n}\n/**\n * Optimize segment number patterns.\n * @param patterns\n * @returns Optimized segment number patterns.\n */ function optimizeSegmentNumberPatterns(patterns) {\n    return patterns.reduce((patterns, node)=>{\n        const prevNode = patterns[patterns.length - 1];\n        if (prevNode && node.type === \"Alternative\" && prevNode.type === \"Alternative\" && node.expressions.length === prevNode.expressions.length) {\n            const merged = prevNode.expressions.reduceRight((exps, exp, i)=>{\n                if (!exps) {\n                    return exps;\n                }\n                const merged = mergeDigits(exp, node.expressions[i]);\n                if (merged) {\n                    exps.unshift(merged);\n                } else {\n                    return null;\n                }\n                return exps;\n            }, []);\n            if (merged) {\n                node.expressions = merged;\n                patterns.pop();\n            }\n        }\n        patterns.push(node);\n        return patterns;\n    }, []);\n}\n\n/**\n * Transform number to digits array.\n * @param num - Target number.\n * @returns Digits array.\n */ function numberToDigits(num) {\n    return Array.from(num.toString(), Number);\n}\n\n/**\n * Get digit pattern.\n * @param digit - Ray start.\n * @param includes - Include start digit or use next.\n * @returns Digit pattern.\n */ function rayRangeDigitPattern(digit, includes) {\n    const rangeStart = digit + Number(!includes);\n    if (rangeStart === 0) {\n        return DigitPatternNode();\n    }\n    if (rangeStart === 9) {\n        return SimpleCharNode(\"9\");\n    }\n    if (rangeStart > 9) {\n        return null;\n    }\n    return CharacterClassNode(ClassRangeNode(SimpleCharNode(rangeStart), SimpleCharNode(\"9\")));\n}\n/**\n * Create numeric ray pattern.\n * @param from - Start from this number.\n * @returns Numeric ray pattern parts.\n */ function rayToNumberPatterns(from) {\n    if (from === 0) {\n        return [\n            NumberPatternNode()\n        ];\n    }\n    const digits = numberToDigits(from);\n    const digitsCount = digits.length;\n    const other = NumberPatternNode(RangeQuantifierNode(digitsCount + 1));\n    const zeros = digitsCount - 1;\n    if (from / Math.pow(10, zeros) === digits[0]) {\n        return [\n            AlternativeNode(rayRangeDigitPattern(digits[0], true), Array.from({\n                length: zeros\n            }, DigitPatternNode)),\n            other\n        ];\n    }\n    const raysNumberPatterns = digits.reduce((topNodes, _, i)=>{\n        const ri = digitsCount - i - 1;\n        const d = i === 0;\n        let prev = SimpleCharNode(\"\");\n        const nodes = digits.reduce((nodes, digit, j)=>{\n            if (j < ri) {\n                nodes.push(SimpleCharNode(digit));\n            } else if (prev) {\n                if (j > ri) {\n                    nodes.push(DigitPatternNode());\n                } else {\n                    prev = rayRangeDigitPattern(digit, d);\n                    if (prev) {\n                        nodes.push(prev);\n                    } else {\n                        return [];\n                    }\n                }\n            }\n            return nodes;\n        }, []);\n        if (nodes.length) {\n            topNodes.push(nodes);\n        }\n        return topNodes;\n    }, []);\n    const numberPatterns = raysNumberPatterns.map((_)=>AlternativeNode(_));\n    numberPatterns.push(other);\n    return numberPatterns;\n}\n\n/**\n * Get digit pattern.\n * @param from - Segment start.\n * @param to - Segment end.\n * @param zeros - Zeros to add as prefix.\n * @returns Digit pattern.\n */ function segmentRangeNumberPattern(from, to, zeros) {\n    if (to < from) {\n        return null;\n    }\n    const fromNode = SimpleCharNode(from);\n    const toNode = SimpleCharNode(to);\n    const zerosPrefix = typeof zeros === \"number\" && zeros > 0 ? Array.from({\n        length: zeros\n    }, ()=>SimpleCharNode(0)) : [];\n    const addPrefix = zerosPrefix.length ? (node)=>AlternativeNode(zerosPrefix, node) : (node)=>node;\n    if (from === to) {\n        return addPrefix(fromNode);\n    }\n    if (from === 0 && to === 9) {\n        return addPrefix(DigitPatternNode());\n    }\n    if (to - from === 1) {\n        return addPrefix(CharacterClassNode(fromNode, toNode));\n    }\n    return addPrefix(CharacterClassNode(ClassRangeNode(fromNode, toNode)));\n}\n/**\n * Split segment range to decade ranges.\n * @param from - Segment start.\n * @param to - Segment end.\n * @returns Ranges.\n */ function splitToDecadeRanges(from, to) {\n    const ranges = [];\n    let num = from;\n    let decade = 1;\n    do {\n        decade *= 10;\n        if (num < decade) {\n            ranges.push([\n                num,\n                Math.min(decade - 1, to)\n            ]);\n            num = decade;\n        }\n    }while (decade <= to);\n    return ranges;\n}\n/**\n * Get common and diffs of two numbers (arrays of digits).\n * @param a - Digits.\n * @param b - Other digits.\n * @returns Common part and diffs.\n */ function splitCommonDiff(a, b) {\n    const len = a.length;\n    if (len !== b.length || a[0] !== b[0]) {\n        return null;\n    }\n    let common = a[0].toString();\n    let currA = 0;\n    let currB = 0;\n    let diffA = \"\";\n    let diffB = \"\";\n    for(let i = 1; i < len; i++){\n        currA = a[i];\n        currB = b[i];\n        if (currA === currB && diffA === \"\" && diffB === \"\") {\n            common += currA;\n        } else {\n            diffA += currA;\n            diffB += currB;\n        }\n    }\n    return [\n        common,\n        parseInt(diffA, 10),\n        parseInt(diffB, 10)\n    ];\n}\n/**\n * Get segment patterns.\n * @param from - Segment start.\n * @param to - Segment end.\n * @param digitsInNumber - How many digits should be en number. Will be filled by zeros.\n * @returns Segment patterns.\n */ function segmentToNumberPatterns(from, to, digitsInNumber = 0) {\n    const fromDigits = numberToDigits(from);\n    const digitsCount = fromDigits.length;\n    if (from < 10 && to < 10 || from === to) {\n        const zeros = digitsInNumber - digitsCount;\n        return [\n            segmentRangeNumberPattern(from, to, zeros)\n        ];\n    }\n    const toDigits = numberToDigits(to);\n    if (digitsCount !== toDigits.length) {\n        const decadeRanges = splitToDecadeRanges(from, to);\n        const parts = concat(decadeRanges.map(([from, to])=>segmentToNumberPatterns(from, to, digitsInNumber)));\n        return parts;\n    }\n    const commonStart = splitCommonDiff(fromDigits, toDigits);\n    if (Array.isArray(commonStart)) {\n        const [common, from1, to1] = commonStart;\n        const digitsInNumber1 = digitsCount - common.length;\n        const diffParts = segmentToNumberPatterns(from1, to1, digitsInNumber1);\n        return [\n            AlternativeNode(Array.from(common, SimpleCharNode), DisjunctionCapturingGroupNode(diffParts))\n        ];\n    }\n    const range = Array.from({\n        length: digitsCount - 1\n    });\n    const middleSegment = segmentRangeNumberPattern(fromDigits[0] + 1, toDigits[0] - 1);\n    const parts1 = [\n        ...range.map((_, i)=>{\n            const ri = digitsCount - i - 1;\n            const d = Number(i > 0);\n            return AlternativeNode(fromDigits.map((digit, j)=>{\n                if (j < ri) {\n                    return SimpleCharNode(digit);\n                }\n                if (j > ri) {\n                    return segmentRangeNumberPattern(0, 9);\n                }\n                return segmentRangeNumberPattern(digit + d, 9);\n            }));\n        }),\n        // but output more readable\n        ...middleSegment ? [\n            AlternativeNode(middleSegment, Array.from({\n                length: digitsCount - 1\n            }, ()=>DigitPatternNode()))\n        ] : [],\n        ...range.map((_, i)=>{\n            const ri = digitsCount - i - 1;\n            const d = Number(i > 0);\n            return AlternativeNode(toDigits.map((digit, j)=>{\n                if (j < ri) {\n                    return SimpleCharNode(digit);\n                }\n                if (j > ri) {\n                    return segmentRangeNumberPattern(0, 9);\n                }\n                return segmentRangeNumberPattern(0, digit - d);\n            }));\n        })\n    ];\n    return optimizeSegmentNumberPatterns(parts1);\n}\n\n/**\n * Get regex for given numeric range.\n * @param from - Range start.\n * @param to - Range end.\n * @returns Range pattern.\n */ function rangeToRegex(from, to = Infinity) {\n    if (from === Infinity) {\n        return NumberPatternNode();\n    }\n    const numberPatterns = to === Infinity ? rayToNumberPatterns(from) : segmentToNumberPatterns(from, to);\n    const regex = DisjunctionCapturingGroupNode(numberPatterns);\n    return regex;\n}\n\n/**\n * Find matched versions.\n * @param minVersion - Semver version.\n * @param maxVersion - Semver version.\n * @param bases - Base semver versions.\n * @param options - Semver compare options.\n * @returns Matched versions.\n */ function findMatchedVersions(minVersion, maxVersion, bases, options) {\n    const compareOptions = {\n        ...options,\n        allowHigherVersions: true\n    };\n    const minComparator = (ver)=>compareSemvers(ver, minVersion, compareOptions);\n    const maxComparator = (ver)=>compareSemvers(maxVersion, ver, compareOptions);\n    const comparator = minVersion && maxVersion ? (ver)=>minComparator(ver) && maxComparator(ver) : minVersion ? minComparator : maxVersion ? maxComparator : ()=>true;\n    return bases.filter(comparator);\n}\n\n/**\n * Get useragent regexes for given browsers.\n * @param browsers - Browsers.\n * @param options - Semver compare options.\n * @param targetRegexes - Override default regexes.\n * @returns User agent regexes.\n */ function getRegexesForBrowsers(browsers, options, targetRegexes = regexes) {\n    const result = [];\n    let prevFamily = \"\";\n    let prevRegexIsGlobal = false;\n    targetRegexes.forEach((regex)=>{\n        const requestVersions = browsers.get(regex.family);\n        if (!requestVersions) {\n            return;\n        }\n        let { version , minVersion , maxVersion  } = regex;\n        if (version) {\n            minVersion = version;\n            maxVersion = version;\n        }\n        let matchedVersions = findMatchedVersions(minVersion, maxVersion, requestVersions, options);\n        if (matchedVersions.length) {\n            // regex contains global patch\n            if (prevFamily === regex.family && prevRegexIsGlobal) {\n                version = undefined;\n                minVersion = undefined;\n                maxVersion = undefined;\n                matchedVersions = requestVersions;\n                result.pop();\n            }\n            result.push({\n                ...regex,\n                version,\n                minVersion,\n                maxVersion,\n                requestVersions,\n                matchedVersions\n            });\n        }\n        prevRegexIsGlobal = !version && !minVersion && !maxVersion;\n        prevFamily = regex.family;\n    });\n    return result;\n}\n\n/**\n * Compile regexes.\n * @param regexes - Objects with info about compiled regexes.\n * @returns Objects with info about compiled regexes.\n */ function compileRegexes(regexes) {\n    return regexes.map(({ regexAst , ...regex })=>{\n        const optimizedRegexAst = optimizeRegex(regexAst);\n        return {\n            ...regex,\n            regexAst: optimizedRegexAst,\n            regex: toRegex(optimizedRegexAst)\n        };\n    });\n}\n/**\n * Compile regex.\n * @param regexes - Objects with info about compiled regexes.\n * @returns Compiled common regex.\n */ function compileRegex(regexes) {\n    const partsRegexes = regexes.map(({ regexAst  })=>CapturingGroupNode(regexAst.body));\n    const regexAst = optimizeRegex(AstRegExpNode(DisjunctionCapturingGroupNode(partsRegexes)));\n    return toRegex(regexAst);\n}\n\n/**\n * Get number patterns count from the regex.\n * @param regex - Target regex.\n * @returns Number patterns count.\n */ function getNumberPatternsCount(regex) {\n    const regexAst = parseRegex(regex);\n    let count = 0;\n    RegexpTree.traverse(regexAst, {\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node)) {\n                count++;\n            }\n        }\n    });\n    return count;\n}\nfunction replaceNumberPatterns(regex, numbers, numberPatternsCount) {\n    let regexAst = parseRegex(regex);\n    const numbersToReplace = typeof numberPatternsCount === \"number\" && numberPatternsCount < numbers.length ? numbers.slice(0, numberPatternsCount) : numbers.slice();\n    RegexpTree.traverse(regexAst, visitors({\n        every () {\n            return Boolean(numbersToReplace.length);\n        },\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node) && numbersToReplace.length) {\n                if (regexAst === nodePath.node) {\n                    regexAst = numbersToReplace.shift();\n                } else {\n                    nodePath.replace(numbersToReplace.shift());\n                }\n                return false;\n            }\n            return true;\n        }\n    }));\n    return regexAst;\n}\n/**\n * Get from regex part with number patterns.\n * @param regex - Target regex.\n * @param numberPatternsCount - Number patterns to extract.\n * @returns Regex part with number patterns.\n */ function getNumberPatternsPart(regex, numberPatternsCount) {\n    const regexAst = parseRegex(regex);\n    const maxNumbersCount = Math.min(getNumberPatternsCount(regexAst), numberPatternsCount || Infinity);\n    const expressions = [];\n    let numbersCounter = 0;\n    let containsNumberPattern = false;\n    RegexpTree.traverse(regexAst, visitors({\n        every: {\n            pre ({ node , parent  }) {\n                if (node === regexAst) {\n                    return true;\n                }\n                if (!isExpressionNode(node)) {\n                    return false;\n                }\n                if (parent === regexAst) {\n                    containsNumberPattern = false;\n                }\n                return numbersCounter < maxNumbersCount;\n            },\n            post ({ node , parent  }) {\n                if (node !== regexAst && parent === regexAst && isExpressionNode(node) && (containsNumberPattern || numbersCounter > 0 && numbersCounter < maxNumbersCount)) {\n                    expressions.push(node);\n                }\n            }\n        },\n        Group (nodePath) {\n            if (isNumberPatternNode(nodePath.node) && numbersCounter < maxNumbersCount) {\n                containsNumberPattern = true;\n                numbersCounter++;\n                return false;\n            }\n            return true;\n        }\n    }));\n    if (expressions.length === 1 && !isNumberPatternNode(expressions[0])) {\n        return getNumberPatternsPart(expressions[0], maxNumbersCount);\n    }\n    return expressions;\n}\n/**\n * Ranged semver to regex patterns.\n * @param rangedVersion - Ranged semver.\n * @param options - Semver compare options.\n * @returns Array of regex pattern.\n */ function rangedSemverToRegex(rangedVersion, options) {\n    const { ignoreMinor , ignorePatch , allowHigherVersions  } = options;\n    const ignoreIndex = rangedVersion[0] === Infinity ? 0 : ignoreMinor ? 1 : ignorePatch ? 2 : 3;\n    if (allowHigherVersions) {\n        const numberPatterns = [];\n        let prevWasZero = true;\n        let d = 0;\n        let start = 0;\n        const createMapper = (i)=>(range, j)=>{\n                if (j >= ignoreIndex) {\n                    return NumberPatternNode();\n                }\n                start = Array.isArray(range) ? range[0] : range;\n                if (j < i) {\n                    return NumberCharsNode(start);\n                }\n                if (j > i) {\n                    return NumberPatternNode();\n                }\n                return rangeToRegex(start + d);\n            };\n        for(let i = ignoreIndex - 1; i >= 0; i--){\n            if (prevWasZero && !rangedVersion[i]) {\n                continue;\n            }\n            prevWasZero = false;\n            numberPatterns.push(rangedVersion.map(createMapper(i)));\n            d = 1;\n        }\n        return numberPatterns;\n    }\n    const numberPatterns1 = rangedVersion.map((range, i)=>{\n        if (i >= ignoreIndex) {\n            return NumberPatternNode();\n        }\n        if (Array.isArray(range)) {\n            return rangeToRegex(range[0], range[1]);\n        }\n        return NumberCharsNode(range);\n    });\n    return [\n        numberPatterns1\n    ];\n}\n\nfunction applyVersionsToRegex(regex, versions, options) {\n    const { allowHigherVersions  } = options;\n    const regexAst = parseRegex(regex);\n    const finalVersions = allowHigherVersions && versions.length ? [\n        versions[0]\n    ] : versions;\n    const maxRequiredPartsCount = finalVersions.reduce((maxRequiredPartsCount, version)=>Math.max(maxRequiredPartsCount, getRequiredSemverPartsCount(version, options)), 1);\n    const numberPatternsPart = getNumberPatternsPart(regexAst, maxRequiredPartsCount);\n    const versionsPart = DisjunctionCapturingGroupNode(...finalVersions.map((version)=>rangedSemverToRegex(version, options).map((parts)=>replaceNumberPatterns(AlternativeNode(clone(numberPatternsPart)), parts, maxRequiredPartsCount))));\n    RegexpTree.traverse(regexAst, visitors({\n        every (nodePath) {\n            if (!numberPatternsPart.length) {\n                return false;\n            }\n            if (nodePath.node === numberPatternsPart[0]) {\n                if (numberPatternsPart.length === 1) {\n                    nodePath.replace(versionsPart);\n                } else {\n                    nodePath.remove();\n                }\n                numberPatternsPart.shift();\n            }\n            return true;\n        }\n    }));\n    return regexAst;\n}\n/**\n * Apply browser versions to info objects.\n * @param browserRegexes - Objects with requested browser version and regex.\n * @param options - Semver compare options.\n * @returns Objects with requested browser version and regex special for this version.\n */ function applyVersionsToRegexes(browserRegexes, options) {\n    return browserRegexes.map(({ regex: sourceRegex , version , maxVersion , matchedVersions , ...other })=>{\n        let regexAst = parseRegex(sourceRegex);\n        if (!version) {\n            regexAst = applyVersionsToRegex(regexAst, versionsListToRanges(matchedVersions), {\n                ...options,\n                allowHigherVersions: !maxVersion && options.allowHigherVersions\n            });\n        }\n        return {\n            regex: null,\n            sourceRegex,\n            regexAst,\n            version,\n            maxVersion,\n            matchedVersions,\n            ...other\n        };\n    });\n}\n\nconst defaultOptions = {\n    ignoreMinor: false,\n    ignorePatch: true,\n    allowZeroSubversions: false,\n    allowHigherVersions: false\n};\n/**\n * Get source regexes objects from browserslist query.\n * @param options - Browserslist and semver compare options.\n * @returns Source regexes objects.\n */ function getPreUserAgentRegexes(options = {}) {\n    const finalOptions = {\n        ...defaultOptions,\n        ...options\n    };\n    const browsersList = getBrowsersList(finalOptions);\n    const mergedBrowsers = mergeBrowserVersions(browsersList);\n    const sourceRegexes = getRegexesForBrowsers(mergedBrowsers, finalOptions);\n    const versionedRegexes = applyVersionsToRegexes(sourceRegexes, finalOptions);\n    return versionedRegexes;\n}\n/**\n * Compile browserslist query to regexes.\n * @param options - Browserslist and semver compare options.\n * @returns Objects with info about compiled regexes.\n */ function getUserAgentRegexes(options = {}) {\n    return compileRegexes(getPreUserAgentRegexes(options));\n}\n/**\n * Compile browserslist query to regex.\n * @param options - Browserslist and semver compare options.\n * @returns Compiled regex.\n */ function getUserAgentRegex(options = {}) {\n    return compileRegex(getPreUserAgentRegexes(options));\n}\n\nexport { AlternativeNode, AstRegExpNode, CapturingGroupNode, CharacterClassNode, ClassRangeNode, DigitPatternNode, DisjunctionCapturingGroupNode, DisjunctionNode, MetaCharNode, NumberCharsNode, NumberPatternNode, RangeQuantifierNode, RepetitionNode, SemverPart, SimpleCharNode, SimpleQuantifierNode, applyVersionsToRegex, applyVersionsToRegexes, clone, compareArrays, compareSemvers, compileRegex, compileRegexes, concat, defaultOptions, findMatchedVersions, getBrowsersList, getNumberPatternsCount, getNumberPatternsPart, getPreUserAgentRegexes, getRegexesForBrowsers, getRequiredSemverPartsCount, getUserAgentRegex, getUserAgentRegexes, isCharNode, isDigitRangeNode, isExpressionNode, isNumberPatternNode, mergeBrowserVersions, mergeDigits, numberToDigits, numbersToRanges, optimizeRegex, optimizeSegmentNumberPatterns, parseBrowsersList, parseRegex, rangeSemver, rangeToRegex, rangedSemverToRegex, rayRangeDigitPattern, rayToNumberPatterns, replaceNumberPatterns, segmentRangeNumberPattern, segmentToNumberPatterns, semverify, splitCommonDiff, splitToDecadeRanges, toRegex, toString, versionsListToRanges, visitors };\n//# sourceMappingURL=index.js.map\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace standard character classes with\n * their meta symbols equivalents.\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = {\n  _hasIFlag: false,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._hasIFlag = ast.flags.includes('i');\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  CharacterClass: function CharacterClass(path) {\n    // [0-9] -> \\d\n    rewriteNumberRanges(path);\n\n    // [a-zA-Z_0-9] -> \\w\n    rewriteWordRanges(path, this._hasIFlag, this._hasUFlag);\n\n    // [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff] -> \\s\n    rewriteWhitespaceRanges(path);\n  }\n};\n\n/**\n * Rewrites number ranges: [0-9] -> \\d\n */\nfunction rewriteNumberRanges(path) {\n  var node = path.node;\n\n\n  node.expressions.forEach(function (expression, i) {\n    if (isFullNumberRange(expression)) {\n      path.getChild(i).replace({\n        type: 'Char',\n        value: '\\\\d',\n        kind: 'meta'\n      });\n    }\n  });\n}\n\n/**\n * Rewrites word ranges: [a-zA-Z_0-9] -> \\w\n * Thus, the ranges may go in any order, and other symbols/ranges\n * are kept untouched, e.g. [a-z_\\dA-Z$] -> [\\w$]\n */\nfunction rewriteWordRanges(path, hasIFlag, hasUFlag) {\n  var node = path.node;\n\n\n  var numberPath = null;\n  var lowerCasePath = null;\n  var upperCasePath = null;\n  var underscorePath = null;\n  var u017fPath = null;\n  var u212aPath = null;\n\n  node.expressions.forEach(function (expression, i) {\n    // \\d\n    if (isMetaChar(expression, '\\\\d')) {\n      numberPath = path.getChild(i);\n    }\n\n    // a-z\n    else if (isLowerCaseRange(expression)) {\n        lowerCasePath = path.getChild(i);\n      }\n\n      // A-Z\n      else if (isUpperCaseRange(expression)) {\n          upperCasePath = path.getChild(i);\n        }\n\n        // _\n        else if (isUnderscore(expression)) {\n            underscorePath = path.getChild(i);\n          } else if (hasIFlag && hasUFlag && isCodePoint(expression, 0x017f)) {\n            u017fPath = path.getChild(i);\n          } else if (hasIFlag && hasUFlag && isCodePoint(expression, 0x212a)) {\n            u212aPath = path.getChild(i);\n          }\n  });\n\n  // If we found the whole pattern, replace it.\n  if (numberPath && (lowerCasePath && upperCasePath || hasIFlag && (lowerCasePath || upperCasePath)) && underscorePath && (!hasUFlag || !hasIFlag || u017fPath && u212aPath)) {\n    // Put \\w in place of \\d.\n    numberPath.replace({\n      type: 'Char',\n      value: '\\\\w',\n      kind: 'meta'\n    });\n\n    // Other paths are removed.\n    if (lowerCasePath) {\n      lowerCasePath.remove();\n    }\n    if (upperCasePath) {\n      upperCasePath.remove();\n    }\n    underscorePath.remove();\n    if (u017fPath) {\n      u017fPath.remove();\n    }\n    if (u212aPath) {\n      u212aPath.remove();\n    }\n  }\n}\n\n/**\n * Rewrites whitespace ranges: [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff] -> \\s.\n */\nvar whitespaceRangeTests = [function (node) {\n  return isChar(node, ' ');\n}].concat(_toConsumableArray(['\\\\f', '\\\\n', '\\\\r', '\\\\t', '\\\\v'].map(function (char) {\n  return function (node) {\n    return isMetaChar(node, char);\n  };\n})), _toConsumableArray([0x00a0, 0x1680, 0x2028, 0x2029, 0x202f, 0x205f, 0x3000, 0xfeff].map(function (codePoint) {\n  return function (node) {\n    return isCodePoint(node, codePoint);\n  };\n})), [function (node) {\n  return node.type === 'ClassRange' && isCodePoint(node.from, 0x2000) && isCodePoint(node.to, 0x200a);\n}]);\n\nfunction rewriteWhitespaceRanges(path) {\n  var node = path.node;\n\n\n  if (node.expressions.length < whitespaceRangeTests.length || !whitespaceRangeTests.every(function (test) {\n    return node.expressions.some(function (expression) {\n      return test(expression);\n    });\n  })) {\n    return;\n  }\n\n  // If we found the whole pattern, replace it.\n\n  // Put \\s in place of \\n.\n  var nNode = node.expressions.find(function (expression) {\n    return isMetaChar(expression, '\\\\n');\n  });\n  nNode.value = '\\\\s';\n  nNode.symbol = undefined;\n  nNode.codePoint = NaN;\n\n  // Other paths are removed.\n  node.expressions.map(function (expression, i) {\n    return whitespaceRangeTests.some(function (test) {\n      return test(expression);\n    }) ? path.getChild(i) : undefined;\n  }).filter(Boolean).forEach(function (path) {\n    return path.remove();\n  });\n}\n\nfunction isFullNumberRange(node) {\n  return node.type === 'ClassRange' && node.from.value === '0' && node.to.value === '9';\n}\n\nfunction isChar(node, value) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'simple';\n\n  return node.type === 'Char' && node.value === value && node.kind === kind;\n}\n\nfunction isMetaChar(node, value) {\n  return isChar(node, value, 'meta');\n}\n\nfunction isLowerCaseRange(node) {\n  return node.type === 'ClassRange' && node.from.value === 'a' && node.to.value === 'z';\n}\n\nfunction isUpperCaseRange(node) {\n  return node.type === 'ClassRange' && node.from.value === 'A' && node.to.value === 'Z';\n}\n\nfunction isUnderscore(node) {\n  return node.type === 'Char' && node.value === '_' && node.kind === 'simple';\n}\n\nfunction isCodePoint(node, codePoint) {\n  return node.type === 'Char' && node.kind === 'unicode' && node.codePoint === codePoint;\n}","module.exports.browserVersions = require('../../data/browserVersions')\n","var AND_REGEXP = /^\\s+and\\s+(.*)/i\nvar OR_REGEXP = /^(?:,\\s*|\\s+or\\s+)(.*)/i\n\nfunction flatten(array) {\n  if (!Array.isArray(array)) return [array]\n  return array.reduce(function (a, b) {\n    return a.concat(flatten(b))\n  }, [])\n}\n\nfunction find(string, predicate) {\n  for (var max = string.length, n = 1; n <= max; n++) {\n    var parsed = string.substr(-n, n)\n    if (predicate(parsed, n, max)) {\n      return string.slice(0, -n)\n    }\n  }\n  return ''\n}\n\nfunction matchQuery(all, query) {\n  var node = { query: query }\n  if (query.indexOf('not ') === 0) {\n    node.not = true\n    query = query.slice(4)\n  }\n\n  for (var name in all) {\n    var type = all[name]\n    var match = query.match(type.regexp)\n    if (match) {\n      node.type = name\n      for (var i = 0; i < type.matches.length; i++) {\n        node[type.matches[i]] = match[i + 1]\n      }\n      return node\n    }\n  }\n\n  node.type = 'unknown'\n  return node\n}\n\nfunction matchBlock(all, string, qs) {\n  var node\n  return find(string, function (parsed, n, max) {\n    if (AND_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(AND_REGEXP)[1])\n      node.compose = 'and'\n      qs.unshift(node)\n      return true\n    } else if (OR_REGEXP.test(parsed)) {\n      node = matchQuery(all, parsed.match(OR_REGEXP)[1])\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    } else if (n === max) {\n      node = matchQuery(all, parsed.trim())\n      node.compose = 'or'\n      qs.unshift(node)\n      return true\n    }\n    return false\n  })\n}\n\nmodule.exports = function parse(all, queries) {\n  if (!Array.isArray(queries)) queries = [queries]\n  return flatten(\n    queries.map(function (block) {\n      var qs = []\n      do {\n        block = matchBlock(all, block, qs)\n      } while (block)\n      return qs\n    })\n  )\n}\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary escape.\n *\n * \\e -> e\n *\n * [\\(] -> [(]\n */\n\nmodule.exports = {\n  _hasXFlag: false,\n  init: function init(ast) {\n    this._hasXFlag = ast.flags.includes('x');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (!node.escaped) {\n      return;\n    }\n\n    if (shouldUnescape(path, this._hasXFlag)) {\n      delete node.escaped;\n    }\n  }\n};\n\nfunction shouldUnescape(path, hasXFlag) {\n  var value = path.node.value,\n      index = path.index,\n      parent = path.parent;\n\n  // In char class (, etc are allowed.\n\n  if (parent.type !== 'CharacterClass' && parent.type !== 'ClassRange') {\n    return !preservesEscape(value, index, parent, hasXFlag);\n  }\n\n  return !preservesInCharClass(value, index, parent);\n}\n\n/**\n * \\], \\\\, \\^, \\-\n */\nfunction preservesInCharClass(value, index, parent) {\n  if (value === '^') {\n    // Avoid [\\^a] turning into [^a]\n    return index === 0 && !parent.negative;\n  }\n  if (value === '-') {\n    // Avoid [a\\-z] turning into [a-z]\n    return true;\n  }\n  return (/[\\]\\\\]/.test(value)\n  );\n}\n\nfunction preservesEscape(value, index, parent, hasXFlag) {\n  if (value === '{') {\n    return preservesOpeningCurlyBraceEscape(index, parent);\n  }\n\n  if (value === '}') {\n    return preservesClosingCurlyBraceEscape(index, parent);\n  }\n\n  if (hasXFlag && /[ #]/.test(value)) {\n    return true;\n  }\n\n  return (/[*[()+?^$./\\\\|]/.test(value)\n  );\n}\n\nfunction consumeNumbers(startIndex, parent, rtl) {\n  var i = startIndex;\n  var siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n\n  while (siblingNode && siblingNode.type === 'Char' && siblingNode.kind === 'simple' && !siblingNode.escaped && /\\d/.test(siblingNode.value)) {\n    rtl ? i-- : i++;\n    siblingNode = (rtl ? i >= 0 : i < parent.expressions.length) && parent.expressions[i];\n  }\n\n  return Math.abs(startIndex - i);\n}\n\nfunction isSimpleChar(node, value) {\n  return node && node.type === 'Char' && node.kind === 'simple' && !node.escaped && node.value === value;\n}\n\nfunction preservesOpeningCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbFollowingNumbers = consumeNumbers(index + 1, parent);\n  var i = index + nbFollowingNumbers + 1;\n  var nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n  if (nbFollowingNumbers) {\n    // Avoid \\{3} turning into {3}\n    if (isSimpleChar(nextSiblingNode, '}')) {\n      return true;\n    }\n\n    if (isSimpleChar(nextSiblingNode, ',')) {\n      nbFollowingNumbers = consumeNumbers(i + 1, parent);\n      i = i + nbFollowingNumbers + 1;\n      nextSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n      // Avoid \\{3,} turning into {3,}\n      return isSimpleChar(nextSiblingNode, '}');\n    }\n  }\n  return false;\n}\n\nfunction preservesClosingCurlyBraceEscape(index, parent) {\n  // (?:\\{) -> (?:{)\n  if (index == null) {\n    return false;\n  }\n\n  var nbPrecedingNumbers = consumeNumbers(index - 1, parent, true);\n  var i = index - nbPrecedingNumbers - 1;\n  var previousSiblingNode = i >= 0 && parent.expressions[i];\n\n  // Avoid {3\\} turning into {3}\n  if (nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{')) {\n    return true;\n  }\n\n  if (isSimpleChar(previousSiblingNode, ',')) {\n    nbPrecedingNumbers = consumeNumbers(i - 1, parent, true);\n    i = i - nbPrecedingNumbers - 1;\n    previousSiblingNode = i < parent.expressions.length && parent.expressions[i];\n\n    // Avoid {3,\\} turning into {3,}\n    return nbPrecedingNumbers && isSimpleChar(previousSiblingNode, '{');\n  }\n  return false;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to transform surrogate pairs into single unicode code point\n *\n * \\ud83d\\ude80 -> \\u{1f680}\n */\n\nmodule.exports = {\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('u');\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n    if (node.kind !== 'unicode' || !node.isSurrogatePair || isNaN(node.codePoint)) {\n      return;\n    }\n    node.value = '\\\\u{' + node.codePoint.toString(16) + '}';\n    delete node.isSurrogatePair;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar compatTransforms = require('./transforms');\nvar _transform = require('../transform');\n\nmodule.exports = {\n  /**\n   * Translates a regexp in new syntax to equivalent regexp in old syntax.\n   *\n   * @param string|RegExp|AST - regexp\n   * @param Array transformsWhitelist - names of the transforms to apply\n   */\n  transform: function transform(regexp) {\n    var transformsWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var transformToApply = transformsWhitelist.length > 0 ? transformsWhitelist : Object.keys(compatTransforms);\n\n    var result = void 0;\n\n    // Collect extra data per transform.\n    var extra = {};\n\n    transformToApply.forEach(function (transformName) {\n\n      if (!compatTransforms.hasOwnProperty(transformName)) {\n        throw new Error('Unknown compat-transform: ' + transformName + '. ' + 'Available transforms are: ' + Object.keys(compatTransforms).join(', '));\n      }\n\n      var handler = compatTransforms[transformName];\n\n      result = _transform.transform(regexp, handler);\n      regexp = result.getAST();\n\n      // Collect `extra` transform result.\n      if (typeof handler.getExtra === 'function') {\n        extra[transformName] = handler.getExtra();\n      }\n    });\n\n    // Set the final extras for all transforms.\n    result.setExtra(extra);\n\n    return result;\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace single char character classes with\n * just that character.\n *\n * [\\d] -> \\d, [^\\w] -> \\W\n */\n\nmodule.exports = {\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n\n    if (node.expressions.length !== 1 || !hasAppropriateSiblings(path) || !isAppropriateChar(node.expressions[0])) {\n      return;\n    }\n\n    var _node$expressions$ = node.expressions[0],\n        value = _node$expressions$.value,\n        kind = _node$expressions$.kind,\n        escaped = _node$expressions$.escaped;\n\n\n    if (node.negative) {\n      // For negative can extract only meta chars like [^\\w] -> \\W\n      // cannot do for [^a] -> a (wrong).\n      if (!isMeta(value)) {\n        return;\n      }\n\n      value = getInverseMeta(value);\n    }\n\n    path.replace({\n      type: 'Char',\n      value: value,\n      kind: kind,\n      escaped: escaped || shouldEscape(value)\n    });\n  }\n};\n\nfunction isAppropriateChar(node) {\n  return node.type === 'Char' &&\n  // We don't extract [\\b] (backspace) since \\b has different\n  // semantics (word boundary).\n  node.value !== '\\\\b';\n}\n\nfunction isMeta(value) {\n  return (/^\\\\[dwsDWS]$/.test(value)\n  );\n}\n\nfunction getInverseMeta(value) {\n  return (/[dws]/.test(value) ? value.toUpperCase() : value.toLowerCase()\n  );\n}\n\nfunction hasAppropriateSiblings(path) {\n  var parent = path.parent,\n      index = path.index;\n\n\n  if (parent.type !== 'Alternative') {\n    return true;\n  }\n\n  var previousNode = parent.expressions[index - 1];\n  if (previousNode == null) {\n    return true;\n  }\n\n  // Don't optimized \\1[0] to \\10\n  if (previousNode.type === 'Backreference' && previousNode.kind === 'number') {\n    return false;\n  }\n\n  // Don't optimized \\2[0] to \\20\n  if (previousNode.type === 'Char' && previousNode.kind === 'decimal') {\n    return false;\n  }\n\n  return true;\n}\n\n// Note: \\{ and \\} are always preserved to avoid `a[{]2[}]` turning\n// into `a{2}`.\nfunction shouldEscape(value) {\n  return (/[*[()+?$./{}|]/.test(value)\n  );\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\nfunction gen(node) {\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    return '/' + gen(node.body) + '/' + node.flags;\n  },\n  Alternative: function Alternative(node) {\n    return (node.expressions || []).map(gen).join('');\n  },\n  Disjunction: function Disjunction(node) {\n    return gen(node.left) + '|' + gen(node.right);\n  },\n  Group: function Group(node) {\n    var expression = gen(node.expression);\n\n    if (node.capturing) {\n      // A named group.\n      if (node.name) {\n        return '(?<' + (node.nameRaw || node.name) + '>' + expression + ')';\n      }\n\n      return '(' + expression + ')';\n    }\n\n    return '(?:' + expression + ')';\n  },\n  Backreference: function Backreference(node) {\n    switch (node.kind) {\n      case 'number':\n        return '\\\\' + node.reference;\n      case 'name':\n        return '\\\\k<' + (node.referenceRaw || node.reference) + '>';\n      default:\n        throw new TypeError('Unknown Backreference kind: ' + node.kind);\n    }\n  },\n  Assertion: function Assertion(node) {\n    switch (node.kind) {\n      case '^':\n      case '$':\n      case '\\\\b':\n      case '\\\\B':\n        return node.kind;\n\n      case 'Lookahead':\n        {\n          var assertion = gen(node.assertion);\n\n          if (node.negative) {\n            return '(?!' + assertion + ')';\n          }\n\n          return '(?=' + assertion + ')';\n        }\n\n      case 'Lookbehind':\n        {\n          var _assertion = gen(node.assertion);\n\n          if (node.negative) {\n            return '(?<!' + _assertion + ')';\n          }\n\n          return '(?<=' + _assertion + ')';\n        }\n\n      default:\n        throw new TypeError('Unknown Assertion kind: ' + node.kind);\n    }\n  },\n  CharacterClass: function CharacterClass(node) {\n    var expressions = node.expressions.map(gen).join('');\n\n    if (node.negative) {\n      return '[^' + expressions + ']';\n    }\n\n    return '[' + expressions + ']';\n  },\n  ClassRange: function ClassRange(node) {\n    return gen(node.from) + '-' + gen(node.to);\n  },\n  Repetition: function Repetition(node) {\n    return '' + gen(node.expression) + gen(node.quantifier);\n  },\n  Quantifier: function Quantifier(node) {\n    var quantifier = void 0;\n    var greedy = node.greedy ? '' : '?';\n\n    switch (node.kind) {\n      case '+':\n      case '?':\n      case '*':\n        quantifier = node.kind;\n        break;\n      case 'Range':\n        // Exact: {1}\n        if (node.from === node.to) {\n          quantifier = '{' + node.from + '}';\n        }\n        // Open: {1,}\n        else if (!node.to) {\n            quantifier = '{' + node.from + ',}';\n          }\n          // Closed: {1,3}\n          else {\n              quantifier = '{' + node.from + ',' + node.to + '}';\n            }\n        break;\n      default:\n        throw new TypeError('Unknown Quantifier kind: ' + node.kind);\n    }\n\n    return '' + quantifier + greedy;\n  },\n  Char: function Char(node) {\n    var value = node.value;\n\n    switch (node.kind) {\n      case 'simple':\n        {\n          if (node.escaped) {\n            return '\\\\' + value;\n          }\n          return value;\n        }\n\n      case 'hex':\n      case 'unicode':\n      case 'oct':\n      case 'decimal':\n      case 'control':\n      case 'meta':\n        return value;\n\n      default:\n        throw new TypeError('Unknown Char kind: ' + node.kind);\n    }\n  },\n  UnicodeProperty: function UnicodeProperty(node) {\n    var escapeChar = node.negative ? 'P' : 'p';\n    var namePart = void 0;\n\n    if (!node.shorthand && !node.binary) {\n      namePart = node.name + '=';\n    } else {\n      namePart = '';\n    }\n\n    return '\\\\' + escapeChar + '{' + namePart + node.value + '}';\n  }\n};\n\nmodule.exports = {\n  /**\n   * Generates a regexp string from an AST.\n   *\n   * @param Object ast - an AST node\n   */\n  generate: gen\n};","/**\n * @typedef {import('./index.d').UserAgentRegex} UserAgentRegex\n */\n\n/** @type {UserAgentRegex[]} */\nexport const regexes = [\n  {\n    regex: /IE (\\d+)\\.(\\d+)/,\n    family: 'ie',\n    maxVersion: [\n      7,\n      Infinity,\n      Infinity\n    ]\n  },\n  /**\n   * IE can be in Compatability Mode (IE 7.0)\n   * so we need to check Trident version\n   */\n  {\n    regex: /Trident\\/4\\.0/,\n    family: 'ie',\n    version: [\n      8,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/5\\.0/,\n    family: 'ie',\n    version: [\n      9,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/6\\.0/,\n    family: 'ie',\n    version: [\n      10,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Trident\\/[78]\\.0/,\n    family: 'ie',\n    version: [\n      11,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Edge?\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'edge'\n  },\n  {\n    regex: /Firefox\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'firefox'\n  },\n  {\n    regex: /Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'chrome'\n  },\n  /**\n   * Ignore Edge with EdgeHTML engine.\n   */\n  {\n    regex: /Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)([\\d.]+$|.*Safari\\/(?![\\d.]+ Edge\\/[\\d.]+$))/,\n    family: 'chrome',\n    maxVersion: [\n      70,\n      Infinity,\n      Infinity\n    ]\n  },\n  /**\n   * Safari on iPad have desktop-like useragent\n   * Some versions contains letter subversions\n   * GNOME Web (X11) is based on WebKit and should be detected as Safari\n   */\n  {\n    regex: /(Maci|X11).+ Version\\/(\\d+)\\.(\\d+)([.,](\\d+)|)( \\(\\w+\\)|)( Mobile\\/\\w+|) Safari\\//,\n    family: 'safari'\n  },\n  /**\n   * Presto Opera\n   */\n  {\n    regex: /Opera\\/9\\.80.+Version\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'opera',\n    maxVersion: [\n      12,\n      15,\n      0\n    ]\n  },\n  /**\n   * Chromium based Opera\n   */\n  {\n    regex: /Chrome.+OPR\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'opera',\n    minVersion: [\n      15,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /(CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS|CPU iPad OS)[ +]+(\\d+)[_.](\\d+)([_.](\\d+)|)/,\n    family: 'ios_saf'\n  },\n  /**\n   * Ignore IE Mobile 11\n   */\n  {\n    regex: /[^e] (CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS|CPU iPad OS)[ +]+(\\d+)[_.](\\d+)([_.](\\d+)|)/,\n    family: 'ios_saf',\n    version: [\n      7,\n      0,\n      3\n    ]\n  },\n  {\n    regex: /Opera Mini/,\n    family: 'op_mini'\n  },\n  {\n    regex: /Android Donut/,\n    family: 'android',\n    version: [\n      1,\n      2,\n      0\n    ]\n  },\n  {\n    regex: /Android Eclair/,\n    family: 'android',\n    version: [\n      2,\n      1,\n      0\n    ]\n  },\n  {\n    regex: /Android Froyo/,\n    family: 'android',\n    version: [\n      2,\n      2,\n      0\n    ]\n  },\n  {\n    regex: /Android Gingerbread/,\n    family: 'android',\n    version: [\n      2,\n      3,\n      0\n    ]\n  },\n  {\n    regex: /Android Honeycomb/,\n    family: 'android',\n    version: [\n      3,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Android:?[ /-](\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'android'\n  },\n  /**\n   * Ignore IE Mobile 11\n   */\n  {\n    regex: /Android:?[ /-](\\d+)(\\.(\\d+)|)(\\.(\\d+)|);(?! ARM; Trident)/,\n    family: 'android',\n    version: [\n      4,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /PlayBook.+RIM Tablet OS (\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'bb'\n  },\n  {\n    regex: /(Black[bB]erry|BB10).+Version\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'bb'\n  },\n  /**\n   * Presto Opera Mobile\n   */\n  {\n    regex: /Opera\\/.+Opera Mobi.+Version\\/(\\d+)\\.(\\d+)/,\n    family: 'op_mob',\n    maxVersion: [\n      12,\n      16,\n      0\n    ]\n  },\n  /**\n   * Chromium based Opera Mobile\n   */\n  {\n    regex: /Mobile Safari.+OPR\\/(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'op_mob',\n    minVersion: [\n      14,\n      0,\n      0\n    ]\n  },\n  {\n    regex: /Android.+Firefox\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'and_ff'\n  },\n  {\n    regex: /Android.+Chrom(ium|e)\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'and_chr'\n  },\n  {\n    regex: /IEMobile[ /](\\d+)\\.(\\d+)/,\n    family: 'ie_mob'\n  },\n  {\n    regex: /Android.+(UC? ?Browser|UCWEB|U3)[ /]?(\\d+)\\.(\\d+)\\.(\\d+)/,\n    family: 'and_uc'\n  },\n  {\n    regex: /SamsungBrowser\\/(\\d+)\\.(\\d+)/,\n    family: 'samsung'\n  },\n  {\n    regex: /Android.+MQQBrowser\\/(\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'and_qq'\n  },\n  {\n    regex: /baidubrowser[/\\s](\\d+)(\\.(\\d+)|)(\\.(\\d+)|)/,\n    family: 'baidu'\n  },\n  {\n    regex: /K[Aa][Ii]OS\\/(\\d+)\\.(\\d+)(\\.(\\d+)|)/,\n    family: 'kaios'\n  }\n]\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar regexpTreeParser = require('./generated/regexp-tree');\n\n/**\n * Original parse function.\n */\nvar generatedParseFn = regexpTreeParser.parse.bind(regexpTreeParser);\n\n/**\n * Parses a regular expression.\n *\n * Override original `regexpTreeParser.parse` to convert a value to a string,\n * since in regexp-tree we may pass strings, and RegExp instance.\n */\nregexpTreeParser.parse = function (regexp, options) {\n  return generatedParseFn('' + regexp, options);\n};\n\n// By default do not capture locations; callers may override.\nregexpTreeParser.setOptions({ captureLocations: false });\n\nmodule.exports = regexpTreeParser;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar parser = require('../../../parser');\n\nvar _require = require('./builders'),\n    alt = _require.alt,\n    char = _require.char,\n    or = _require.or,\n    rep = _require.rep,\n    plusRep = _require.plusRep,\n    questionRep = _require.questionRep;\n\n/**\n * Helper `gen` function calls node type handler.\n */\n\n\nfunction gen(node) {\n  if (node && !generator[node.type]) {\n    throw new Error(node.type + ' is not supported in NFA/DFA interpreter.');\n  }\n\n  return node ? generator[node.type](node) : '';\n}\n\n/**\n * AST handler.\n */\nvar generator = {\n  RegExp: function RegExp(node) {\n    if (node.flags !== '') {\n      throw new Error('NFA/DFA: Flags are not supported yet.');\n    }\n\n    return gen(node.body);\n  },\n  Alternative: function Alternative(node) {\n    var fragments = (node.expressions || []).map(gen);\n    return alt.apply(undefined, _toConsumableArray(fragments));\n  },\n  Disjunction: function Disjunction(node) {\n    return or(gen(node.left), gen(node.right));\n  },\n  Repetition: function Repetition(node) {\n    switch (node.quantifier.kind) {\n      case '*':\n        return rep(gen(node.expression));\n      case '+':\n        return plusRep(gen(node.expression));\n      case '?':\n        return questionRep(gen(node.expression));\n      default:\n        throw new Error('Unknown repeatition: ' + node.quantifier.kind + '.');\n    }\n  },\n  Char: function Char(node) {\n    if (node.kind !== 'simple') {\n      throw new Error('NFA/DFA: Only simple chars are supported yet.');\n    }\n\n    return char(node.value);\n  },\n  Group: function Group(node) {\n    return gen(node.expression);\n  }\n};\n\nmodule.exports = {\n  /**\n   * Builds an NFA from the passed regexp.\n   */\n  build: function build(regexp) {\n    var ast = regexp;\n\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp, {\n        captureLocations: true\n      });\n    }\n\n    return gen(ast);\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('./node-path');\n\n/**\n * Does an actual AST traversal, using visitor pattern,\n * and calling set of callbacks.\n *\n * Based on https://github.com/olov/ast-traverse\n *\n * Expects AST in Mozilla Parser API: nodes which are supposed to be\n * handled should have `type` property.\n *\n * @param Object root - a root node to start traversal from.\n *\n * @param Object options - an object with set of callbacks:\n *\n *   - `pre(node, parent, prop, index)` - a hook called on node enter\n *   - `post`(node, parent, prop, index) - a hook called on node exit\n *   - `skipProperty(prop)` - a predicated whether a property should be skipped\n */\nfunction astTraverse(root) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var pre = options.pre;\n  var post = options.post;\n  var skipProperty = options.skipProperty;\n\n  function visit(node, parent, prop, idx) {\n    if (!node || typeof node.type !== 'string') {\n      return;\n    }\n\n    var res = undefined;\n    if (pre) {\n      res = pre(node, parent, prop, idx);\n    }\n\n    if (res !== false) {\n\n      // A node can be replaced during traversal, so we have to\n      // recalculate it from the parent, to avoid traversing \"dead\" nodes.\n      if (parent && parent[prop]) {\n        if (!isNaN(idx)) {\n          node = parent[prop][idx];\n        } else {\n          node = parent[prop];\n        }\n      }\n\n      for (var _prop in node) {\n        if (node.hasOwnProperty(_prop)) {\n          if (skipProperty ? skipProperty(_prop, node) : _prop[0] === '$') {\n            continue;\n          }\n\n          var child = node[_prop];\n\n          // Collection node.\n          //\n          // NOTE: a node (or several nodes) can be removed or inserted\n          // during traversal.\n          //\n          // Current traversing index is stored on top of the\n          // `NodePath.traversingIndexStack`. The stack is used to support\n          // recursive nature of the traversal.\n          //\n          // In this case `NodePath.traversingIndex` (which we use here) is\n          // updated in the NodePath remove/insert methods.\n          //\n          if (Array.isArray(child)) {\n            var index = 0;\n            NodePath.traversingIndexStack.push(index);\n            while (index < child.length) {\n              visit(child[index], node, _prop, index);\n              index = NodePath.updateTraversingIndex(+1);\n            }\n            NodePath.traversingIndexStack.pop();\n          }\n\n          // Simple node.\n          else {\n              visit(child, node, _prop);\n            }\n        }\n      }\n    }\n\n    if (post) {\n      post(node, parent, prop, idx);\n    }\n  }\n\n  visit(root, null);\n}\n\nmodule.exports = {\n  /**\n   * Traverses an AST.\n   *\n   * @param Object ast - an AST node\n   *\n   * @param Object | Array<Object> handlers:\n   *\n   *   an object (or an array of objects)\n   *\n   *   Each such object contains a handler function per node.\n   *   In case of an array of handlers, they are applied in order.\n   *   A handler may return a transformed node (or a different type).\n   *\n   *   The per-node function may instead be an object with functions pre and post.\n   *   pre is called before visiting the node, post after.\n   *   If a handler is a function, it is treated as the pre function, with an empty post.\n   *\n   * @param Object options:\n   *\n   *   a config object, specifying traversal options:\n   *\n   *   `asNodes`: boolean - whether handlers should receives raw AST nodes\n   *   (false by default), instead of a `NodePath` wrapper. Note, by default\n   *   `NodePath` wrapper provides a set of convenient method to manipulate\n   *   a traversing AST, and also has access to all parents list. A raw\n   *   nodes traversal should be used in rare cases, when no `NodePath`\n   *   features are needed.\n   *\n   * Special hooks:\n   *\n   *   - `shouldRun(ast)` - a predicate determining whether the handler\n   *                        should be applied.\n   *\n   * NOTE: Multiple handlers are used as an optimization of applying all of\n   * them in one AST traversal pass.\n   */\n  traverse: function traverse(ast, handlers) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : { asNodes: false };\n\n\n    if (!Array.isArray(handlers)) {\n      handlers = [handlers];\n    }\n\n    // Filter out handlers by result of `shouldRun`, if the method is present.\n    handlers = handlers.filter(function (handler) {\n      if (typeof handler.shouldRun !== 'function') {\n        return true;\n      }\n      return handler.shouldRun(ast);\n    });\n\n    NodePath.initRegistry();\n\n    // Allow handlers to initializer themselves.\n    handlers.forEach(function (handler) {\n      if (typeof handler.init === 'function') {\n        handler.init(ast);\n      }\n    });\n\n    function getPathFor(node, parent, prop, index) {\n      var parentPath = NodePath.getForNode(parent);\n      var nodePath = NodePath.getForNode(node, parentPath, prop, index);\n\n      return nodePath;\n    }\n\n    // Handle actual nodes.\n    astTraverse(ast, {\n      /**\n       * Handler on node enter.\n       */\n      pre: function pre(node, parent, prop, index) {\n        var nodePath = void 0;\n        if (!options.asNodes) {\n          nodePath = getPathFor(node, parent, prop, index);\n        }\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = handlers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var handler = _step.value;\n\n            // \"Catch-all\" `*` handler.\n            if (typeof handler['*'] === 'function') {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var handlerResult = handler['*'](nodePath);\n                  // Explicitly stop traversal.\n                  if (handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handler['*'](node, parent, prop, index);\n              }\n            }\n\n            // Per-node handler.\n            var handlerFuncPre = void 0;\n            if (typeof handler[node.type] === 'function') {\n              handlerFuncPre = handler[node.type];\n            } else if (typeof handler[node.type] === 'object' && typeof handler[node.type].pre === 'function') {\n              handlerFuncPre = handler[node.type].pre;\n            }\n\n            if (handlerFuncPre) {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var _handlerResult = handlerFuncPre.call(handler, nodePath);\n                  // Explicitly stop traversal.\n                  if (_handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handlerFuncPre.call(handler, node, parent, prop, index);\n              }\n            }\n          } // Loop over handlers\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      },\n      // pre func\n\n      /**\n       * Handler on node exit.\n       */\n      post: function post(node, parent, prop, index) {\n        if (!node) {\n          return;\n        }\n\n        var nodePath = void 0;\n        if (!options.asNodes) {\n          nodePath = getPathFor(node, parent, prop, index);\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = handlers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var handler = _step2.value;\n\n            // Per-node handler.\n            var handlerFuncPost = void 0;\n            if (typeof handler[node.type] === 'object' && typeof handler[node.type].post === 'function') {\n              handlerFuncPost = handler[node.type].post;\n            }\n\n            if (handlerFuncPost) {\n              if (nodePath) {\n                // A path/node can be removed by some previous handler.\n                if (!nodePath.isRemoved()) {\n                  var handlerResult = handlerFuncPost.call(handler, nodePath);\n                  // Explicitly stop traversal.\n                  if (handlerResult === false) {\n                    return false;\n                  }\n                }\n              } else {\n                handlerFuncPost.call(handler, node, parent, prop, index);\n              }\n            }\n          } // Loop over handlers\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      },\n      // post func\n\n      /**\n       * Skip locations by default.\n       */\n      skipProperty: function skipProperty(prop) {\n        return prop === 'loc';\n      }\n    });\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _require = require('../../transform/utils'),\n    increaseQuantifierByOne = _require.increaseQuantifierByOne;\n\n/**\n * A regexp-tree plugin to merge quantifiers\n *\n * a+a+ -> a{2,}\n * a{2}a{3} -> a{5}\n * a{1,2}a{2,3} -> a{3,5}\n */\n\n\nmodule.exports = {\n  Repetition: function Repetition(path) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (parent.type !== 'Alternative' || !path.index) {\n      return;\n    }\n\n    var previousSibling = path.getPreviousSibling();\n\n    if (!previousSibling) {\n      return;\n    }\n\n    if (previousSibling.node.type === 'Repetition') {\n      if (!previousSibling.getChild().hasEqualSource(path.getChild())) {\n        return;\n      }\n\n      var _extractFromTo = extractFromTo(previousSibling.node.quantifier),\n          previousSiblingFrom = _extractFromTo.from,\n          previousSiblingTo = _extractFromTo.to;\n\n      var _extractFromTo2 = extractFromTo(node.quantifier),\n          nodeFrom = _extractFromTo2.from,\n          nodeTo = _extractFromTo2.to;\n\n      // It's does not seem reliable to merge quantifiers with different greediness\n      // when none of both is a greedy open range\n\n\n      if (previousSibling.node.quantifier.greedy !== node.quantifier.greedy && !isGreedyOpenRange(previousSibling.node.quantifier) && !isGreedyOpenRange(node.quantifier)) {\n        return;\n      }\n\n      // a*a* -> a*\n      // a*a+ -> a+\n      // a+a+ -> a{2,}\n      // a{2}a{4} -> a{6}\n      // a{1,2}a{2,3} -> a{3,5}\n      // a{1,}a{2,} -> a{3,}\n      // a+a{2,} -> a{3,}\n\n      // a??a{2,} -> a{2,}\n      // a*?a{2,} -> a{2,}\n      // a+?a{2,} -> a{3,}\n\n      node.quantifier.kind = 'Range';\n      node.quantifier.from = previousSiblingFrom + nodeFrom;\n      if (previousSiblingTo && nodeTo) {\n        node.quantifier.to = previousSiblingTo + nodeTo;\n      } else {\n        delete node.quantifier.to;\n      }\n      if (isGreedyOpenRange(previousSibling.node.quantifier) || isGreedyOpenRange(node.quantifier)) {\n        node.quantifier.greedy = true;\n      }\n\n      previousSibling.remove();\n    } else {\n      if (!previousSibling.hasEqualSource(path.getChild())) {\n        return;\n      }\n\n      increaseQuantifierByOne(node.quantifier);\n      previousSibling.remove();\n    }\n  }\n};\n\nfunction isGreedyOpenRange(quantifier) {\n  return quantifier.greedy && (quantifier.kind === '+' || quantifier.kind === '*' || quantifier.kind === 'Range' && !quantifier.to);\n}\n\nfunction extractFromTo(quantifier) {\n  var from = void 0,\n      to = void 0;\n  if (quantifier.kind === '*') {\n    from = 0;\n  } else if (quantifier.kind === '+') {\n    from = 1;\n  } else if (quantifier.kind === '?') {\n    from = 0;\n    to = 1;\n  } else {\n    from = quantifier.from;\n    if (quantifier.to) {\n      to = quantifier.to;\n    }\n  }\n  return { from: from, to: to };\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DFAMinimizer = require('./dfa-minimizer');\n\nvar _require = require('../special-symbols'),\n    EPSILON_CLOSURE = _require.EPSILON_CLOSURE;\n\n/**\n * DFA is build by converting from NFA (subset construction).\n */\n\n\nvar DFA = function () {\n  function DFA(nfa) {\n    _classCallCheck(this, DFA);\n\n    this._nfa = nfa;\n  }\n\n  /**\n   * Minimizes DFA.\n   */\n\n\n  _createClass(DFA, [{\n    key: 'minimize',\n    value: function minimize() {\n      this.getTransitionTable();\n\n      this._originalAcceptingStateNumbers = this._acceptingStateNumbers;\n      this._originalTransitionTable = this._transitionTable;\n\n      DFAMinimizer.minimize(this);\n    }\n\n    /**\n     * Returns alphabet for this DFA.\n     */\n\n  }, {\n    key: 'getAlphabet',\n    value: function getAlphabet() {\n      return this._nfa.getAlphabet();\n    }\n\n    /**\n     * Returns accepting states.\n     */\n\n  }, {\n    key: 'getAcceptingStateNumbers',\n    value: function getAcceptingStateNumbers() {\n      if (!this._acceptingStateNumbers) {\n        // Accepting states are determined during table construction.\n        this.getTransitionTable();\n      }\n\n      return this._acceptingStateNumbers;\n    }\n\n    /**\n     * Returns original accepting states.\n     */\n\n  }, {\n    key: 'getOriginaAcceptingStateNumbers',\n    value: function getOriginaAcceptingStateNumbers() {\n      if (!this._originalAcceptingStateNumbers) {\n        // Accepting states are determined during table construction.\n        this.getTransitionTable();\n      }\n\n      return this._originalAcceptingStateNumbers;\n    }\n\n    /**\n     * Sets transition table.\n     */\n\n  }, {\n    key: 'setTransitionTable',\n    value: function setTransitionTable(table) {\n      this._transitionTable = table;\n    }\n\n    /**\n     * Sets accepting states.\n     */\n\n  }, {\n    key: 'setAcceptingStateNumbers',\n    value: function setAcceptingStateNumbers(stateNumbers) {\n      this._acceptingStateNumbers = stateNumbers;\n    }\n\n    /**\n     * DFA transition table is built from NFA table.\n     */\n\n  }, {\n    key: 'getTransitionTable',\n    value: function getTransitionTable() {\n      var _this = this;\n\n      if (this._transitionTable) {\n        return this._transitionTable;\n      }\n\n      // Calculate from NFA transition table.\n      var nfaTable = this._nfa.getTransitionTable();\n      var nfaStates = Object.keys(nfaTable);\n\n      this._acceptingStateNumbers = new Set();\n\n      // Start state of DFA is E(S[nfa])\n      var startState = nfaTable[nfaStates[0]][EPSILON_CLOSURE];\n\n      // Init the worklist (states which should be in the DFA).\n      var worklist = [startState];\n\n      var alphabet = this.getAlphabet();\n      var nfaAcceptingStates = this._nfa.getAcceptingStateNumbers();\n\n      var dfaTable = {};\n\n      // Determine whether the combined DFA state is accepting.\n      var updateAcceptingStates = function updateAcceptingStates(states) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = nfaAcceptingStates[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var nfaAcceptingState = _step.value;\n\n            // If any of the states from NFA is accepting, DFA's\n            // state is accepting as well.\n            if (states.indexOf(nfaAcceptingState) !== -1) {\n              _this._acceptingStateNumbers.add(states.join(','));\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n\n      while (worklist.length > 0) {\n        var states = worklist.shift();\n        var dfaStateLabel = states.join(',');\n        dfaTable[dfaStateLabel] = {};\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = alphabet[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var symbol = _step2.value;\n\n            var onSymbol = [];\n\n            // Determine whether the combined state is accepting.\n            updateAcceptingStates(states);\n\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = states[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var state = _step3.value;\n\n                var nfaStatesOnSymbol = nfaTable[state][symbol];\n                if (!nfaStatesOnSymbol) {\n                  continue;\n                }\n\n                var _iteratorNormalCompletion4 = true;\n                var _didIteratorError4 = false;\n                var _iteratorError4 = undefined;\n\n                try {\n                  for (var _iterator4 = nfaStatesOnSymbol[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var nfaStateOnSymbol = _step4.value;\n\n                    if (!nfaTable[nfaStateOnSymbol]) {\n                      continue;\n                    }\n                    onSymbol.push.apply(onSymbol, _toConsumableArray(nfaTable[nfaStateOnSymbol][EPSILON_CLOSURE]));\n                  }\n                } catch (err) {\n                  _didIteratorError4 = true;\n                  _iteratorError4 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                      _iterator4.return();\n                    }\n                  } finally {\n                    if (_didIteratorError4) {\n                      throw _iteratorError4;\n                    }\n                  }\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            var dfaStatesOnSymbolSet = new Set(onSymbol);\n            var dfaStatesOnSymbol = [].concat(_toConsumableArray(dfaStatesOnSymbolSet));\n\n            if (dfaStatesOnSymbol.length > 0) {\n              var dfaOnSymbolStr = dfaStatesOnSymbol.join(',');\n\n              dfaTable[dfaStateLabel][symbol] = dfaOnSymbolStr;\n\n              if (!dfaTable.hasOwnProperty(dfaOnSymbolStr)) {\n                worklist.unshift(dfaStatesOnSymbol);\n              }\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return this._transitionTable = this._remapStateNumbers(dfaTable);\n    }\n\n    /**\n     * Remaps state numbers in the resulting table:\n     * combined states '1,2,3' -> 1, '3,4' -> 2, etc.\n     */\n\n  }, {\n    key: '_remapStateNumbers',\n    value: function _remapStateNumbers(calculatedDFATable) {\n      var newStatesMap = {};\n\n      this._originalTransitionTable = calculatedDFATable;\n      var transitionTable = {};\n\n      Object.keys(calculatedDFATable).forEach(function (originalNumber, newNumber) {\n        newStatesMap[originalNumber] = newNumber + 1;\n      });\n\n      for (var originalNumber in calculatedDFATable) {\n        var originalRow = calculatedDFATable[originalNumber];\n        var row = {};\n\n        for (var symbol in originalRow) {\n          row[symbol] = newStatesMap[originalRow[symbol]];\n        }\n\n        transitionTable[newStatesMap[originalNumber]] = row;\n      }\n\n      // Remap accepting states.\n      this._originalAcceptingStateNumbers = this._acceptingStateNumbers;\n      this._acceptingStateNumbers = new Set();\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this._originalAcceptingStateNumbers[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _originalNumber = _step5.value;\n\n          this._acceptingStateNumbers.add(newStatesMap[_originalNumber]);\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return transitionTable;\n    }\n\n    /**\n     * Returns original DFA table, where state numbers\n     * are combined numbers from NFA.\n     */\n\n  }, {\n    key: 'getOriginalTransitionTable',\n    value: function getOriginalTransitionTable() {\n      if (!this._originalTransitionTable) {\n        // Original table is determined during table construction.\n        this.getTransitionTable();\n      }\n      return this._originalTransitionTable;\n    }\n\n    /**\n     * Checks whether this DFA accepts a string.\n     */\n\n  }, {\n    key: 'matches',\n    value: function matches(string) {\n      var state = 1;\n      var i = 0;\n      var table = this.getTransitionTable();\n\n      while (string[i]) {\n        state = table[state][string[i++]];\n        if (!state) {\n          return false;\n        }\n      }\n\n      if (!this.getAcceptingStateNumbers().has(state)) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return DFA;\n}();\n\nmodule.exports = DFA;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Flattens a nested disjunction node to a list.\n *\n * /a|b|c|d/\n *\n * {{{a, b}, c}, d} -> [a, b, c, d]\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction disjunctionToList(node) {\n  if (node.type !== 'Disjunction') {\n    throw new TypeError('Expected \"Disjunction\" node, got \"' + node.type + '\"');\n  }\n\n  var list = [];\n\n  if (node.left && node.left.type === 'Disjunction') {\n    list.push.apply(list, _toConsumableArray(disjunctionToList(node.left)).concat([node.right]));\n  } else {\n    list.push(node.left, node.right);\n  }\n\n  return list;\n}\n\n/**\n * Builds a nested disjunction node from a list.\n *\n * /a|b|c|d/\n *\n * [a, b, c, d] -> {{{a, b}, c}, d}\n */\nfunction listToDisjunction(list) {\n  return list.reduce(function (left, right) {\n    return {\n      type: 'Disjunction',\n      left: left,\n      right: right\n    };\n  });\n}\n\n/**\n * Increases a quantifier by one.\n * Does not change greediness.\n * * -> +\n * + -> {2,}\n * ? -> {1,2}\n * {2} -> {3}\n * {2,} -> {3,}\n * {2,3} -> {3,4}\n */\nfunction increaseQuantifierByOne(quantifier) {\n  if (quantifier.kind === '*') {\n\n    quantifier.kind = '+';\n  } else if (quantifier.kind === '+') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 2;\n    delete quantifier.to;\n  } else if (quantifier.kind === '?') {\n\n    quantifier.kind = 'Range';\n    quantifier.from = 1;\n    quantifier.to = 2;\n  } else if (quantifier.kind === 'Range') {\n\n    quantifier.from += 1;\n    if (quantifier.to) {\n      quantifier.to += 1;\n    }\n  }\n}\n\nmodule.exports = {\n  disjunctionToList: disjunctionToList,\n  listToDisjunction: listToDisjunction,\n  increaseQuantifierByOne: increaseQuantifierByOne\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = require('./dist/regexp-tree');","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa/nfa');\nvar DFA = require('./dfa/dfa');\n\nvar nfaFromRegExp = require('./nfa/nfa-from-regexp');\nvar builders = require('./nfa/builders');\n\nmodule.exports = {\n\n  /**\n   * Export NFA and DFA classes.\n   */\n  NFA: NFA,\n  DFA: DFA,\n\n  /**\n   * Expose builders.\n   */\n  builders: builders,\n\n  /**\n   * Builds an NFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toNFA: function toNFA(regexp) {\n    return nfaFromRegExp.build(regexp);\n  },\n\n\n  /**\n   * Builds DFA for the passed regexp.\n   *\n   * @param string | AST | RegExp:\n   *\n   *   a regular expression in different representations: a string,\n   *   a RegExp object, or an AST.\n   */\n  toDFA: function toDFA(regexp) {\n    return new DFA(this.toNFA(regexp));\n  },\n\n\n  /**\n   * Returns true if regexp accepts the string.\n   */\n  test: function test(regexp, string) {\n    return this.toDFA(regexp).matches(string);\n  }\n};","'use strict';\n\n/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\nvar NON_BINARY_PROP_NAMES_TO_ALIASES = {\n  General_Category: 'gc',\n  Script: 'sc',\n  Script_Extensions: 'scx'\n};\n\nvar NON_BINARY_ALIASES_TO_PROP_NAMES = inverseMap(NON_BINARY_PROP_NAMES_TO_ALIASES);\n\nvar BINARY_PROP_NAMES_TO_ALIASES = {\n  ASCII: 'ASCII',\n  ASCII_Hex_Digit: 'AHex',\n  Alphabetic: 'Alpha',\n  Any: 'Any',\n  Assigned: 'Assigned',\n  Bidi_Control: 'Bidi_C',\n  Bidi_Mirrored: 'Bidi_M',\n  Case_Ignorable: 'CI',\n  Cased: 'Cased',\n  Changes_When_Casefolded: 'CWCF',\n  Changes_When_Casemapped: 'CWCM',\n  Changes_When_Lowercased: 'CWL',\n  Changes_When_NFKC_Casefolded: 'CWKCF',\n  Changes_When_Titlecased: 'CWT',\n  Changes_When_Uppercased: 'CWU',\n  Dash: 'Dash',\n  Default_Ignorable_Code_Point: 'DI',\n  Deprecated: 'Dep',\n  Diacritic: 'Dia',\n  Emoji: 'Emoji',\n  Emoji_Component: 'Emoji_Component',\n  Emoji_Modifier: 'Emoji_Modifier',\n  Emoji_Modifier_Base: 'Emoji_Modifier_Base',\n  Emoji_Presentation: 'Emoji_Presentation',\n  Extended_Pictographic: 'Extended_Pictographic',\n  Extender: 'Ext',\n  Grapheme_Base: 'Gr_Base',\n  Grapheme_Extend: 'Gr_Ext',\n  Hex_Digit: 'Hex',\n  IDS_Binary_Operator: 'IDSB',\n  IDS_Trinary_Operator: 'IDST',\n  ID_Continue: 'IDC',\n  ID_Start: 'IDS',\n  Ideographic: 'Ideo',\n  Join_Control: 'Join_C',\n  Logical_Order_Exception: 'LOE',\n  Lowercase: 'Lower',\n  Math: 'Math',\n  Noncharacter_Code_Point: 'NChar',\n  Pattern_Syntax: 'Pat_Syn',\n  Pattern_White_Space: 'Pat_WS',\n  Quotation_Mark: 'QMark',\n  Radical: 'Radical',\n  Regional_Indicator: 'RI',\n  Sentence_Terminal: 'STerm',\n  Soft_Dotted: 'SD',\n  Terminal_Punctuation: 'Term',\n  Unified_Ideograph: 'UIdeo',\n  Uppercase: 'Upper',\n  Variation_Selector: 'VS',\n  White_Space: 'space',\n  XID_Continue: 'XIDC',\n  XID_Start: 'XIDS'\n};\n\nvar BINARY_ALIASES_TO_PROP_NAMES = inverseMap(BINARY_PROP_NAMES_TO_ALIASES);\n\nvar GENERAL_CATEGORY_VALUE_TO_ALIASES = {\n  Cased_Letter: 'LC',\n  Close_Punctuation: 'Pe',\n  Connector_Punctuation: 'Pc',\n  Control: ['Cc', 'cntrl'],\n  Currency_Symbol: 'Sc',\n  Dash_Punctuation: 'Pd',\n  Decimal_Number: ['Nd', 'digit'],\n  Enclosing_Mark: 'Me',\n  Final_Punctuation: 'Pf',\n  Format: 'Cf',\n  Initial_Punctuation: 'Pi',\n  Letter: 'L',\n  Letter_Number: 'Nl',\n  Line_Separator: 'Zl',\n  Lowercase_Letter: 'Ll',\n  Mark: ['M', 'Combining_Mark'],\n  Math_Symbol: 'Sm',\n  Modifier_Letter: 'Lm',\n  Modifier_Symbol: 'Sk',\n  Nonspacing_Mark: 'Mn',\n  Number: 'N',\n  Open_Punctuation: 'Ps',\n  Other: 'C',\n  Other_Letter: 'Lo',\n  Other_Number: 'No',\n  Other_Punctuation: 'Po',\n  Other_Symbol: 'So',\n  Paragraph_Separator: 'Zp',\n  Private_Use: 'Co',\n  Punctuation: ['P', 'punct'],\n  Separator: 'Z',\n  Space_Separator: 'Zs',\n  Spacing_Mark: 'Mc',\n  Surrogate: 'Cs',\n  Symbol: 'S',\n  Titlecase_Letter: 'Lt',\n  Unassigned: 'Cn',\n  Uppercase_Letter: 'Lu'\n};\n\nvar GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES = inverseMap(GENERAL_CATEGORY_VALUE_TO_ALIASES);\n\nvar SCRIPT_VALUE_TO_ALIASES = {\n  Adlam: 'Adlm',\n  Ahom: 'Ahom',\n  Anatolian_Hieroglyphs: 'Hluw',\n  Arabic: 'Arab',\n  Armenian: 'Armn',\n  Avestan: 'Avst',\n  Balinese: 'Bali',\n  Bamum: 'Bamu',\n  Bassa_Vah: 'Bass',\n  Batak: 'Batk',\n  Bengali: 'Beng',\n  Bhaiksuki: 'Bhks',\n  Bopomofo: 'Bopo',\n  Brahmi: 'Brah',\n  Braille: 'Brai',\n  Buginese: 'Bugi',\n  Buhid: 'Buhd',\n  Canadian_Aboriginal: 'Cans',\n  Carian: 'Cari',\n  Caucasian_Albanian: 'Aghb',\n  Chakma: 'Cakm',\n  Cham: 'Cham',\n  Cherokee: 'Cher',\n  Common: 'Zyyy',\n  Coptic: ['Copt', 'Qaac'],\n  Cuneiform: 'Xsux',\n  Cypriot: 'Cprt',\n  Cyrillic: 'Cyrl',\n  Deseret: 'Dsrt',\n  Devanagari: 'Deva',\n  Dogra: 'Dogr',\n  Duployan: 'Dupl',\n  Egyptian_Hieroglyphs: 'Egyp',\n  Elbasan: 'Elba',\n  Ethiopic: 'Ethi',\n  Georgian: 'Geor',\n  Glagolitic: 'Glag',\n  Gothic: 'Goth',\n  Grantha: 'Gran',\n  Greek: 'Grek',\n  Gujarati: 'Gujr',\n  Gunjala_Gondi: 'Gong',\n  Gurmukhi: 'Guru',\n  Han: 'Hani',\n  Hangul: 'Hang',\n  Hanifi_Rohingya: 'Rohg',\n  Hanunoo: 'Hano',\n  Hatran: 'Hatr',\n  Hebrew: 'Hebr',\n  Hiragana: 'Hira',\n  Imperial_Aramaic: 'Armi',\n  Inherited: ['Zinh', 'Qaai'],\n  Inscriptional_Pahlavi: 'Phli',\n  Inscriptional_Parthian: 'Prti',\n  Javanese: 'Java',\n  Kaithi: 'Kthi',\n  Kannada: 'Knda',\n  Katakana: 'Kana',\n  Kayah_Li: 'Kali',\n  Kharoshthi: 'Khar',\n  Khmer: 'Khmr',\n  Khojki: 'Khoj',\n  Khudawadi: 'Sind',\n  Lao: 'Laoo',\n  Latin: 'Latn',\n  Lepcha: 'Lepc',\n  Limbu: 'Limb',\n  Linear_A: 'Lina',\n  Linear_B: 'Linb',\n  Lisu: 'Lisu',\n  Lycian: 'Lyci',\n  Lydian: 'Lydi',\n  Mahajani: 'Mahj',\n  Makasar: 'Maka',\n  Malayalam: 'Mlym',\n  Mandaic: 'Mand',\n  Manichaean: 'Mani',\n  Marchen: 'Marc',\n  Medefaidrin: 'Medf',\n  Masaram_Gondi: 'Gonm',\n  Meetei_Mayek: 'Mtei',\n  Mende_Kikakui: 'Mend',\n  Meroitic_Cursive: 'Merc',\n  Meroitic_Hieroglyphs: 'Mero',\n  Miao: 'Plrd',\n  Modi: 'Modi',\n  Mongolian: 'Mong',\n  Mro: 'Mroo',\n  Multani: 'Mult',\n  Myanmar: 'Mymr',\n  Nabataean: 'Nbat',\n  New_Tai_Lue: 'Talu',\n  Newa: 'Newa',\n  Nko: 'Nkoo',\n  Nushu: 'Nshu',\n  Ogham: 'Ogam',\n  Ol_Chiki: 'Olck',\n  Old_Hungarian: 'Hung',\n  Old_Italic: 'Ital',\n  Old_North_Arabian: 'Narb',\n  Old_Permic: 'Perm',\n  Old_Persian: 'Xpeo',\n  Old_Sogdian: 'Sogo',\n  Old_South_Arabian: 'Sarb',\n  Old_Turkic: 'Orkh',\n  Oriya: 'Orya',\n  Osage: 'Osge',\n  Osmanya: 'Osma',\n  Pahawh_Hmong: 'Hmng',\n  Palmyrene: 'Palm',\n  Pau_Cin_Hau: 'Pauc',\n  Phags_Pa: 'Phag',\n  Phoenician: 'Phnx',\n  Psalter_Pahlavi: 'Phlp',\n  Rejang: 'Rjng',\n  Runic: 'Runr',\n  Samaritan: 'Samr',\n  Saurashtra: 'Saur',\n  Sharada: 'Shrd',\n  Shavian: 'Shaw',\n  Siddham: 'Sidd',\n  SignWriting: 'Sgnw',\n  Sinhala: 'Sinh',\n  Sogdian: 'Sogd',\n  Sora_Sompeng: 'Sora',\n  Soyombo: 'Soyo',\n  Sundanese: 'Sund',\n  Syloti_Nagri: 'Sylo',\n  Syriac: 'Syrc',\n  Tagalog: 'Tglg',\n  Tagbanwa: 'Tagb',\n  Tai_Le: 'Tale',\n  Tai_Tham: 'Lana',\n  Tai_Viet: 'Tavt',\n  Takri: 'Takr',\n  Tamil: 'Taml',\n  Tangut: 'Tang',\n  Telugu: 'Telu',\n  Thaana: 'Thaa',\n  Thai: 'Thai',\n  Tibetan: 'Tibt',\n  Tifinagh: 'Tfng',\n  Tirhuta: 'Tirh',\n  Ugaritic: 'Ugar',\n  Vai: 'Vaii',\n  Warang_Citi: 'Wara',\n  Yi: 'Yiii',\n  Zanabazar_Square: 'Zanb'\n};\n\nvar SCRIPT_VALUE_ALIASES_TO_VALUE = inverseMap(SCRIPT_VALUE_TO_ALIASES);\n\nfunction inverseMap(data) {\n  var inverse = {};\n\n  for (var name in data) {\n    if (!data.hasOwnProperty(name)) {\n      continue;\n    }\n    var value = data[name];\n    if (Array.isArray(value)) {\n      for (var i = 0; i < value.length; i++) {\n        inverse[value[i]] = name;\n      }\n    } else {\n      inverse[value] = name;\n    }\n  }\n\n  return inverse;\n}\n\nfunction isValidName(name) {\n  return NON_BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name) || BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction isValidValue(name, value) {\n  if (isGeneralCategoryName(name)) {\n    return isGeneralCategoryValue(value);\n  }\n\n  if (isScriptCategoryName(name)) {\n    return isScriptCategoryValue(value);\n  }\n\n  return false;\n}\n\nfunction isAlias(name) {\n  return NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction isGeneralCategoryName(name) {\n  return name === 'General_Category' || name == 'gc';\n}\n\nfunction isScriptCategoryName(name) {\n  return name === 'Script' || name === 'Script_Extensions' || name === 'sc' || name === 'scx';\n}\n\nfunction isGeneralCategoryValue(value) {\n  return GENERAL_CATEGORY_VALUE_TO_ALIASES.hasOwnProperty(value) || GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES.hasOwnProperty(value);\n}\n\nfunction isScriptCategoryValue(value) {\n  return SCRIPT_VALUE_TO_ALIASES.hasOwnProperty(value) || SCRIPT_VALUE_ALIASES_TO_VALUE.hasOwnProperty(value);\n}\n\nfunction isBinaryPropertyName(name) {\n  return BINARY_PROP_NAMES_TO_ALIASES.hasOwnProperty(name) || BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name);\n}\n\nfunction getCanonicalName(name) {\n  if (NON_BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name)) {\n    return NON_BINARY_ALIASES_TO_PROP_NAMES[name];\n  }\n\n  if (BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(name)) {\n    return BINARY_ALIASES_TO_PROP_NAMES[name];\n  }\n\n  return null;\n}\n\nfunction getCanonicalValue(value) {\n  if (GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES.hasOwnProperty(value)) {\n    return GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES[value];\n  }\n\n  if (SCRIPT_VALUE_ALIASES_TO_VALUE.hasOwnProperty(value)) {\n    return SCRIPT_VALUE_ALIASES_TO_VALUE[value];\n  }\n\n  if (BINARY_ALIASES_TO_PROP_NAMES.hasOwnProperty(value)) {\n    return BINARY_ALIASES_TO_PROP_NAMES[value];\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  isAlias: isAlias,\n  isValidName: isValidName,\n  isValidValue: isValidValue,\n  isGeneralCategoryValue: isGeneralCategoryValue,\n  isScriptCategoryValue: isScriptCategoryValue,\n  isBinaryPropertyName: isBinaryPropertyName,\n  getCanonicalName: getCanonicalName,\n  getCanonicalValue: getCanonicalValue,\n\n  NON_BINARY_PROP_NAMES_TO_ALIASES: NON_BINARY_PROP_NAMES_TO_ALIASES,\n  NON_BINARY_ALIASES_TO_PROP_NAMES: NON_BINARY_ALIASES_TO_PROP_NAMES,\n\n  BINARY_PROP_NAMES_TO_ALIASES: BINARY_PROP_NAMES_TO_ALIASES,\n  BINARY_ALIASES_TO_PROP_NAMES: BINARY_ALIASES_TO_PROP_NAMES,\n\n  GENERAL_CATEGORY_VALUE_TO_ALIASES: GENERAL_CATEGORY_VALUE_TO_ALIASES,\n  GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES: GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES,\n\n  SCRIPT_VALUE_TO_ALIASES: SCRIPT_VALUE_TO_ALIASES,\n  SCRIPT_VALUE_ALIASES_TO_VALUE: SCRIPT_VALUE_ALIASES_TO_VALUE\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar DEFAULT_COLLECTION_PROP = 'expressions';\nvar DEFAULT_SINGLE_PROP = 'expression';\n\n/**\n * NodePath class encapsulates a traversing node,\n * its parent node, property name in the parent node, and\n * an index (in case if a node is part of a collection).\n * It also provides set of methods for AST manipulation.\n */\n\nvar NodePath = function () {\n  /**\n   * NodePath constructor.\n   *\n   * @param Object node - an AST node\n   * @param NodePath parentPath - a nullable parent path\n   * @param string property - property name of the node in the parent\n   * @param number index - index of the node in a collection.\n   */\n  function NodePath(node) {\n    var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, NodePath);\n\n    this.node = node;\n    this.parentPath = parentPath;\n    this.parent = parentPath ? parentPath.node : null;\n    this.property = property;\n    this.index = index;\n  }\n\n  _createClass(NodePath, [{\n    key: '_enforceProp',\n    value: function _enforceProp(property) {\n      if (!this.node.hasOwnProperty(property)) {\n        throw new Error('Node of type ' + this.node.type + ' doesn\\'t have \"' + property + '\" collection.');\n      }\n    }\n\n    /**\n     * Sets a node into a children collection or the single child.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param number index - index at which to set\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'setChild',\n    value: function setChild(node) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n\n      var childPath = void 0;\n      if (index != null) {\n        if (!property) {\n          property = DEFAULT_COLLECTION_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property][index] = node;\n        childPath = NodePath.getForNode(node, this, property, index);\n      } else {\n        if (!property) {\n          property = DEFAULT_SINGLE_PROP;\n        }\n        this._enforceProp(property);\n        this.node[property] = node;\n        childPath = NodePath.getForNode(node, this, property, null);\n      }\n      return childPath;\n    }\n\n    /**\n     * Appends a node to a children collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to set into a collection or as single child\n     * @param string property - name of the collection or single property\n     */\n\n  }, {\n    key: 'appendChild',\n    value: function appendChild(node) {\n      var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\n      if (!property) {\n        property = DEFAULT_COLLECTION_PROP;\n      }\n      this._enforceProp(property);\n      var end = this.node[property].length;\n      return this.setChild(node, end, property);\n    }\n\n    /**\n     * Inserts a node into a collection.\n     * By default child nodes are supposed to be under `expressions` property.\n     * An explicit property can be passed.\n     *\n     * @param Object node - a node to insert into a collection\n     * @param number index - index at which to insert\n     * @param string property - name of the collection property\n     */\n\n  }, {\n    key: 'insertChildAt',\n    value: function insertChildAt(node, index) {\n      var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_COLLECTION_PROP;\n\n      this._enforceProp(property);\n\n      this.node[property].splice(index, 0, node);\n\n      // If we inserted a node before the traversing index,\n      // we should increase the later.\n      if (index <= NodePath.getTraversingIndex()) {\n        NodePath.updateTraversingIndex(+1);\n      }\n\n      this._rebuildIndex(this.node, property);\n    }\n\n    /**\n     * Removes a node.\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove() {\n      if (this.isRemoved()) {\n        return;\n      }\n      NodePath.registry.delete(this.node);\n\n      this.node = null;\n\n      if (!this.parent) {\n        return;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property].splice(this.index, 1);\n\n        // If we remove a node before the traversing index,\n        // we should increase the later.\n        if (this.index <= NodePath.getTraversingIndex()) {\n          NodePath.updateTraversingIndex(-1);\n        }\n\n        // Rebuild index.\n        this._rebuildIndex(this.parent, this.property);\n\n        this.index = null;\n        this.property = null;\n\n        return;\n      }\n\n      // A simple node.\n      delete this.parent[this.property];\n      this.property = null;\n    }\n\n    /**\n     * Rebuilds child nodes index (used on remove/insert).\n     */\n\n  }, {\n    key: '_rebuildIndex',\n    value: function _rebuildIndex(parent, property) {\n      var parentPath = NodePath.getForNode(parent);\n\n      for (var i = 0; i < parent[property].length; i++) {\n        var path = NodePath.getForNode(parent[property][i], parentPath, property, i);\n        path.index = i;\n      }\n    }\n\n    /**\n     * Whether the path was removed.\n     */\n\n  }, {\n    key: 'isRemoved',\n    value: function isRemoved() {\n      return this.node === null;\n    }\n\n    /**\n     * Replaces a node with the passed one.\n     */\n\n  }, {\n    key: 'replace',\n    value: function replace(newNode) {\n      NodePath.registry.delete(this.node);\n\n      this.node = newNode;\n\n      if (!this.parent) {\n        return null;\n      }\n\n      // A node is in a collection.\n      if (this.index !== null) {\n        this.parent[this.property][this.index] = newNode;\n      }\n\n      // A simple node.\n      else {\n          this.parent[this.property] = newNode;\n        }\n\n      // Rebuild the node path for the new node.\n      return NodePath.getForNode(newNode, this.parentPath, this.property, this.index);\n    }\n\n    /**\n     * Updates a node inline.\n     */\n\n  }, {\n    key: 'update',\n    value: function update(nodeProps) {\n      Object.assign(this.node, nodeProps);\n    }\n\n    /**\n     * Returns parent.\n     */\n\n  }, {\n    key: 'getParent',\n    value: function getParent() {\n      return this.parentPath;\n    }\n\n    /**\n     * Returns nth child.\n     */\n\n  }, {\n    key: 'getChild',\n    value: function getChild() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.node.expressions) {\n        return NodePath.getForNode(this.node.expressions[n], this, DEFAULT_COLLECTION_PROP, n);\n      } else if (this.node.expression && n == 0) {\n        return NodePath.getForNode(this.node.expression, this, DEFAULT_SINGLE_PROP);\n      }\n      return null;\n    }\n\n    /**\n     * Whether a path node is syntactically equal to the passed one.\n     *\n     * NOTE: we don't rely on `source` property from the `loc` data\n     * (which would be the fastest comparison), since it might be unsync\n     * after several modifications. We use here simple `JSON.stringify`\n     * excluding the `loc` data.\n     *\n     * @param NodePath other - path to compare to.\n     * @return boolean\n     */\n\n  }, {\n    key: 'hasEqualSource',\n    value: function hasEqualSource(path) {\n      return JSON.stringify(this.node, jsonSkipLoc) === JSON.stringify(path.node, jsonSkipLoc);\n    }\n\n    /**\n     * JSON-encodes a node skipping location.\n     */\n\n  }, {\n    key: 'jsonEncode',\n    value: function jsonEncode() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          format = _ref.format,\n          useLoc = _ref.useLoc;\n\n      return JSON.stringify(this.node, useLoc ? null : jsonSkipLoc, format);\n    }\n\n    /**\n     * Returns previous sibling.\n     */\n\n  }, {\n    key: 'getPreviousSibling',\n    value: function getPreviousSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index - 1], NodePath.getForNode(this.parent), this.property, this.index - 1);\n    }\n\n    /**\n     * Returns next sibling.\n     */\n\n  }, {\n    key: 'getNextSibling',\n    value: function getNextSibling() {\n      if (!this.parent || this.index == null) {\n        return null;\n      }\n      return NodePath.getForNode(this.parent[this.property][this.index + 1], NodePath.getForNode(this.parent), this.property, this.index + 1);\n    }\n\n    /**\n     * Returns a NodePath instance for a node.\n     *\n     * The same NodePath can be reused in several places, e.g.\n     * a parent node passed for all its children.\n     */\n\n  }], [{\n    key: 'getForNode',\n    value: function getForNode(node) {\n      var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n\n      if (!node) {\n        return null;\n      }\n\n      if (!NodePath.registry.has(node)) {\n        NodePath.registry.set(node, new NodePath(node, parentPath, prop, index == -1 ? null : index));\n      }\n\n      var path = NodePath.registry.get(node);\n\n      if (parentPath !== null) {\n        path.parentPath = parentPath;\n        path.parent = path.parentPath.node;\n      }\n\n      if (prop !== null) {\n        path.property = prop;\n      }\n\n      if (index >= 0) {\n        path.index = index;\n      }\n\n      return path;\n    }\n\n    /**\n     * Initializes the NodePath registry. The registry is a map from\n     * a node to its NodePath instance.\n     */\n\n  }, {\n    key: 'initRegistry',\n    value: function initRegistry() {\n      if (!NodePath.registry) {\n        NodePath.registry = new Map();\n      }\n      NodePath.registry.clear();\n    }\n\n    /**\n     * Updates index of a currently traversing collection.\n     */\n\n  }, {\n    key: 'updateTraversingIndex',\n    value: function updateTraversingIndex(dx) {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1] += dx;\n    }\n\n    /**\n     * Returns current traversing index.\n     */\n\n  }, {\n    key: 'getTraversingIndex',\n    value: function getTraversingIndex() {\n      return NodePath.traversingIndexStack[NodePath.traversingIndexStack.length - 1];\n    }\n  }]);\n\n  return NodePath;\n}();\n\nNodePath.initRegistry();\n\n/**\n * Index of a currently traversing collection is stored on top of the\n * `NodePath.traversingIndexStack`. Remove/insert methods can adjust\n * this index.\n */\nNodePath.traversingIndexStack = [];\n\n// Helper function used to skip `loc` in JSON operations.\nfunction jsonSkipLoc(prop, value) {\n  if (prop === 'loc') {\n    return undefined;\n  }\n  return value;\n}\n\nmodule.exports = NodePath;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = {\n  // \"dotAll\" `s` flag\n  dotAll: require('./compat-dotall-s-transform'),\n\n  // Named capturing groups.\n  namedCapturingGroups: require('./compat-named-capturing-groups-transform'),\n\n  // `x` flag\n  xFlag: require('./compat-x-flag-transform')\n};","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getBuilder } from '@nextcloud/browser-storage'\n\nexport default getBuilder('core')\n\t.clearOnLogout()\n\t.persist()\n\t.build()\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/./s` to `/[\\0-\\uFFFF]/`.\n */\n\nmodule.exports = {\n\n  // Whether `u` flag present. In which case we transform to\n  // \\u{10FFFF} instead of \\uFFFF.\n  _hasUFlag: false,\n\n  // Only run this plugin if we have `s` flag.\n  shouldRun: function shouldRun(ast) {\n    var shouldRun = ast.flags.includes('s');\n\n    if (!shouldRun) {\n      return false;\n    }\n\n    // Strip the `s` flag.\n    ast.flags = ast.flags.replace('s', '');\n\n    // Whether we have also `u`.\n    this._hasUFlag = ast.flags.includes('u');\n\n    return true;\n  },\n  Char: function Char(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'meta' || node.value !== '.') {\n      return;\n    }\n\n    var toValue = '\\\\uFFFF';\n    var toSymbol = '\\uFFFF';\n\n    if (this._hasUFlag) {\n      toValue = '\\\\u{10FFFF}';\n      toSymbol = '\\uDBFF\\uDFFF';\n    }\n\n    path.replace({\n      type: 'CharacterClass',\n      expressions: [{\n        type: 'ClassRange',\n        from: {\n          type: 'Char',\n          value: '\\\\0',\n          kind: 'decimal',\n          symbol: '\\0'\n        },\n        to: {\n          type: 'Char',\n          value: toValue,\n          kind: 'unicode',\n          symbol: toSymbol\n        }\n      }]\n    });\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar State = require('../state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n/**\n * NFA state.\n *\n * Allows nondeterministic transitions to several states on the\n * same symbol, and also epsilon-transitions.\n */\n\n\nvar NFAState = function (_State) {\n  _inherits(NFAState, _State);\n\n  function NFAState() {\n    _classCallCheck(this, NFAState);\n\n    return _possibleConstructorReturn(this, (NFAState.__proto__ || Object.getPrototypeOf(NFAState)).apply(this, arguments));\n  }\n\n  _createClass(NFAState, [{\n    key: 'matches',\n\n\n    /**\n     * Whether this state matches a string.\n     *\n     * We maintain set of visited epsilon-states to avoid infinite loops\n     * when an epsilon-transition goes eventually to itself.\n     *\n     * NOTE: this function is rather \"educational\", since we use DFA for strings\n     * matching. DFA is built on top of NFA, and uses fast transition table.\n     */\n    value: function matches(string) {\n      var visited = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n\n      // An epsilon-state has been visited, stop to avoid infinite loop.\n      if (visited.has(this)) {\n        return false;\n      }\n\n      visited.add(this);\n\n      // No symbols left..\n      if (string.length === 0) {\n        // .. and we're in the accepting state.\n        if (this.accepting) {\n          return true;\n        }\n\n        // Check if we can reach any accepting state from\n        // on the epsilon transitions.\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.getTransitionsOnSymbol(EPSILON)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var nextState = _step.value;\n\n            if (nextState.matches('', visited)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      }\n\n      // Else, we get some symbols.\n      var symbol = string[0];\n      var rest = string.slice(1);\n\n      var symbolTransitions = this.getTransitionsOnSymbol(symbol);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = symbolTransitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _nextState = _step2.value;\n\n          if (_nextState.matches(rest)) {\n            return true;\n          }\n        }\n\n        // If we couldn't match on symbol, check still epsilon-transitions\n        // without consuming the symbol (i.e. continue from `string`, not `rest`).\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.getTransitionsOnSymbol(EPSILON)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _nextState2 = _step3.value;\n\n          if (_nextState2.matches(string, visited)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Returns an ε-closure for this state:\n     * self + all states following ε-transitions.\n     */\n\n  }, {\n    key: 'getEpsilonClosure',\n    value: function getEpsilonClosure() {\n      var _this2 = this;\n\n      if (!this._epsilonClosure) {\n        (function () {\n          var epsilonTransitions = _this2.getTransitionsOnSymbol(EPSILON);\n          var closure = _this2._epsilonClosure = new Set();\n          closure.add(_this2);\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = epsilonTransitions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var nextState = _step4.value;\n\n              if (!closure.has(nextState)) {\n                closure.add(nextState);\n                var nextClosure = nextState.getEpsilonClosure();\n                nextClosure.forEach(function (state) {\n                  return closure.add(state);\n                });\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        })();\n      }\n\n      return this._epsilonClosure;\n    }\n  }]);\n\n  return NFAState;\n}(State);\n\nmodule.exports = NFAState;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * The `RegExpTree` class provides runtime support for `compat-transpiler`\n * module from `regexp-tree`.\n *\n * E.g. it tracks names of the capturing groups, in order to access the\n * names on the matched result.\n *\n * It's a thin-wrapper on top of original regexp.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RegExpTree = function () {\n  /**\n   * Initializes a `RegExpTree` instance.\n   *\n   * @param RegExp - a regular expression\n   *\n   * @param Object state:\n   *\n   *   An extra state which may store any related to transformation\n   *   data, for example, names of the groups.\n   *\n   *   - flags - original flags\n   *   - groups - names of the groups, and their indices\n   *   - source - original source\n   */\n  function RegExpTree(re, _ref) {\n    var flags = _ref.flags,\n        groups = _ref.groups,\n        source = _ref.source;\n\n    _classCallCheck(this, RegExpTree);\n\n    this._re = re;\n    this._groups = groups;\n\n    // Original props.\n    this.flags = flags;\n    this.source = source || re.source;\n    this.dotAll = flags.includes('s');\n\n    // Inherited directly from `re`.\n    this.global = re.global;\n    this.ignoreCase = re.ignoreCase;\n    this.multiline = re.multiline;\n    this.sticky = re.sticky;\n    this.unicode = re.unicode;\n  }\n\n  /**\n   * Facade wrapper for RegExp `test` method.\n   */\n\n\n  _createClass(RegExpTree, [{\n    key: 'test',\n    value: function test(string) {\n      return this._re.test(string);\n    }\n\n    /**\n     * Facade wrapper for RegExp `compile` method.\n     */\n\n  }, {\n    key: 'compile',\n    value: function compile(string) {\n      return this._re.compile(string);\n    }\n\n    /**\n     * Facade wrapper for RegExp `toString` method.\n     */\n\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (!this._toStringResult) {\n        this._toStringResult = '/' + this.source + '/' + this.flags;\n      }\n      return this._toStringResult;\n    }\n\n    /**\n     * Facade wrapper for RegExp `exec` method.\n     */\n\n  }, {\n    key: 'exec',\n    value: function exec(string) {\n      var result = this._re.exec(string);\n\n      if (!this._groups || !result) {\n        return result;\n      }\n\n      result.groups = {};\n\n      for (var group in this._groups) {\n        var groupNumber = this._groups[group];\n        result.groups[group] = result[groupNumber];\n      }\n\n      return result;\n    }\n  }]);\n\n  return RegExpTree;\n}();\n\nmodule.exports = {\n  RegExpTree: RegExpTree\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nmodule.exports = new Map([\n// \\ud83d\\ude80 -> \\u{1f680}\n['charSurrogatePairToSingleUnicode', require('./char-surrogate-pair-to-single-unicode-transform')],\n\n// \\u0061 -> a\n['charCodeToSimpleChar', require('./char-code-to-simple-char-transform')],\n\n// /Aa/i -> /aa/i\n['charCaseInsensitiveLowerCaseTransform', require('./char-case-insensitive-lowercase-transform')],\n\n// [\\d\\d] -> [\\d]\n['charClassRemoveDuplicates', require('./char-class-remove-duplicates-transform')],\n\n// a{1,2}a{2,3} -> a{3,5}\n['quantifiersMerge', require('./quantifiers-merge-transform')],\n\n// a{1,} -> a+, a{3,3} -> a{3}, a{1} -> a\n['quantifierRangeToSymbol', require('./quantifier-range-to-symbol-transform')],\n\n// [a-a] -> [a], [a-b] -> [ab]\n['charClassClassrangesToChars', require('./char-class-classranges-to-chars-transform')],\n\n// [0-9] -> [\\d]\n['charClassToMeta', require('./char-class-to-meta-transform')],\n\n// [\\d] -> \\d, [^\\w] -> \\W\n['charClassToSingleChar', require('./char-class-to-single-char-transform')],\n\n// \\e -> e\n['charEscapeUnescape', require('./char-escape-unescape-transform')],\n\n// [a-de-f] -> [a-f]\n['charClassClassrangesMerge', require('./char-class-classranges-merge-transform')],\n\n// (ab|ab) -> (ab)\n['disjunctionRemoveDuplicates', require('./disjunction-remove-duplicates-transform')],\n\n// (a|b|c) -> [abc]\n['groupSingleCharsToCharClass', require('./group-single-chars-to-char-class')],\n\n// (?:)a -> a\n['removeEmptyGroup', require('./remove-empty-group-transform')],\n\n// (?:a) -> a\n['ungroup', require('./ungroup-transform')],\n\n// abcabcabc -> (?:abc){3}\n['combineRepeatingPatterns', require('./combine-repeating-patterns-transform')]]);","module.exports = [\n  '>0.25%',\n  'not op_mini all',\n  'not dead',\n  'Firefox ESR',\n];\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar compatTranspiler = require('./compat-transpiler');\nvar generator = require('./generator');\nvar optimizer = require('./optimizer');\nvar parser = require('./parser');\nvar _transform = require('./transform');\nvar _traverse = require('./traverse');\nvar fa = require('./interpreter/finite-automaton');\n\nvar _require = require('./compat-transpiler/runtime'),\n    RegExpTree = _require.RegExpTree;\n\n/**\n * An API object for RegExp processing (parsing/transform/generation).\n */\n\n\nvar regexpTree = {\n  /**\n   * Parser module exposed.\n   */\n  parser: parser,\n\n  /**\n   * Expose finite-automaton module.\n   */\n  fa: fa,\n\n  /**\n   * `TransformResult` exposed.\n   */\n  TransformResult: _transform.TransformResult,\n\n  /**\n   * Parses a regexp string, producing an AST.\n   *\n   * @param string regexp\n   *\n   *   a regular expression in different formats: string, AST, RegExp.\n   *\n   * @param Object options\n   *\n   *   parsing options for this parse call. Default are:\n   *\n   *     - captureLocations: boolean\n   *     - any other custom options\n   *\n   * @return Object AST\n   */\n  parse: function parse(regexp, options) {\n    return parser.parse('' + regexp, options);\n  },\n\n\n  /**\n   * Traverses a RegExp AST.\n   *\n   * @param Object ast\n   * @param Object | Array<Object> handlers\n   *\n   * Each `handler` is an object containing handler function for needed\n   * node types. Example:\n   *\n   *   regexpTree.traverse(ast, {\n   *     onChar(node) {\n   *       ...\n   *     },\n   *   });\n   *\n   * The value for a node type may also be an object with functions pre and post.\n   * This enables more context-aware analyses, e.g. measuring star height.\n   */\n  traverse: function traverse(ast, handlers, options) {\n    return _traverse.traverse(ast, handlers, options);\n  },\n\n\n  /**\n   * Transforms a regular expression.\n   *\n   * A regexp can be passed in different formats (string, regexp or AST),\n   * applying a set of transformations. It is a convenient wrapper\n   * on top of \"parse-traverse-generate\" tool chain.\n   *\n   * @param string | AST | RegExp regexp - a regular expression;\n   * @param Object | Array<Object> handlers - a list of handlers.\n   *\n   * @return TransformResult - a transformation result.\n   */\n  transform: function transform(regexp, handlers) {\n    return _transform.transform(regexp, handlers);\n  },\n\n\n  /**\n   * Generates a RegExp string from an AST.\n   *\n   * @param Object ast\n   *\n   * Invariant:\n   *\n   *   regexpTree.generate(regexpTree.parse('/[a-z]+/i')); // '/[a-z]+/i'\n   */\n  generate: function generate(ast) {\n    return generator.generate(ast);\n  },\n\n\n  /**\n   * Creates a RegExp object from a regexp string.\n   *\n   * @param string regexp\n   */\n  toRegExp: function toRegExp(regexp) {\n    var compat = this.compatTranspile(regexp);\n    return new RegExp(compat.getSource(), compat.getFlags());\n  },\n\n\n  /**\n   * Optimizes a regular expression by replacing some\n   * sub-expressions with their idiomatic patterns.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */\n  optimize: function optimize(regexp, whitelist) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        blacklist = _ref.blacklist;\n\n    return optimizer.optimize(regexp, { whitelist: whitelist, blacklist: blacklist });\n  },\n\n\n  /**\n   * Translates a regular expression in new syntax or in new format\n   * into equivalent expressions in old syntax.\n   *\n   * @param string regexp\n   *\n   * @return TransformResult object\n   */\n  compatTranspile: function compatTranspile(regexp, whitelist) {\n    return compatTranspiler.transform(regexp, whitelist);\n  },\n\n\n  /**\n   * Executes a regular expression on a string.\n   *\n   * @param RegExp|string re - a regular expression.\n   * @param string string - a testing string.\n   */\n  exec: function exec(re, string) {\n    if (typeof re === 'string') {\n      var compat = this.compatTranspile(re);\n      var extra = compat.getExtra();\n\n      if (extra.namedCapturingGroups) {\n        re = new RegExpTree(compat.toRegExp(), {\n          flags: compat.getFlags(),\n          source: compat.getSource(),\n          groups: extra.namedCapturingGroups\n        });\n      } else {\n        re = compat.toRegExp();\n      }\n    }\n\n    return re.exec(string);\n  }\n};\n\nmodule.exports = regexpTree;","/**\n * SPDX-FileCopyrightText: 2021 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getUserAgentRegex } from 'browserslist-useragent-regexp'\n// eslint-disable-next-line n/no-extraneous-import\nimport browserslist from 'browserslist'\nimport browserslistConfig from '@nextcloud/browserslist-config'\n\n// Generate a regex that matches user agents to detect incompatible browsers\nexport const supportedBrowsersRegExp = getUserAgentRegex({ allowHigherVersions: true, browsers: browserslistConfig })\nexport const supportedBrowsers = browserslist(browserslistConfig)\n","module.exports={\"0\":\"22\",\"1\":\"23\",\"2\":\"24\",\"3\":\"25\",\"4\":\"26\",\"5\":\"27\",\"6\":\"115\",\"7\":\"116\",\"8\":\"117\",\"9\":\"118\",A:\"10\",B:\"11\",C:\"12\",D:\"132\",E:\"7\",F:\"8\",G:\"9\",H:\"15\",I:\"80\",J:\"4\",K:\"6\",L:\"13\",M:\"14\",N:\"16\",O:\"17\",P:\"18\",Q:\"79\",R:\"81\",S:\"83\",T:\"84\",U:\"85\",V:\"86\",W:\"87\",X:\"88\",Y:\"89\",Z:\"90\",a:\"91\",b:\"92\",c:\"93\",d:\"94\",e:\"95\",f:\"96\",g:\"97\",h:\"98\",i:\"99\",j:\"100\",k:\"101\",l:\"102\",m:\"103\",n:\"104\",o:\"105\",p:\"106\",q:\"107\",r:\"108\",s:\"109\",t:\"110\",u:\"111\",v:\"112\",w:\"113\",x:\"114\",y:\"20\",z:\"21\",AB:\"119\",BB:\"120\",CB:\"121\",DB:\"122\",EB:\"123\",FB:\"124\",GB:\"125\",HB:\"126\",IB:\"127\",JB:\"128\",KB:\"129\",LB:\"130\",MB:\"131\",NB:\"5\",OB:\"19\",PB:\"28\",QB:\"29\",RB:\"30\",SB:\"31\",TB:\"32\",UB:\"33\",VB:\"34\",WB:\"35\",XB:\"36\",YB:\"37\",ZB:\"38\",aB:\"39\",bB:\"40\",cB:\"41\",dB:\"42\",eB:\"43\",fB:\"44\",gB:\"45\",hB:\"46\",iB:\"47\",jB:\"48\",kB:\"49\",lB:\"50\",mB:\"51\",nB:\"52\",oB:\"53\",pB:\"54\",qB:\"55\",rB:\"56\",sB:\"57\",tB:\"58\",uB:\"60\",vB:\"62\",wB:\"63\",xB:\"64\",yB:\"65\",zB:\"66\",\"0B\":\"67\",\"1B\":\"68\",\"2B\":\"69\",\"3B\":\"70\",\"4B\":\"71\",\"5B\":\"72\",\"6B\":\"73\",\"7B\":\"74\",\"8B\":\"75\",\"9B\":\"76\",AC:\"77\",BC:\"78\",CC:\"11.1\",DC:\"12.1\",EC:\"15.5\",FC:\"16.0\",GC:\"17.0\",HC:\"18.0\",IC:\"3\",JC:\"59\",KC:\"61\",LC:\"82\",MC:\"133\",NC:\"134\",OC:\"135\",PC:\"136\",QC:\"3.2\",RC:\"10.1\",SC:\"15.2-15.3\",TC:\"15.4\",UC:\"16.1\",VC:\"16.2\",WC:\"16.3\",XC:\"16.4\",YC:\"16.5\",ZC:\"17.1\",aC:\"17.2\",bC:\"17.3\",cC:\"17.4\",dC:\"17.5\",eC:\"18.1\",fC:\"18.2\",gC:\"18.3\",hC:\"18.4\",iC:\"11.5\",jC:\"4.2-4.3\",kC:\"5.5\",lC:\"2\",mC:\"137\",nC:\"138\",oC:\"3.5\",pC:\"3.6\",qC:\"3.1\",rC:\"5.1\",sC:\"6.1\",tC:\"7.1\",uC:\"9.1\",vC:\"13.1\",wC:\"14.1\",xC:\"15.1\",yC:\"15.6\",zC:\"16.6\",\"0C\":\"17.6\",\"1C\":\"TP\",\"2C\":\"9.5-9.6\",\"3C\":\"10.0-10.1\",\"4C\":\"10.5\",\"5C\":\"10.6\",\"6C\":\"11.6\",\"7C\":\"4.0-4.1\",\"8C\":\"5.0-5.1\",\"9C\":\"6.0-6.1\",AD:\"7.0-7.1\",BD:\"8.1-8.4\",CD:\"9.0-9.2\",DD:\"9.3\",ED:\"10.0-10.2\",FD:\"10.3\",GD:\"11.0-11.2\",HD:\"11.3-11.4\",ID:\"12.0-12.1\",JD:\"12.2-12.5\",KD:\"13.0-13.1\",LD:\"13.2\",MD:\"13.3\",ND:\"13.4-13.7\",OD:\"14.0-14.4\",PD:\"14.5-14.8\",QD:\"15.0-15.1\",RD:\"15.6-15.8\",SD:\"16.6-16.7\",TD:\"17.6-17.7\",UD:\"all\",VD:\"2.1\",WD:\"2.2\",XD:\"2.3\",YD:\"4.1\",ZD:\"4.4\",aD:\"4.4.3-4.4.4\",bD:\"5.0-5.4\",cD:\"6.2-6.4\",dD:\"7.2-7.4\",eD:\"8.2\",fD:\"9.2\",gD:\"11.1-11.2\",hD:\"12.0\",iD:\"13.0\",jD:\"14.0\",kD:\"15.0\",lD:\"19.0\",mD:\"14.9\",nD:\"13.52\",oD:\"2.5\",pD:\"3.0-3.1\"};\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove `x` flag `/foo/x` to `/foo/`.\n *\n * Note: other features of `x` flags (whitespace, comments) are\n * already removed at parsing stage.\n */\n\nmodule.exports = {\n  RegExp: function RegExp(_ref) {\n    var node = _ref.node;\n\n    if (node.flags.includes('x')) {\n      node.flags = node.flags.replace('x', '');\n    }\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    disjunctionToList = _require.disjunctionToList,\n    listToDisjunction = _require.listToDisjunction;\n\n/**\n * Removes duplicates from a disjunction sequence:\n *\n * /(ab|bc|ab)+(xy|xy)+/ -> /(ab|bc)+(xy)+/\n */\n\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node;\n\n    // Make unique nodes.\n\n    var uniqueNodesMap = {};\n\n    var parts = disjunctionToList(node).filter(function (part) {\n      var encoded = part ? NodePath.getForNode(part).jsonEncode() : 'null';\n\n      // Already recorded this part, filter out.\n      if (uniqueNodesMap.hasOwnProperty(encoded)) {\n        return false;\n      }\n\n      uniqueNodesMap[encoded] = part;\n      return true;\n    });\n\n    // Replace with the optimized disjunction.\n    path.replace(listToDisjunction(parts));\n  }\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to translate `/(?<name>a)\\k<name>/` to `/(a)\\1/`.\n */\n\nmodule.exports = {\n  // To track the names of the groups, and return them\n  // in the transform result state.\n  //\n  // A map from name to number: {foo: 2, bar: 4}\n  _groupNames: {},\n\n  /**\n   * Initialises the trasnform.\n   */\n  init: function init() {\n    this._groupNames = {};\n  },\n\n\n  /**\n   * Returns extra state, which eventually is returned to\n   */\n  getExtra: function getExtra() {\n    return this._groupNames;\n  },\n  Group: function Group(path) {\n    var node = path.node;\n\n\n    if (!node.name) {\n      return;\n    }\n\n    // Record group name.\n    this._groupNames[node.name] = node.number;\n\n    delete node.name;\n    delete node.nameRaw;\n  },\n  Backreference: function Backreference(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'name') {\n      return;\n    }\n\n    node.kind = 'number';\n    node.reference = node.number;\n    delete node.referenceRaw;\n  }\n};","module.exports.browsers = require('../../data/browsers')\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar clone = require('../utils/clone');\nvar parser = require('../parser');\nvar transform = require('../transform');\nvar optimizationTransforms = require('./transforms');\n\nmodule.exports = {\n  /**\n   * Optimizer transforms a regular expression into an optimized version,\n   * replacing some sub-expressions with their idiomatic patterns.\n   *\n   * @param string | RegExp | AST - a regexp to optimize.\n   *\n   * @return TransformResult - an optimized regexp.\n   *\n   * Example:\n   *\n   *   /[a-zA-Z_0-9][a-zA-Z_0-9]*\\e{1,}/\n   *\n   * Optimized to:\n   *\n   *   /\\w+e+/\n   */\n  optimize: function optimize(regexp) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$whitelist = _ref.whitelist,\n        whitelist = _ref$whitelist === undefined ? [] : _ref$whitelist,\n        _ref$blacklist = _ref.blacklist,\n        blacklist = _ref$blacklist === undefined ? [] : _ref$blacklist;\n\n    var transformsRaw = whitelist.length > 0 ? whitelist : Array.from(optimizationTransforms.keys());\n\n    var transformToApply = transformsRaw.filter(function (transform) {\n      return !blacklist.includes(transform);\n    });\n\n    var ast = regexp;\n    if (regexp instanceof RegExp) {\n      regexp = '' + regexp;\n    }\n\n    if (typeof regexp === 'string') {\n      ast = parser.parse(regexp);\n    }\n\n    var result = new transform.TransformResult(ast);\n    var prevResultString = void 0;\n\n    do {\n      // Get a copy of the current state here so\n      // we can compare it with the state at the\n      // end of the loop.\n      prevResultString = result.toString();\n      ast = clone(result.getAST());\n\n      transformToApply.forEach(function (transformName) {\n        if (!optimizationTransforms.has(transformName)) {\n          throw new Error('Unknown optimization-transform: ' + transformName + '. ' + 'Available transforms are: ' + Array.from(optimizationTransforms.keys()).join(', '));\n        }\n\n        var transformer = optimizationTransforms.get(transformName);\n\n        // Don't override result just yet since we\n        // might want to rollback the transform\n        var newResult = transform.transform(ast, transformer);\n\n        if (newResult.toString() !== result.toString()) {\n          if (newResult.toString().length <= result.toString().length) {\n            result = newResult;\n          } else {\n            // Result has changed but is not shorter:\n            // restore ast to its previous state.\n\n            ast = clone(result.getAST());\n          }\n        }\n      });\n\n      // Keep running the optimizer until it stops\n      // making any change to the regexp.\n    } while (result.toString() !== prevResultString);\n\n    return result;\n  }\n};","module.exports = {\n\t\"0.20\": \"39\",\n\t\"0.21\": \"41\",\n\t\"0.22\": \"41\",\n\t\"0.23\": \"41\",\n\t\"0.24\": \"41\",\n\t\"0.25\": \"42\",\n\t\"0.26\": \"42\",\n\t\"0.27\": \"43\",\n\t\"0.28\": \"43\",\n\t\"0.29\": \"43\",\n\t\"0.30\": \"44\",\n\t\"0.31\": \"45\",\n\t\"0.32\": \"45\",\n\t\"0.33\": \"45\",\n\t\"0.34\": \"45\",\n\t\"0.35\": \"45\",\n\t\"0.36\": \"47\",\n\t\"0.37\": \"49\",\n\t\"1.0\": \"49\",\n\t\"1.1\": \"50\",\n\t\"1.2\": \"51\",\n\t\"1.3\": \"52\",\n\t\"1.4\": \"53\",\n\t\"1.5\": \"54\",\n\t\"1.6\": \"56\",\n\t\"1.7\": \"58\",\n\t\"1.8\": \"59\",\n\t\"2.0\": \"61\",\n\t\"2.1\": \"61\",\n\t\"3.0\": \"66\",\n\t\"3.1\": \"66\",\n\t\"4.0\": \"69\",\n\t\"4.1\": \"69\",\n\t\"4.2\": \"69\",\n\t\"5.0\": \"73\",\n\t\"6.0\": \"76\",\n\t\"6.1\": \"76\",\n\t\"7.0\": \"78\",\n\t\"7.1\": \"78\",\n\t\"7.2\": \"78\",\n\t\"7.3\": \"78\",\n\t\"8.0\": \"80\",\n\t\"8.1\": \"80\",\n\t\"8.2\": \"80\",\n\t\"8.3\": \"80\",\n\t\"8.4\": \"80\",\n\t\"8.5\": \"80\",\n\t\"9.0\": \"83\",\n\t\"9.1\": \"83\",\n\t\"9.2\": \"83\",\n\t\"9.3\": \"83\",\n\t\"9.4\": \"83\",\n\t\"10.0\": \"85\",\n\t\"10.1\": \"85\",\n\t\"10.2\": \"85\",\n\t\"10.3\": \"85\",\n\t\"10.4\": \"85\",\n\t\"11.0\": \"87\",\n\t\"11.1\": \"87\",\n\t\"11.2\": \"87\",\n\t\"11.3\": \"87\",\n\t\"11.4\": \"87\",\n\t\"11.5\": \"87\",\n\t\"12.0\": \"89\",\n\t\"12.1\": \"89\",\n\t\"12.2\": \"89\",\n\t\"13.0\": \"91\",\n\t\"13.1\": \"91\",\n\t\"13.2\": \"91\",\n\t\"13.3\": \"91\",\n\t\"13.4\": \"91\",\n\t\"13.5\": \"91\",\n\t\"13.6\": \"91\",\n\t\"14.0\": \"93\",\n\t\"14.1\": \"93\",\n\t\"14.2\": \"93\",\n\t\"15.0\": \"94\",\n\t\"15.1\": \"94\",\n\t\"15.2\": \"94\",\n\t\"15.3\": \"94\",\n\t\"15.4\": \"94\",\n\t\"15.5\": \"94\",\n\t\"16.0\": \"96\",\n\t\"16.1\": \"96\",\n\t\"16.2\": \"96\",\n\t\"17.0\": \"98\",\n\t\"17.1\": \"98\",\n\t\"17.2\": \"98\",\n\t\"17.3\": \"98\",\n\t\"17.4\": \"98\",\n\t\"18.0\": \"100\",\n\t\"18.1\": \"100\",\n\t\"18.2\": \"100\",\n\t\"18.3\": \"100\",\n\t\"19.0\": \"102\",\n\t\"19.1\": \"102\",\n\t\"20.0\": \"104\",\n\t\"20.1\": \"104\",\n\t\"20.2\": \"104\",\n\t\"20.3\": \"104\",\n\t\"21.0\": \"106\",\n\t\"21.1\": \"106\",\n\t\"21.2\": \"106\",\n\t\"21.3\": \"106\",\n\t\"21.4\": \"106\",\n\t\"22.0\": \"108\",\n\t\"22.1\": \"108\",\n\t\"22.2\": \"108\",\n\t\"22.3\": \"108\",\n\t\"23.0\": \"110\",\n\t\"23.1\": \"110\",\n\t\"23.2\": \"110\",\n\t\"23.3\": \"110\",\n\t\"24.0\": \"112\",\n\t\"24.1\": \"112\",\n\t\"24.2\": \"112\",\n\t\"24.3\": \"112\",\n\t\"24.4\": \"112\",\n\t\"24.5\": \"112\",\n\t\"24.6\": \"112\",\n\t\"24.7\": \"112\",\n\t\"24.8\": \"112\",\n\t\"25.0\": \"114\",\n\t\"25.1\": \"114\",\n\t\"25.2\": \"114\",\n\t\"25.3\": \"114\",\n\t\"25.4\": \"114\",\n\t\"25.5\": \"114\",\n\t\"25.6\": \"114\",\n\t\"25.7\": \"114\",\n\t\"25.8\": \"114\",\n\t\"25.9\": \"114\",\n\t\"26.0\": \"116\",\n\t\"26.1\": \"116\",\n\t\"26.2\": \"116\",\n\t\"26.3\": \"116\",\n\t\"26.4\": \"116\",\n\t\"26.5\": \"116\",\n\t\"26.6\": \"116\",\n\t\"27.0\": \"118\",\n\t\"27.1\": \"118\",\n\t\"27.2\": \"118\",\n\t\"27.3\": \"118\",\n\t\"28.0\": \"120\",\n\t\"28.1\": \"120\",\n\t\"28.2\": \"120\",\n\t\"28.3\": \"120\",\n\t\"29.0\": \"122\",\n\t\"29.1\": \"122\",\n\t\"29.2\": \"122\",\n\t\"29.3\": \"122\",\n\t\"29.4\": \"122\",\n\t\"30.0\": \"124\",\n\t\"30.1\": \"124\",\n\t\"30.2\": \"124\",\n\t\"30.3\": \"124\",\n\t\"30.4\": \"124\",\n\t\"30.5\": \"124\",\n\t\"31.0\": \"126\",\n\t\"31.1\": \"126\",\n\t\"31.2\": \"126\",\n\t\"31.3\": \"126\",\n\t\"31.4\": \"126\",\n\t\"31.5\": \"126\",\n\t\"31.6\": \"126\",\n\t\"31.7\": \"126\",\n\t\"32.0\": \"128\",\n\t\"32.1\": \"128\",\n\t\"32.2\": \"128\",\n\t\"32.3\": \"128\",\n\t\"33.0\": \"130\",\n\t\"33.1\": \"130\",\n\t\"33.2\": \"130\",\n\t\"33.3\": \"130\",\n\t\"33.4\": \"130\",\n\t\"34.0\": \"132\",\n\t\"34.1\": \"132\",\n\t\"34.2\": \"132\",\n\t\"34.3\": \"132\",\n\t\"35.0\": \"134\"\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to merge class ranges.\n *\n * [a-ec] -> [a-e]\n * [a-ec-e] -> [a-e]\n * [\\w\\da-f] -> [\\w]\n * [abcdef] -> [a-f]\n */\n\nmodule.exports = {\n  _hasIUFlags: false,\n  init: function init(ast) {\n    this._hasIUFlags = ast.flags.includes('i') && ast.flags.includes('u');\n  },\n  CharacterClass: function CharacterClass(path) {\n    var node = path.node;\n\n    var expressions = node.expressions;\n\n    var metas = [];\n    // Extract metas\n    expressions.forEach(function (expression) {\n      if (isMeta(expression)) {\n        metas.push(expression.value);\n      }\n    });\n\n    expressions.sort(sortCharClass);\n\n    for (var i = 0; i < expressions.length; i++) {\n      var expression = expressions[i];\n      if (fitsInMetas(expression, metas, this._hasIUFlags) || combinesWithPrecedingClassRange(expression, expressions[i - 1]) || combinesWithFollowingClassRange(expression, expressions[i + 1])) {\n        expressions.splice(i, 1);\n        i--;\n      } else {\n        var nbMergedChars = charCombinesWithPrecedingChars(expression, i, expressions);\n        expressions.splice(i - nbMergedChars + 1, nbMergedChars);\n        i -= nbMergedChars;\n      }\n    }\n  }\n};\n\n/**\n * Sorts expressions in char class in the following order:\n * - meta chars, ordered alphabetically by value\n * - chars (except `control` kind) and class ranges, ordered alphabetically (`from` char is used for class ranges)\n * - if ambiguous, class range comes before char\n * - if ambiguous between two class ranges, orders alphabetically by `to` char\n * - control chars, ordered alphabetically by value\n * @param {Object} a - Left Char or ClassRange node\n * @param {Object} b - Right Char or ClassRange node\n * @returns {number}\n */\nfunction sortCharClass(a, b) {\n  var aValue = getSortValue(a);\n  var bValue = getSortValue(b);\n\n  if (aValue === bValue) {\n    // We want ClassRange before Char\n    // [bb-d] -> [b-db]\n    if (a.type === 'ClassRange' && b.type !== 'ClassRange') {\n      return -1;\n    }\n    if (b.type === 'ClassRange' && a.type !== 'ClassRange') {\n      return 1;\n    }\n    if (a.type === 'ClassRange' && b.type === 'ClassRange') {\n      return getSortValue(a.to) - getSortValue(b.to);\n    }\n    if (isMeta(a) && isMeta(b) || isControl(a) && isControl(b)) {\n      return a.value < b.value ? -1 : 1;\n    }\n  }\n  return aValue - bValue;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @returns {number}\n */\nfunction getSortValue(expression) {\n  if (expression.type === 'Char') {\n    if (expression.value === '-') {\n      return Infinity;\n    }\n    if (expression.kind === 'control') {\n      return Infinity;\n    }\n    if (expression.kind === 'meta' && isNaN(expression.codePoint)) {\n      return -1;\n    }\n    return expression.codePoint;\n  }\n  // ClassRange\n  return expression.from.codePoint;\n}\n\n/**\n * Checks if a node is a meta char from the set \\d\\w\\s\\D\\W\\S\n * @param {Object} expression - Char or ClassRange node\n * @param {?string} value\n * @returns {boolean}\n */\nfunction isMeta(expression) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  return expression.type === 'Char' && expression.kind === 'meta' && (value ? expression.value === value : /^\\\\[dws]$/i.test(expression.value));\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @returns {boolean}\n */\nfunction isControl(expression) {\n  return expression.type === 'Char' && expression.kind === 'control';\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {string[]} metas - Array of meta chars, e.g. [\"\\\\w\", \"\\\\s\"]\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMetas(expression, metas, hasIUFlags) {\n  for (var i = 0; i < metas.length; i++) {\n    if (fitsInMeta(expression, metas[i], hasIUFlags)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {string} meta - e.g. \"\\\\w\"\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMeta(expression, meta, hasIUFlags) {\n  if (expression.type === 'ClassRange') {\n    return fitsInMeta(expression.from, meta, hasIUFlags) && fitsInMeta(expression.to, meta, hasIUFlags);\n  }\n\n  // Special cases:\n  // \\S contains \\w and \\d\n  if (meta === '\\\\S' && (isMeta(expression, '\\\\w') || isMeta(expression, '\\\\d'))) {\n    return true;\n  }\n  // \\D contains \\W and \\s\n  if (meta === '\\\\D' && (isMeta(expression, '\\\\W') || isMeta(expression, '\\\\s'))) {\n    return true;\n  }\n  // \\w contains \\d\n  if (meta === '\\\\w' && isMeta(expression, '\\\\d')) {\n    return true;\n  }\n  // \\W contains \\s\n  if (meta === '\\\\W' && isMeta(expression, '\\\\s')) {\n    return true;\n  }\n\n  if (expression.type !== 'Char' || isNaN(expression.codePoint)) {\n    return false;\n  }\n\n  if (meta === '\\\\s') {\n    return fitsInMetaS(expression);\n  }\n  if (meta === '\\\\S') {\n    return !fitsInMetaS(expression);\n  }\n  if (meta === '\\\\d') {\n    return fitsInMetaD(expression);\n  }\n  if (meta === '\\\\D') {\n    return !fitsInMetaD(expression);\n  }\n  if (meta === '\\\\w') {\n    return fitsInMetaW(expression, hasIUFlags);\n  }\n  if (meta === '\\\\W') {\n    return !fitsInMetaW(expression, hasIUFlags);\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @returns {boolean}\n */\nfunction fitsInMetaS(expression) {\n  return expression.codePoint === 0x0009 || // \\t\n  expression.codePoint === 0x000a || // \\n\n  expression.codePoint === 0x000b || // \\v\n  expression.codePoint === 0x000c || // \\f\n  expression.codePoint === 0x000d || // \\r\n  expression.codePoint === 0x0020 || // space\n  expression.codePoint === 0x00a0 || // nbsp\n  expression.codePoint === 0x1680 || // part of Zs\n  expression.codePoint >= 0x2000 && expression.codePoint <= 0x200a || // part of Zs\n  expression.codePoint === 0x2028 || // line separator\n  expression.codePoint === 0x2029 || // paragraph separator\n  expression.codePoint === 0x202f || // part of Zs\n  expression.codePoint === 0x205f || // part of Zs\n  expression.codePoint === 0x3000 || // part of Zs\n  expression.codePoint === 0xfeff; // zwnbsp\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @returns {boolean}\n */\nfunction fitsInMetaD(expression) {\n  return expression.codePoint >= 0x30 && expression.codePoint <= 0x39; // 0-9\n}\n\n/**\n * @param {Object} expression - Char node with codePoint\n * @param {boolean} hasIUFlags\n * @returns {boolean}\n */\nfunction fitsInMetaW(expression, hasIUFlags) {\n  return fitsInMetaD(expression) || expression.codePoint >= 0x41 && expression.codePoint <= 0x5a || // A-Z\n  expression.codePoint >= 0x61 && expression.codePoint <= 0x7a || // a-z\n  expression.value === '_' || hasIUFlags && (expression.codePoint === 0x017f || expression.codePoint === 0x212a);\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - Char or ClassRange node\n * @returns {boolean}\n */\nfunction combinesWithPrecedingClassRange(expression, classRange) {\n  if (classRange && classRange.type === 'ClassRange') {\n    if (fitsInClassRange(expression, classRange)) {\n      // [a-gc] -> [a-g]\n      // [a-gc-e] -> [a-g]\n      return true;\n    } else if (\n    // We only want \\w chars or char codes to keep readability\n    isMetaWCharOrCode(expression) && classRange.to.codePoint === expression.codePoint - 1) {\n      // [a-de] -> [a-e]\n      classRange.to = expression;\n      return true;\n    } else if (expression.type === 'ClassRange' && expression.from.codePoint <= classRange.to.codePoint + 1 && expression.to.codePoint >= classRange.from.codePoint - 1) {\n      // [a-db-f] -> [a-f]\n      // [b-fa-d] -> [a-f]\n      // [a-cd-f] -> [a-f]\n      if (expression.from.codePoint < classRange.from.codePoint) {\n        classRange.from = expression.from;\n      }\n      if (expression.to.codePoint > classRange.to.codePoint) {\n        classRange.to = expression.to;\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - Char or ClassRange node\n * @returns {boolean}\n */\nfunction combinesWithFollowingClassRange(expression, classRange) {\n  if (classRange && classRange.type === 'ClassRange') {\n    // Considering the elements were ordered alphabetically,\n    // there is only one case to handle\n    // [ab-e] -> [a-e]\n    if (\n    // We only want \\w chars or char codes to keep readability\n    isMetaWCharOrCode(expression) && classRange.from.codePoint === expression.codePoint + 1) {\n      classRange.from = expression;\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Object} classRange - ClassRange node\n * @returns {boolean}\n */\nfunction fitsInClassRange(expression, classRange) {\n  if (expression.type === 'Char' && isNaN(expression.codePoint)) {\n    return false;\n  }\n  if (expression.type === 'ClassRange') {\n    return fitsInClassRange(expression.from, classRange) && fitsInClassRange(expression.to, classRange);\n  }\n  return expression.codePoint >= classRange.from.codePoint && expression.codePoint <= classRange.to.codePoint;\n}\n\n/**\n * @param {Object} expression - Char or ClassRange node\n * @param {Number} index\n * @param {Object[]} expressions - expressions in CharClass\n * @returns {number} - Number of characters combined with expression\n */\nfunction charCombinesWithPrecedingChars(expression, index, expressions) {\n  // We only want \\w chars or char codes to keep readability\n  if (!isMetaWCharOrCode(expression)) {\n    return 0;\n  }\n  var nbMergedChars = 0;\n  while (index > 0) {\n    var currentExpression = expressions[index];\n    var precedingExpresion = expressions[index - 1];\n    if (isMetaWCharOrCode(precedingExpresion) && precedingExpresion.codePoint === currentExpression.codePoint - 1) {\n      nbMergedChars++;\n      index--;\n    } else {\n      break;\n    }\n  }\n\n  if (nbMergedChars > 1) {\n    expressions[index] = {\n      type: 'ClassRange',\n      from: expressions[index],\n      to: expression\n    };\n    return nbMergedChars;\n  }\n  return 0;\n}\n\nfunction isMetaWCharOrCode(expression) {\n  return expression && expression.type === 'Char' && !isNaN(expression.codePoint) && (fitsInMetaW(expression, false) || expression.kind === 'unicode' || expression.kind === 'hex' || expression.kind === 'oct' || expression.kind === 'decimal');\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar NFA = require('./nfa');\nvar NFAState = require('./nfa-state');\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON;\n\n// -----------------------------------------------------------------------------\n// Char NFA fragment: `c`\n\n/**\n * Char factory.\n *\n * Creates an NFA fragment for a single char.\n *\n * [in] --c--> [out]\n */\n\n\nfunction char(c) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  return new NFA(inState.addTransition(c, outState), outState);\n}\n\n// -----------------------------------------------------------------------------\n// Epsilon NFA fragment\n\n/**\n * Epsilon factory.\n *\n * Creates an NFA fragment for ε (recognizes an empty string).\n *\n * [in] --ε--> [out]\n */\nfunction e() {\n  return char(EPSILON);\n}\n\n// -----------------------------------------------------------------------------\n// Alteration NFA fragment: `abc`\n\n/**\n * Creates a connection between two NFA fragments on epsilon transition.\n *\n * [in-a] --a--> [out-a] --ε--> [in-b] --b--> [out-b]\n */\nfunction altPair(first, second) {\n  first.out.accepting = false;\n  second.out.accepting = true;\n\n  first.out.addTransition(EPSILON, second.in);\n\n  return new NFA(first.in, second.out);\n}\n\n/**\n * Alteration factory.\n *\n * Creates a alteration NFA for (at least) two NFA-fragments.\n */\nfunction alt(first) {\n  for (var _len = arguments.length, fragments = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    fragments[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = fragments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var fragment = _step.value;\n\n      first = altPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Disjunction NFA fragment: `a|b`\n\n/**\n * Creates a disjunction choice between two fragments.\n */\nfunction orPair(first, second) {\n  var inState = new NFAState();\n  var outState = new NFAState();\n\n  inState.addTransition(EPSILON, first.in);\n  inState.addTransition(EPSILON, second.in);\n\n  outState.accepting = true;\n  first.out.accepting = false;\n  second.out.accepting = false;\n\n  first.out.addTransition(EPSILON, outState);\n  second.out.addTransition(EPSILON, outState);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Disjunction factory.\n *\n * Creates a disjunction NFA for (at least) two NFA-fragments.\n */\nfunction or(first) {\n  for (var _len2 = arguments.length, fragments = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    fragments[_key2 - 1] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = fragments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var fragment = _step2.value;\n\n      first = orPair(first, fragment);\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return first;\n}\n\n// -----------------------------------------------------------------------------\n// Kleene-closure\n\n/**\n * Kleene star/closure.\n *\n * a*\n */\nfunction repExplicit(fragment) {\n  var inState = new NFAState();\n  var outState = new NFAState({\n    accepting: true\n  });\n\n  // 0 or more.\n  inState.addTransition(EPSILON, fragment.in);\n  inState.addTransition(EPSILON, outState);\n\n  fragment.out.accepting = false;\n  fragment.out.addTransition(EPSILON, outState);\n  outState.addTransition(EPSILON, fragment.in);\n\n  return new NFA(inState, outState);\n}\n\n/**\n * Optimized Kleene-star: just adds ε-transitions from\n * input to the output, and back.\n */\nfunction rep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized Plus: just adds ε-transitions from\n * the output to the input.\n */\nfunction plusRep(fragment) {\n  fragment.out.addTransition(EPSILON, fragment.in);\n  return fragment;\n}\n\n/**\n * Optimized ? repetition: just adds ε-transitions from\n * the input to the output.\n */\nfunction questionRep(fragment) {\n  fragment.in.addTransition(EPSILON, fragment.out);\n  return fragment;\n}\n\nmodule.exports = {\n  alt: alt,\n  char: char,\n  e: e,\n  or: or,\n  rep: rep,\n  repExplicit: repExplicit,\n  plusRep: plusRep,\n  questionRep: questionRep\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove non-capturing empty groups.\n *\n * /(?:)a/ -> /a/\n * /a|(?:)/ -> /a|/\n */\n\nmodule.exports = {\n  Group: function Group(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    var childPath = path.getChild();\n\n    if (node.capturing || childPath) {\n      return;\n    }\n\n    if (parent.type === 'Repetition') {\n\n      path.getParent().replace(node);\n    } else if (parent.type !== 'RegExp') {\n\n      path.remove();\n    }\n  }\n};","function BrowserslistError(message) {\n  this.name = 'BrowserslistError'\n  this.message = message\n  this.browserslist = true\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, BrowserslistError)\n  }\n}\n\nBrowserslistError.prototype = Error.prototype\n\nmodule.exports = BrowserslistError\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * Epsilon, the empty string.\n */\n\nvar EPSILON = 'ε';\n\n/**\n * Epsilon-closure.\n */\nvar EPSILON_CLOSURE = EPSILON + '*';\n\nmodule.exports = {\n  EPSILON: EPSILON,\n  EPSILON_CLOSURE: EPSILON_CLOSURE\n};","'use strict'\n\nconst browsers = require('./browsers').browsers\nconst versions = require('./browserVersions').browserVersions\nconst agentsData = require('../../data/agents')\n\nfunction unpackBrowserVersions(versionsData) {\n  return Object.keys(versionsData).reduce((usage, version) => {\n    usage[versions[version]] = versionsData[version]\n    return usage\n  }, {})\n}\n\nmodule.exports.agents = Object.keys(agentsData).reduce((map, key) => {\n  let versionsData = agentsData[key]\n  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {\n    if (entry === 'A') {\n      data.usage_global = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'C') {\n      data.versions = versionsData[entry].reduce((list, version) => {\n        if (version === '') {\n          list.push(null)\n        } else {\n          list.push(versions[version])\n        }\n        return list\n      }, [])\n    } else if (entry === 'D') {\n      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])\n    } else if (entry === 'E') {\n      data.browser = versionsData[entry]\n    } else if (entry === 'F') {\n      data.release_date = Object.keys(versionsData[entry]).reduce(\n        (map2, key2) => {\n          map2[versions[key2]] = versionsData[entry][key2]\n          return map2\n        },\n        {}\n      )\n    } else {\n      // entry is B\n      data.prefix = versionsData[entry]\n    }\n    return data\n  }, {})\n  return map\n}, {})\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to simplify character classes\n * spanning only one or two chars.\n *\n * [a-a] -> [a]\n * [a-b] -> [ab]\n */\n\nmodule.exports = {\n  ClassRange: function ClassRange(path) {\n    var node = path.node;\n\n\n    if (node.from.codePoint === node.to.codePoint) {\n\n      path.replace(node.from);\n    } else if (node.from.codePoint === node.to.codePoint - 1) {\n\n      path.getParent().insertChildAt(node.to, path.index + 1);\n      path.replace(node.from);\n    }\n  }\n};","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { generateUrl } from '@nextcloud/router'\nimport { supportedBrowsersRegExp } from '../services/BrowsersListService.js'\nimport browserStorage from '../services/BrowserStorageService.js'\nimport logger from '../logger.js'\n\nexport const browserStorageKey = 'unsupported-browser-ignore'\nconst redirectPath = generateUrl('/unsupported')\n\nconst isBrowserOverridden = browserStorage.getItem(browserStorageKey) === 'true'\n\n/**\n * Test the current browser user agent against our official browserslist config\n * and redirect if unsupported\n */\nexport const testSupportedBrowser = function() {\n\tif (supportedBrowsersRegExp.test(navigator.userAgent)) {\n\t\tlogger.debug('this browser is officially supported ! 🚀')\n\t\treturn\n\t}\n\n\t// If incompatible BUT ignored, let's keep going\n\tif (isBrowserOverridden) {\n\t\tlogger.debug('this browser is NOT supported but has been manually overridden ! ⚠️')\n\t\treturn\n\t}\n\n\t// If incompatible, NOT overridden AND NOT already on the warning page,\n\t// redirect to the unsupported warning page\n\tif (window.location.pathname.indexOf(redirectPath) === -1) {\n\t\tconst redirectUrl = window.location.href.replace(window.location.origin, '')\n\t\tconst base64Param = Buffer.from(redirectUrl).toString('base64')\n\t\thistory.pushState(null, null, `${redirectPath}?redirect_url=${base64Param}`)\n\t\twindow.location.reload()\n\t}\n}\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A generic FA State class (base for NFA and DFA).\n *\n * Maintains the transition map, and the flag whether\n * the state is accepting.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar State = function () {\n  function State() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$accepting = _ref.accepting,\n        accepting = _ref$accepting === undefined ? false : _ref$accepting;\n\n    _classCallCheck(this, State);\n\n    /**\n     * Outgoing transitions to other states.\n     */\n    this._transitions = new Map();\n\n    /**\n     * Whether the state is accepting.\n     */\n    this.accepting = accepting;\n  }\n\n  /**\n   * Returns transitions for this state.\n   */\n\n\n  _createClass(State, [{\n    key: 'getTransitions',\n    value: function getTransitions() {\n      return this._transitions;\n    }\n\n    /**\n     * Creates a transition on symbol.\n     */\n\n  }, {\n    key: 'addTransition',\n    value: function addTransition(symbol, toState) {\n      this.getTransitionsOnSymbol(symbol).add(toState);\n      return this;\n    }\n\n    /**\n     * Returns transitions set on symbol.\n     */\n\n  }, {\n    key: 'getTransitionsOnSymbol',\n    value: function getTransitionsOnSymbol(symbol) {\n      var transitions = this._transitions.get(symbol);\n\n      if (!transitions) {\n        transitions = new Set();\n        this._transitions.set(symbol, transitions);\n      }\n\n      return transitions;\n    }\n  }]);\n\n  return State;\n}();\n\nmodule.exports = State;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace single char group disjunction to char group\n *\n * a|b|c -> [abc]\n * [12]|3|4 -> [1234]\n * (a|b|c) -> ([abc])\n * (?:a|b|c) -> [abc]\n */\n\nmodule.exports = {\n  Disjunction: function Disjunction(path) {\n    var node = path.node,\n        parent = path.parent;\n\n\n    if (!handlers[parent.type]) {\n      return;\n    }\n\n    var charset = new Map();\n\n    if (!shouldProcess(node, charset) || !charset.size) {\n      return;\n    }\n\n    var characterClass = {\n      type: 'CharacterClass',\n      expressions: Array.from(charset.keys()).sort().map(function (key) {\n        return charset.get(key);\n      })\n    };\n\n    handlers[parent.type](path.getParent(), characterClass);\n  }\n};\n\nvar handlers = {\n  RegExp: function RegExp(path, characterClass) {\n    var node = path.node;\n\n\n    node.body = characterClass;\n  },\n  Group: function Group(path, characterClass) {\n    var node = path.node;\n\n\n    if (node.capturing) {\n      node.expression = characterClass;\n    } else {\n      path.replace(characterClass);\n    }\n  }\n};\n\nfunction shouldProcess(expression, charset) {\n  if (!expression) {\n    // Abort on empty disjunction part\n    return false;\n  }\n\n  var type = expression.type;\n\n\n  if (type === 'Disjunction') {\n    var left = expression.left,\n        right = expression.right;\n\n\n    return shouldProcess(left, charset) && shouldProcess(right, charset);\n  } else if (type === 'Char') {\n    if (expression.kind === 'meta' && expression.symbol === '.') {\n      return false;\n    }\n\n    var value = expression.value;\n\n\n    charset.set(value, expression);\n\n    return true;\n  } else if (type === 'CharacterClass' && !expression.negative) {\n    return expression.expressions.every(function (expression) {\n      return shouldProcess(expression, charset);\n    });\n  }\n\n  return false;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n// DFA minization.\n\n/**\n * Map from state to current set it goes.\n */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar currentTransitionMap = null;\n\n/**\n * Takes a DFA, and returns a minimized version of it\n * compressing some states to groups (using standard, 0-, 1-,\n * 2-, ... N-equivalence algorithm).\n */\nfunction minimize(dfa) {\n  var table = dfa.getTransitionTable();\n  var allStates = Object.keys(table);\n  var alphabet = dfa.getAlphabet();\n  var accepting = dfa.getAcceptingStateNumbers();\n\n  currentTransitionMap = {};\n\n  var nonAccepting = new Set();\n\n  allStates.forEach(function (state) {\n    state = Number(state);\n    var isAccepting = accepting.has(state);\n\n    if (isAccepting) {\n      currentTransitionMap[state] = accepting;\n    } else {\n      nonAccepting.add(state);\n      currentTransitionMap[state] = nonAccepting;\n    }\n  });\n\n  // ---------------------------------------------------------------------------\n  // Step 1: build equivalent sets.\n\n  // All [1..N] equivalent sets.\n  var all = [\n  // 0-equivalent sets.\n  [nonAccepting, accepting].filter(function (set) {\n    return set.size > 0;\n  })];\n\n  var current = void 0;\n  var previous = void 0;\n\n  // Top of the stack is the current list of sets to analyze.\n  current = all[all.length - 1];\n\n  // Previous set (to check whether we need to stop).\n  previous = all[all.length - 2];\n\n  // Until we'll not have the same N and N-1 equivalent rows.\n\n  var _loop = function _loop() {\n    var newTransitionMap = {};\n\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = current[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var _set = _step3.value;\n\n        // Handled states for this set.\n        var handledStates = {};\n\n        var _set2 = _toArray(_set),\n            first = _set2[0],\n            rest = _set2.slice(1);\n\n        handledStates[first] = new Set([first]);\n\n        // Have to compare each from the rest states with\n        // the already handled states, and see if they are equivalent.\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          restSets: for (var _iterator4 = rest[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var state = _step4.value;\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = Object.keys(handledStates)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var handledState = _step5.value;\n\n                // This and some previously handled state are equivalent --\n                // just append this state to the same set.\n                if (areEquivalent(state, handledState, table, alphabet)) {\n                  handledStates[handledState].add(state);\n                  handledStates[state] = handledStates[handledState];\n                  continue restSets;\n                }\n              }\n              // Else, this state is not equivalent to any of the\n              // handled states -- allocate a new set for it.\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            handledStates[state] = new Set([state]);\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        // Add these handled states to all states map.\n\n\n        Object.assign(newTransitionMap, handledStates);\n      }\n\n      // Update current transition map for the handled row.\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    currentTransitionMap = newTransitionMap;\n\n    var newSets = new Set(Object.keys(newTransitionMap).map(function (state) {\n      return newTransitionMap[state];\n    }));\n\n    all.push([].concat(_toConsumableArray(newSets)));\n\n    // Top of the stack is the current.\n    current = all[all.length - 1];\n\n    // Previous set.\n    previous = all[all.length - 2];\n  };\n\n  while (!sameRow(current, previous)) {\n    _loop();\n  }\n\n  // ---------------------------------------------------------------------------\n  // Step 2: build minimized table from the equivalent sets.\n\n  // Remap state numbers from sets to index-based.\n  var remaped = new Map();\n  var idx = 1;\n  current.forEach(function (set) {\n    return remaped.set(set, idx++);\n  });\n\n  // Build the minimized table from the calculated equivalent sets.\n  var minimizedTable = {};\n\n  var minimizedAcceptingStates = new Set();\n\n  var updateAcceptingStates = function updateAcceptingStates(set, idx) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = set[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var state = _step.value;\n\n        if (accepting.has(state)) {\n          minimizedAcceptingStates.add(idx);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = remaped.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _ref = _step2.value;\n\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      var set = _ref2[0];\n      var _idx = _ref2[1];\n\n      minimizedTable[_idx] = {};\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = alphabet[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var symbol = _step6.value;\n\n          updateAcceptingStates(set, _idx);\n\n          // Determine original transition for this symbol from the set.\n          var originalTransition = void 0;\n          var _iteratorNormalCompletion7 = true;\n          var _didIteratorError7 = false;\n          var _iteratorError7 = undefined;\n\n          try {\n            for (var _iterator7 = set[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n              var originalState = _step7.value;\n\n              originalTransition = table[originalState][symbol];\n              if (originalTransition) {\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                _iterator7.return();\n              }\n            } finally {\n              if (_didIteratorError7) {\n                throw _iteratorError7;\n              }\n            }\n          }\n\n          if (originalTransition) {\n            minimizedTable[_idx][symbol] = remaped.get(currentTransitionMap[originalTransition]);\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n    }\n\n    // Update the table, and accepting states on the original DFA.\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  dfa.setTransitionTable(minimizedTable);\n  dfa.setAcceptingStateNumbers(minimizedAcceptingStates);\n\n  return dfa;\n}\n\nfunction sameRow(r1, r2) {\n  if (!r2) {\n    return false;\n  }\n\n  if (r1.length !== r2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < r1.length; i++) {\n    var s1 = r1[i];\n    var s2 = r2[i];\n\n    if (s1.size !== s2.size) {\n      return false;\n    }\n\n    if ([].concat(_toConsumableArray(s1)).sort().join(',') !== [].concat(_toConsumableArray(s2)).sort().join(',')) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether two states are N-equivalent, i.e. whether they go\n * to the same set on a symbol.\n */\nfunction areEquivalent(s1, s2, table, alphabet) {\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = alphabet[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var symbol = _step8.value;\n\n      if (!goToSameSet(s1, s2, table, symbol)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  return true;\n}\n\n/**\n * Checks whether states go to the same set.\n */\nfunction goToSameSet(s1, s2, table, symbol) {\n  if (!currentTransitionMap[s1] || !currentTransitionMap[s2]) {\n    return false;\n  }\n\n  var originalTransitionS1 = table[s1][symbol];\n  var originalTransitionS2 = table[s2][symbol];\n\n  // If no actual transition on this symbol, treat it as positive.\n  if (!originalTransitionS1 && !originalTransitionS2) {\n    return true;\n  }\n\n  // Otherwise, check if they are in the same sets.\n  return currentTransitionMap[s1].has(originalTransitionS1) && currentTransitionMap[s2].has(originalTransitionS2);\n}\n\nmodule.exports = {\n  minimize: minimize\n};","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\nvar LOWER_A_CP = 'a'.codePointAt(0);\nvar LOWER_Z_CP = 'z'.codePointAt(0);\nvar DIGIT_0_CP = '0'.codePointAt(0);\nvar DIGIT_9_CP = '9'.codePointAt(0);\n\n/**\n * A regexp-tree plugin to transform coded chars into simple chars.\n *\n * \\u0061 -> a\n */\nmodule.exports = {\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint) || node.kind === 'simple') {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      if (!isSimpleRange(parent)) {\n        return;\n      }\n    }\n\n    if (!isPrintableASCIIChar(node.codePoint)) {\n      return;\n    }\n\n    var symbol = String.fromCodePoint(node.codePoint);\n    var newChar = {\n      type: 'Char',\n      kind: 'simple',\n      value: symbol,\n      symbol: symbol,\n      codePoint: node.codePoint\n    };\n    if (needsEscape(symbol, parent.type)) {\n      newChar.escaped = true;\n    }\n    path.replace(newChar);\n  }\n};\n\n/**\n * Checks if a range is included either in 0-9, a-z or A-Z\n * @param classRange\n * @returns {boolean}\n */\nfunction isSimpleRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n\n  return from.codePoint >= DIGIT_0_CP && from.codePoint <= DIGIT_9_CP && to.codePoint >= DIGIT_0_CP && to.codePoint <= DIGIT_9_CP || from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP || from.codePoint >= LOWER_A_CP && from.codePoint <= LOWER_Z_CP && to.codePoint >= LOWER_A_CP && to.codePoint <= LOWER_Z_CP;\n}\n\n/**\n * Checks if a code point in the range of printable ASCII chars\n * (DEL char excluded)\n * @param codePoint\n * @returns {boolean}\n */\nfunction isPrintableASCIIChar(codePoint) {\n  return codePoint >= 0x20 && codePoint <= 0x7e;\n}\n\nfunction needsEscape(symbol, parentType) {\n  if (parentType === 'ClassRange' || parentType === 'CharacterClass') {\n    return (/[\\]\\\\^-]/.test(symbol)\n    );\n  }\n\n  return (/[*[()+?^$./\\\\|{}]/.test(symbol)\n  );\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to replace different range-based quantifiers\n * with their symbol equivalents.\n *\n * a{0,} -> a*\n * a{1,} -> a+\n * a{1} -> a\n *\n * NOTE: the following is automatically handled in the generator:\n *\n * a{3,3} -> a{3}\n */\n\nmodule.exports = {\n  Quantifier: function Quantifier(path) {\n    var node = path.node;\n\n\n    if (node.kind !== 'Range') {\n      return;\n    }\n\n    // a{0,} -> a*\n    rewriteOpenZero(path);\n\n    // a{1,} -> a+\n    rewriteOpenOne(path);\n\n    // a{1} -> a\n    rewriteExactOne(path);\n  }\n};\n\nfunction rewriteOpenZero(path) {\n  var node = path.node;\n\n\n  if (node.from !== 0 || node.to) {\n    return;\n  }\n\n  node.kind = '*';\n  delete node.from;\n}\n\nfunction rewriteOpenOne(path) {\n  var node = path.node;\n\n\n  if (node.from !== 1 || node.to) {\n    return;\n  }\n\n  node.kind = '+';\n  delete node.from;\n}\n\nfunction rewriteExactOne(path) {\n  var node = path.node;\n\n\n  if (node.from !== 1 || node.to !== 1) {\n    return;\n  }\n\n  path.parentPath.replace(path.parentPath.node.expression);\n}","module.exports={A:\"ie\",B:\"edge\",C:\"firefox\",D:\"chrome\",E:\"safari\",F:\"opera\",G:\"ios_saf\",H:\"op_mini\",I:\"android\",J:\"bb\",K:\"op_mob\",L:\"and_chr\",M:\"and_ff\",N:\"ie_mob\",O:\"and_uc\",P:\"samsung\",Q:\"and_qq\",R:\"baidu\",S:\"kaios\"};\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('../special-symbols'),\n    EPSILON = _require.EPSILON,\n    EPSILON_CLOSURE = _require.EPSILON_CLOSURE;\n\n/**\n * NFA fragment.\n *\n * NFA sub-fragments can be combined to a larger NFAs building\n * the resulting machine. Combining the fragments is done by patching\n * edges of the in- and out-states.\n *\n * 2-states implementation, `in`, and `out`. Eventually all transitions\n * go to the same `out`, which can further be connected via ε-transition\n * with other fragment.\n */\n\n\nvar NFA = function () {\n  function NFA(inState, outState) {\n    _classCallCheck(this, NFA);\n\n    this.in = inState;\n    this.out = outState;\n  }\n\n  /**\n   * Tries to recognize a string based on this NFA fragment.\n   */\n\n\n  _createClass(NFA, [{\n    key: 'matches',\n    value: function matches(string) {\n      return this.in.matches(string);\n    }\n\n    /**\n     * Returns an alphabet for this NFA.\n     */\n\n  }, {\n    key: 'getAlphabet',\n    value: function getAlphabet() {\n      if (!this._alphabet) {\n        this._alphabet = new Set();\n        var table = this.getTransitionTable();\n        for (var state in table) {\n          var transitions = table[state];\n          for (var symbol in transitions) {\n            if (symbol !== EPSILON_CLOSURE) {\n              this._alphabet.add(symbol);\n            }\n          }\n        }\n      }\n      return this._alphabet;\n    }\n\n    /**\n     * Returns set of accepting states.\n     */\n\n  }, {\n    key: 'getAcceptingStates',\n    value: function getAcceptingStates() {\n      if (!this._acceptingStates) {\n        // States are determined during table construction.\n        this.getTransitionTable();\n      }\n      return this._acceptingStates;\n    }\n\n    /**\n     * Returns accepting state numbers.\n     */\n\n  }, {\n    key: 'getAcceptingStateNumbers',\n    value: function getAcceptingStateNumbers() {\n      if (!this._acceptingStateNumbers) {\n        this._acceptingStateNumbers = new Set();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.getAcceptingStates()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var acceptingState = _step.value;\n\n            this._acceptingStateNumbers.add(acceptingState.number);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      return this._acceptingStateNumbers;\n    }\n\n    /**\n     * Builds and returns transition table.\n     */\n\n  }, {\n    key: 'getTransitionTable',\n    value: function getTransitionTable() {\n      var _this = this;\n\n      if (!this._transitionTable) {\n        this._transitionTable = {};\n        this._acceptingStates = new Set();\n\n        var visited = new Set();\n        var symbols = new Set();\n\n        var visitState = function visitState(state) {\n          if (visited.has(state)) {\n            return;\n          }\n\n          visited.add(state);\n          state.number = visited.size;\n          _this._transitionTable[state.number] = {};\n\n          if (state.accepting) {\n            _this._acceptingStates.add(state);\n          }\n\n          var transitions = state.getTransitions();\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = transitions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _ref = _step2.value;\n\n              var _ref2 = _slicedToArray(_ref, 2);\n\n              var symbol = _ref2[0];\n              var symbolTransitions = _ref2[1];\n\n              var combinedState = [];\n              symbols.add(symbol);\n              var _iteratorNormalCompletion3 = true;\n              var _didIteratorError3 = false;\n              var _iteratorError3 = undefined;\n\n              try {\n                for (var _iterator3 = symbolTransitions[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                  var nextState = _step3.value;\n\n                  visitState(nextState);\n                  combinedState.push(nextState.number);\n                }\n              } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                  }\n                } finally {\n                  if (_didIteratorError3) {\n                    throw _iteratorError3;\n                  }\n                }\n              }\n\n              _this._transitionTable[state.number][symbol] = combinedState;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        };\n\n        // Traverse the graph starting from the `in`.\n        visitState(this.in);\n\n        // Append epsilon-closure column.\n        visited.forEach(function (state) {\n          delete _this._transitionTable[state.number][EPSILON];\n          _this._transitionTable[state.number][EPSILON_CLOSURE] = [].concat(_toConsumableArray(state.getEpsilonClosure())).map(function (s) {\n            return s.number;\n          });\n        });\n      }\n\n      return this._transitionTable;\n    }\n  }]);\n\n  return NFA;\n}();\n\nmodule.exports = NFA;","var BrowserslistError = require('./error')\n\nfunction noop() {}\n\nmodule.exports = {\n  loadQueries: function loadQueries() {\n    throw new BrowserslistError(\n      'Sharable configs are not supported in client-side build of Browserslist'\n    )\n  },\n\n  getStat: function getStat(opts) {\n    return opts.stats\n  },\n\n  loadConfig: function loadConfig(opts) {\n    if (opts.config) {\n      throw new BrowserslistError(\n        'Browserslist config are not supported in client-side build'\n      )\n    }\n  },\n\n  loadCountry: function loadCountry() {\n    throw new BrowserslistError(\n      'Country statistics are not supported ' +\n        'in client-side build of Browserslist'\n    )\n  },\n\n  loadFeature: function loadFeature() {\n    throw new BrowserslistError(\n      'Supports queries are not available in client-side build of Browserslist'\n    )\n  },\n\n  currentNode: function currentNode(resolve, context) {\n    return resolve(['maintained node versions'], context)[0]\n  },\n\n  parseConfig: noop,\n\n  readConfig: noop,\n\n  findConfig: noop,\n\n  findConfigFile: noop,\n\n  clearCaches: noop,\n\n  oldDataWarning: noop,\n\n  env: {}\n}\n","var jsReleases = require('node-releases/data/processed/envs.json')\nvar agents = require('caniuse-lite/dist/unpacker/agents').agents\nvar e2c = require('electron-to-chromium/versions')\nvar jsEOL = require('node-releases/data/release-schedule/release-schedule.json')\nvar path = require('path')\n\nvar BrowserslistError = require('./error')\nvar env = require('./node')\nvar parseWithoutCache = require('./parse') // Will load browser.js in webpack\n\nvar YEAR = 365.259641 * 24 * 60 * 60 * 1000\nvar ANDROID_EVERGREEN_FIRST = '37'\nvar OP_MOB_BLINK_FIRST = 14\n\n// Helpers\n\nfunction isVersionsMatch(versionA, versionB) {\n  return (versionA + '.').indexOf(versionB + '.') === 0\n}\n\nfunction isEolReleased(name) {\n  var version = name.slice(1)\n  return browserslist.nodeVersions.some(function (i) {\n    return isVersionsMatch(i, version)\n  })\n}\n\nfunction normalize(versions) {\n  return versions.filter(function (version) {\n    return typeof version === 'string'\n  })\n}\n\nfunction normalizeElectron(version) {\n  var versionToUse = version\n  if (version.split('.').length === 3) {\n    versionToUse = version.split('.').slice(0, -1).join('.')\n  }\n  return versionToUse\n}\n\nfunction nameMapper(name) {\n  return function mapName(version) {\n    return name + ' ' + version\n  }\n}\n\nfunction getMajor(version) {\n  return parseInt(version.split('.')[0])\n}\n\nfunction getMajorVersions(released, number) {\n  if (released.length === 0) return []\n  var majorVersions = uniq(released.map(getMajor))\n  var minimum = majorVersions[majorVersions.length - number]\n  if (!minimum) {\n    return released\n  }\n  var selected = []\n  for (var i = released.length - 1; i >= 0; i--) {\n    if (minimum > getMajor(released[i])) break\n    selected.unshift(released[i])\n  }\n  return selected\n}\n\nfunction uniq(array) {\n  var filtered = []\n  for (var i = 0; i < array.length; i++) {\n    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])\n  }\n  return filtered\n}\n\nfunction fillUsage(result, name, data) {\n  for (var i in data) {\n    result[name + ' ' + i] = data[i]\n  }\n}\n\nfunction generateFilter(sign, version) {\n  version = parseFloat(version)\n  if (sign === '>') {\n    return function (v) {\n      return parseLatestFloat(v) > version\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      return parseLatestFloat(v) >= version\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      return parseFloat(v) < version\n    }\n  } else {\n    return function (v) {\n      return parseFloat(v) <= version\n    }\n  }\n\n  function parseLatestFloat(v) {\n    return parseFloat(v.split('-')[1] || v)\n  }\n}\n\nfunction generateSemverFilter(sign, version) {\n  version = version.split('.').map(parseSimpleInt)\n  version[1] = version[1] || 0\n  version[2] = version[2] || 0\n  if (sign === '>') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) > 0\n    }\n  } else if (sign === '>=') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(v, version) >= 0\n    }\n  } else if (sign === '<') {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) > 0\n    }\n  } else {\n    return function (v) {\n      v = v.split('.').map(parseSimpleInt)\n      return compareSemver(version, v) >= 0\n    }\n  }\n}\n\nfunction parseSimpleInt(x) {\n  return parseInt(x)\n}\n\nfunction compare(a, b) {\n  if (a < b) return -1\n  if (a > b) return +1\n  return 0\n}\n\nfunction compareSemver(a, b) {\n  return (\n    compare(parseInt(a[0]), parseInt(b[0])) ||\n    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||\n    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))\n  )\n}\n\n// this follows the npm-like semver behavior\nfunction semverFilterLoose(operator, range) {\n  range = range.split('.').map(parseSimpleInt)\n  if (typeof range[1] === 'undefined') {\n    range[1] = 'x'\n  }\n  // ignore any patch version because we only return minor versions\n  // range[2] = 'x'\n  switch (operator) {\n    case '<=':\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) <= 0\n      }\n    case '>=':\n    default:\n      return function (version) {\n        version = version.split('.').map(parseSimpleInt)\n        return compareSemverLoose(version, range) >= 0\n      }\n  }\n}\n\n// this follows the npm-like semver behavior\nfunction compareSemverLoose(version, range) {\n  if (version[0] !== range[0]) {\n    return version[0] < range[0] ? -1 : +1\n  }\n  if (range[1] === 'x') {\n    return 0\n  }\n  if (version[1] !== range[1]) {\n    return version[1] < range[1] ? -1 : +1\n  }\n  return 0\n}\n\nfunction resolveVersion(data, version) {\n  if (data.versions.indexOf(version) !== -1) {\n    return version\n  } else if (browserslist.versionAliases[data.name][version]) {\n    return browserslist.versionAliases[data.name][version]\n  } else {\n    return false\n  }\n}\n\nfunction normalizeVersion(data, version) {\n  var resolved = resolveVersion(data, version)\n  if (resolved) {\n    return resolved\n  } else if (data.versions.length === 1) {\n    return data.versions[0]\n  } else {\n    return false\n  }\n}\n\nfunction filterByYear(since, context) {\n  since = since / 1000\n  return Object.keys(agents).reduce(function (selected, name) {\n    var data = byName(name, context)\n    if (!data) return selected\n    var versions = Object.keys(data.releaseDate).filter(function (v) {\n      var date = data.releaseDate[v]\n      return date !== null && date >= since\n    })\n    return selected.concat(versions.map(nameMapper(data.name)))\n  }, [])\n}\n\nfunction cloneData(data) {\n  return {\n    name: data.name,\n    versions: data.versions,\n    released: data.released,\n    releaseDate: data.releaseDate\n  }\n}\n\nfunction byName(name, context) {\n  name = name.toLowerCase()\n  name = browserslist.aliases[name] || name\n  if (context.mobileToDesktop && browserslist.desktopNames[name]) {\n    var desktop = browserslist.data[browserslist.desktopNames[name]]\n    if (name === 'android') {\n      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)\n    } else {\n      var cloned = cloneData(desktop)\n      cloned.name = name\n      return cloned\n    }\n  }\n  return browserslist.data[name]\n}\n\nfunction normalizeAndroidVersions(androidVersions, chromeVersions) {\n  var iFirstEvergreen = chromeVersions.indexOf(ANDROID_EVERGREEN_FIRST)\n  return androidVersions\n    .filter(function (version) {\n      return /^(?:[2-4]\\.|[34]$)/.test(version)\n    })\n    .concat(chromeVersions.slice(iFirstEvergreen))\n}\n\nfunction copyObject(obj) {\n  var copy = {}\n  for (var key in obj) {\n    copy[key] = obj[key]\n  }\n  return copy\n}\n\nfunction normalizeAndroidData(android, chrome) {\n  android.released = normalizeAndroidVersions(android.released, chrome.released)\n  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)\n  android.releaseDate = copyObject(android.releaseDate)\n  android.released.forEach(function (v) {\n    if (android.releaseDate[v] === undefined) {\n      android.releaseDate[v] = chrome.releaseDate[v]\n    }\n  })\n  return android\n}\n\nfunction checkName(name, context) {\n  var data = byName(name, context)\n  if (!data) throw new BrowserslistError('Unknown browser ' + name)\n  return data\n}\n\nfunction unknownQuery(query) {\n  return new BrowserslistError(\n    'Unknown browser query `' +\n      query +\n      '`. ' +\n      'Maybe you are using old Browserslist or made typo in query.'\n  )\n}\n\n// Adjusts last X versions queries for some mobile browsers,\n// where caniuse data jumps from a legacy version to the latest\nfunction filterJumps(list, name, nVersions, context) {\n  var jump = 1\n  switch (name) {\n    case 'android':\n      if (context.mobileToDesktop) return list\n      var released = browserslist.data.chrome.released\n      jump = released.length - released.indexOf(ANDROID_EVERGREEN_FIRST)\n      break\n    case 'op_mob':\n      var latest = browserslist.data.op_mob.released.slice(-1)[0]\n      jump = getMajor(latest) - OP_MOB_BLINK_FIRST + 1\n      break\n    default:\n      return list\n  }\n  if (nVersions <= jump) {\n    return list.slice(-1)\n  }\n  return list.slice(jump - 1 - nVersions)\n}\n\nfunction isSupported(flags, withPartial) {\n  return (\n    typeof flags === 'string' &&\n    (flags.indexOf('y') >= 0 || (withPartial && flags.indexOf('a') >= 0))\n  )\n}\n\nfunction resolve(queries, context) {\n  return parseQueries(queries).reduce(function (result, node, index) {\n    if (node.not && index === 0) {\n      throw new BrowserslistError(\n        'Write any browsers query (for instance, `defaults`) ' +\n          'before `' +\n          node.query +\n          '`'\n      )\n    }\n    var type = QUERIES[node.type]\n    var array = type.select.call(browserslist, context, node).map(function (j) {\n      var parts = j.split(' ')\n      if (parts[1] === '0') {\n        return parts[0] + ' ' + byName(parts[0], context).versions[0]\n      } else {\n        return j\n      }\n    })\n\n    if (node.compose === 'and') {\n      if (node.not) {\n        return result.filter(function (j) {\n          return array.indexOf(j) === -1\n        })\n      } else {\n        return result.filter(function (j) {\n          return array.indexOf(j) !== -1\n        })\n      }\n    } else {\n      if (node.not) {\n        var filter = {}\n        array.forEach(function (j) {\n          filter[j] = true\n        })\n        return result.filter(function (j) {\n          return !filter[j]\n        })\n      }\n      return result.concat(array)\n    }\n  }, [])\n}\n\nfunction prepareOpts(opts) {\n  if (typeof opts === 'undefined') opts = {}\n\n  if (typeof opts.path === 'undefined') {\n    opts.path = path.resolve ? path.resolve('.') : '.'\n  }\n\n  return opts\n}\n\nfunction prepareQueries(queries, opts) {\n  if (typeof queries === 'undefined' || queries === null) {\n    var config = browserslist.loadConfig(opts)\n    if (config) {\n      queries = config\n    } else {\n      queries = browserslist.defaults\n    }\n  }\n\n  return queries\n}\n\nfunction checkQueries(queries) {\n  if (!(typeof queries === 'string' || Array.isArray(queries))) {\n    throw new BrowserslistError(\n      'Browser queries must be an array or string. Got ' + typeof queries + '.'\n    )\n  }\n}\n\nvar cache = {}\nvar parseCache = {}\n\nfunction browserslist(queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n\n  var needsPath = parseQueries(queries).some(function (node) {\n    return QUERIES[node.type].needsPath\n  })\n  var context = {\n    ignoreUnknownVersions: opts.ignoreUnknownVersions,\n    dangerousExtend: opts.dangerousExtend,\n    mobileToDesktop: opts.mobileToDesktop,\n    env: opts.env\n  }\n  // Removing to avoid using context.path without marking query as needsPath\n  if (needsPath) {\n    context.path = opts.path\n  }\n\n  env.oldDataWarning(browserslist.data)\n  var stats = env.getStat(opts, browserslist.data)\n  if (stats) {\n    context.customUsage = {}\n    for (var browser in stats) {\n      fillUsage(context.customUsage, browser, stats[browser])\n    }\n  }\n\n  var cacheKey = JSON.stringify([queries, context])\n  if (cache[cacheKey]) return cache[cacheKey]\n\n  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {\n    name1 = name1.split(' ')\n    name2 = name2.split(' ')\n    if (name1[0] === name2[0]) {\n      // assumptions on caniuse data\n      // 1) version ranges never overlaps\n      // 2) if version is not a range, it never contains `-`\n      var version1 = name1[1].split('-')[0]\n      var version2 = name2[1].split('-')[0]\n      return compareSemver(version2.split('.'), version1.split('.'))\n    } else {\n      return compare(name1[0], name2[0])\n    }\n  })\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    cache[cacheKey] = result\n  }\n  return result\n}\n\nfunction parseQueries(queries) {\n  var cacheKey = JSON.stringify(queries)\n  if (cacheKey in parseCache) return parseCache[cacheKey]\n  var result = parseWithoutCache(QUERIES, queries)\n  if (!env.env.BROWSERSLIST_DISABLE_CACHE) {\n    parseCache[cacheKey] = result\n  }\n  return result\n}\n\nbrowserslist.parse = function (queries, opts) {\n  opts = prepareOpts(opts)\n  queries = prepareQueries(queries, opts)\n  checkQueries(queries)\n  return parseQueries(queries)\n}\n\n// Will be filled by Can I Use data below\nbrowserslist.cache = {}\nbrowserslist.data = {}\nbrowserslist.usage = {\n  global: {},\n  custom: null\n}\n\n// Default browsers query\nbrowserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']\n\n// Browser names aliases\nbrowserslist.aliases = {\n  fx: 'firefox',\n  ff: 'firefox',\n  ios: 'ios_saf',\n  explorer: 'ie',\n  blackberry: 'bb',\n  explorermobile: 'ie_mob',\n  operamini: 'op_mini',\n  operamobile: 'op_mob',\n  chromeandroid: 'and_chr',\n  firefoxandroid: 'and_ff',\n  ucandroid: 'and_uc',\n  qqandroid: 'and_qq'\n}\n\n// Can I Use only provides a few versions for some browsers (e.g. and_chr).\n// Fallback to a similar browser for unknown versions\n// Note op_mob is not included as its chromium versions are not in sync with Opera desktop\nbrowserslist.desktopNames = {\n  and_chr: 'chrome',\n  and_ff: 'firefox',\n  ie_mob: 'ie',\n  android: 'chrome' // has extra processing logic\n}\n\n// Aliases to work with joined versions like `ios_saf 7.0-7.1`\nbrowserslist.versionAliases = {}\n\nbrowserslist.clearCaches = env.clearCaches\nbrowserslist.parseConfig = env.parseConfig\nbrowserslist.readConfig = env.readConfig\nbrowserslist.findConfigFile = env.findConfigFile\nbrowserslist.findConfig = env.findConfig\nbrowserslist.loadConfig = env.loadConfig\n\nbrowserslist.coverage = function (browsers, stats) {\n  var data\n  if (typeof stats === 'undefined') {\n    data = browserslist.usage.global\n  } else if (stats === 'my stats') {\n    var opts = {}\n    opts.path = path.resolve ? path.resolve('.') : '.'\n    var customStats = env.getStat(opts)\n    if (!customStats) {\n      throw new BrowserslistError('Custom usage statistics was not provided')\n    }\n    data = {}\n    for (var browser in customStats) {\n      fillUsage(data, browser, customStats[browser])\n    }\n  } else if (typeof stats === 'string') {\n    if (stats.length > 2) {\n      stats = stats.toLowerCase()\n    } else {\n      stats = stats.toUpperCase()\n    }\n    env.loadCountry(browserslist.usage, stats, browserslist.data)\n    data = browserslist.usage[stats]\n  } else {\n    if ('dataByBrowser' in stats) {\n      stats = stats.dataByBrowser\n    }\n    data = {}\n    for (var name in stats) {\n      for (var version in stats[name]) {\n        data[name + ' ' + version] = stats[name][version]\n      }\n    }\n  }\n\n  return browsers.reduce(function (all, i) {\n    var usage = data[i]\n    if (usage === undefined) {\n      usage = data[i.replace(/ \\S+$/, ' 0')]\n    }\n    return all + (usage || 0)\n  }, 0)\n}\n\nfunction nodeQuery(context, node) {\n  var matched = browserslist.nodeVersions.filter(function (i) {\n    return isVersionsMatch(i, node.version)\n  })\n  if (matched.length === 0) {\n    if (context.ignoreUnknownVersions) {\n      return []\n    } else {\n      throw new BrowserslistError(\n        'Unknown version ' + node.version + ' of Node.js'\n      )\n    }\n  }\n  return ['node ' + matched[matched.length - 1]]\n}\n\nfunction sinceQuery(context, node) {\n  var year = parseInt(node.year)\n  var month = parseInt(node.month || '01') - 1\n  var day = parseInt(node.day || '01')\n  return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context)\n}\n\nfunction coverQuery(context, node) {\n  var coverage = parseFloat(node.coverage)\n  var usage = browserslist.usage.global\n  if (node.place) {\n    if (node.place.match(/^my\\s+stats$/i)) {\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      usage = context.customUsage\n    } else {\n      var place\n      if (node.place.length === 2) {\n        place = node.place.toUpperCase()\n      } else {\n        place = node.place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      usage = browserslist.usage[place]\n    }\n  }\n  var versions = Object.keys(usage).sort(function (a, b) {\n    return usage[b] - usage[a]\n  })\n  var coveraged = 0\n  var result = []\n  var version\n  for (var i = 0; i < versions.length; i++) {\n    version = versions[i]\n    if (usage[version] === 0) break\n    coveraged += usage[version]\n    result.push(version)\n    if (coveraged >= coverage) break\n  }\n  return result\n}\n\nvar QUERIES = {\n  last_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = getMajorVersions(data.released, node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.released.slice(-node.versions)\n        list = list.map(nameMapper(data.name))\n        list = filterJumps(list, data.name, node.versions, context)\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  last_electron_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var validVersions = getMajorVersions(Object.keys(e2c), node.versions)\n      return validVersions.map(function (i) {\n        return 'chrome ' + e2c[i]\n      })\n    }\n  },\n  last_node_major_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      return getMajorVersions(browserslist.nodeVersions, node.versions).map(\n        function (version) {\n          return 'node ' + version\n        }\n      )\n    }\n  },\n  last_browser_major_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+major\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var validVersions = getMajorVersions(data.released, node.versions)\n      var list = validVersions.map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  last_electron_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+electron\\s+versions?$/i,\n    select: function (context, node) {\n      return Object.keys(e2c)\n        .slice(-node.versions)\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  last_node_versions: {\n    matches: ['versions'],\n    regexp: /^last\\s+(\\d+)\\s+node\\s+versions?$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .slice(-node.versions)\n        .map(function (version) {\n          return 'node ' + version\n        })\n    }\n  },\n  last_browser_versions: {\n    matches: ['versions', 'browser'],\n    regexp: /^last\\s+(\\d+)\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var list = data.released.slice(-node.versions).map(nameMapper(data.name))\n      list = filterJumps(list, data.name, node.versions, context)\n      return list\n    }\n  },\n  unreleased_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+versions$/i,\n    select: function (context) {\n      return Object.keys(agents).reduce(function (selected, name) {\n        var data = byName(name, context)\n        if (!data) return selected\n        var list = data.versions.filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        list = list.map(nameMapper(data.name))\n        return selected.concat(list)\n      }, [])\n    }\n  },\n  unreleased_electron_versions: {\n    matches: [],\n    regexp: /^unreleased\\s+electron\\s+versions?$/i,\n    select: function () {\n      return []\n    }\n  },\n  unreleased_browser_versions: {\n    matches: ['browser'],\n    regexp: /^unreleased\\s+(\\w+)\\s+versions?$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      return data.versions\n        .filter(function (v) {\n          return data.released.indexOf(v) === -1\n        })\n        .map(nameMapper(data.name))\n    }\n  },\n  last_years: {\n    matches: ['years'],\n    regexp: /^last\\s+(\\d*.?\\d+)\\s+years?$/i,\n    select: function (context, node) {\n      return filterByYear(Date.now() - YEAR * node.years, context)\n    }\n  },\n  since_y: {\n    matches: ['year'],\n    regexp: /^since (\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m: {\n    matches: ['year', 'month'],\n    regexp: /^since (\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  since_y_m_d: {\n    matches: ['year', 'month', 'day'],\n    regexp: /^since (\\d+)-(\\d+)-(\\d+)$/i,\n    select: sinceQuery\n  },\n  popularity: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var usage = browserslist.usage.global\n      return Object.keys(usage).reduce(function (result, version) {\n        if (node.sign === '>') {\n          if (usage[version] > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (usage[version] < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (usage[version] <= popularity) {\n            result.push(version)\n          }\n        } else if (usage[version] >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_my_stats: {\n    matches: ['sign', 'popularity'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+my\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_config_stats: {\n    matches: ['sign', 'popularity', 'config'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(\\S+)\\s+stats$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var stats = env.loadStat(context, node.config, browserslist.data)\n      if (stats) {\n        context.customUsage = {}\n        for (var browser in stats) {\n          fillUsage(context.customUsage, browser, stats[browser])\n        }\n      }\n      if (!context.customUsage) {\n        throw new BrowserslistError('Custom usage statistics was not provided')\n      }\n      var usage = context.customUsage\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  popularity_in_place: {\n    matches: ['sign', 'popularity', 'place'],\n    regexp: /^(>=?|<=?)\\s*(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+((alt-)?\\w\\w)$/,\n    select: function (context, node) {\n      var popularity = parseFloat(node.popularity)\n      var place = node.place\n      if (place.length === 2) {\n        place = place.toUpperCase()\n      } else {\n        place = place.toLowerCase()\n      }\n      env.loadCountry(browserslist.usage, place, browserslist.data)\n      var usage = browserslist.usage[place]\n      return Object.keys(usage).reduce(function (result, version) {\n        var percentage = usage[version]\n        if (percentage == null) {\n          return result\n        }\n\n        if (node.sign === '>') {\n          if (percentage > popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<') {\n          if (percentage < popularity) {\n            result.push(version)\n          }\n        } else if (node.sign === '<=') {\n          if (percentage <= popularity) {\n            result.push(version)\n          }\n        } else if (percentage >= popularity) {\n          result.push(version)\n        }\n        return result\n      }, [])\n    }\n  },\n  cover: {\n    matches: ['coverage'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%$/i,\n    select: coverQuery\n  },\n  cover_in: {\n    matches: ['coverage', 'place'],\n    regexp: /^cover\\s+(\\d+|\\d+\\.\\d+|\\.\\d+)%\\s+in\\s+(my\\s+stats|(alt-)?\\w\\w)$/i,\n    select: coverQuery\n  },\n  supports: {\n    matches: ['supportType', 'feature'],\n    regexp: /^(?:(fully|partially)\\s+)?supports\\s+([\\w-]+)$/,\n    select: function (context, node) {\n      env.loadFeature(browserslist.cache, node.feature)\n      var withPartial = node.supportType !== 'fully'\n      var features = browserslist.cache[node.feature]\n      var result = []\n      for (var name in features) {\n        var data = byName(name, context)\n        // Only check desktop when latest released mobile has support\n        var iMax = data.released.length - 1\n        while (iMax >= 0) {\n          if (data.released[iMax] in features[name]) break\n          iMax--\n        }\n        var checkDesktop =\n          context.mobileToDesktop &&\n          name in browserslist.desktopNames &&\n          isSupported(features[name][data.released[iMax]], withPartial)\n        data.versions.forEach(function (version) {\n          var flags = features[name][version]\n          if (flags === undefined && checkDesktop) {\n            flags = features[browserslist.desktopNames[name]][version]\n          }\n          if (isSupported(flags, withPartial)) {\n            result.push(name + ' ' + version)\n          }\n        })\n      }\n      return result\n    }\n  },\n  electron_range: {\n    matches: ['from', 'to'],\n    regexp: /^electron\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var fromToUse = normalizeElectron(node.from)\n      var toToUse = normalizeElectron(node.to)\n      var from = parseFloat(node.from)\n      var to = parseFloat(node.to)\n      if (!e2c[fromToUse]) {\n        throw new BrowserslistError('Unknown version ' + from + ' of electron')\n      }\n      if (!e2c[toToUse]) {\n        throw new BrowserslistError('Unknown version ' + to + ' of electron')\n      }\n      return Object.keys(e2c)\n        .filter(function (i) {\n          var parsed = parseFloat(i)\n          return parsed >= from && parsed <= to\n        })\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_range: {\n    matches: ['from', 'to'],\n    regexp: /^node\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(semverFilterLoose('>=', node.from))\n        .filter(semverFilterLoose('<=', node.to))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_range: {\n    matches: ['browser', 'from', 'to'],\n    regexp: /^(\\w+)\\s+([\\d.]+)\\s*-\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var data = checkName(node.browser, context)\n      var from = parseFloat(normalizeVersion(data, node.from) || node.from)\n      var to = parseFloat(normalizeVersion(data, node.to) || node.to)\n      function filter(v) {\n        var parsed = parseFloat(v)\n        return parsed >= from && parsed <= to\n      }\n      return data.released.filter(filter).map(nameMapper(data.name))\n    }\n  },\n  electron_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^electron\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      return Object.keys(e2c)\n        .filter(generateFilter(node.sign, versionToUse))\n        .map(function (i) {\n          return 'chrome ' + e2c[i]\n        })\n    }\n  },\n  node_ray: {\n    matches: ['sign', 'version'],\n    regexp: /^node\\s*(>=?|<=?)\\s*([\\d.]+)$/i,\n    select: function (context, node) {\n      return browserslist.nodeVersions\n        .filter(generateSemverFilter(node.sign, node.version))\n        .map(function (v) {\n          return 'node ' + v\n        })\n    }\n  },\n  browser_ray: {\n    matches: ['browser', 'sign', 'version'],\n    regexp: /^(\\w+)\\s*(>=?|<=?)\\s*([\\d.]+)$/,\n    select: function (context, node) {\n      var version = node.version\n      var data = checkName(node.browser, context)\n      var alias = browserslist.versionAliases[data.name][version]\n      if (alias) version = alias\n      return data.released\n        .filter(generateFilter(node.sign, version))\n        .map(function (v) {\n          return data.name + ' ' + v\n        })\n    }\n  },\n  firefox_esr: {\n    matches: [],\n    regexp: /^(firefox|ff|fx)\\s+esr$/i,\n    select: function () {\n      return ['firefox 128']\n    }\n  },\n  opera_mini_all: {\n    matches: [],\n    regexp: /(operamini|op_mini)\\s+all/i,\n    select: function () {\n      return ['op_mini all']\n    }\n  },\n  electron_version: {\n    matches: ['version'],\n    regexp: /^electron\\s+([\\d.]+)$/i,\n    select: function (context, node) {\n      var versionToUse = normalizeElectron(node.version)\n      var chrome = e2c[versionToUse]\n      if (!chrome) {\n        throw new BrowserslistError(\n          'Unknown version ' + node.version + ' of electron'\n        )\n      }\n      return ['chrome ' + chrome]\n    }\n  },\n  node_major_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+)$/i,\n    select: nodeQuery\n  },\n  node_minor_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  node_patch_version: {\n    matches: ['version'],\n    regexp: /^node\\s+(\\d+\\.\\d+\\.\\d+)$/i,\n    select: nodeQuery\n  },\n  current_node: {\n    matches: [],\n    regexp: /^current\\s+node$/i,\n    select: function (context) {\n      return [env.currentNode(resolve, context)]\n    }\n  },\n  maintained_node: {\n    matches: [],\n    regexp: /^maintained\\s+node\\s+versions$/i,\n    select: function (context) {\n      var now = Date.now()\n      var queries = Object.keys(jsEOL)\n        .filter(function (key) {\n          return (\n            now < Date.parse(jsEOL[key].end) &&\n            now > Date.parse(jsEOL[key].start) &&\n            isEolReleased(key)\n          )\n        })\n        .map(function (key) {\n          return 'node ' + key.slice(1)\n        })\n      return resolve(queries, context)\n    }\n  },\n  phantomjs_1_9: {\n    matches: [],\n    regexp: /^phantomjs\\s+1.9$/i,\n    select: function () {\n      return ['safari 5']\n    }\n  },\n  phantomjs_2_1: {\n    matches: [],\n    regexp: /^phantomjs\\s+2.1$/i,\n    select: function () {\n      return ['safari 6']\n    }\n  },\n  browser_version: {\n    matches: ['browser', 'version'],\n    regexp: /^(\\w+)\\s+(tp|[\\d.]+)$/i,\n    select: function (context, node) {\n      var version = node.version\n      if (/^tp$/i.test(version)) version = 'TP'\n      var data = checkName(node.browser, context)\n      var alias = normalizeVersion(data, version)\n      if (alias) {\n        version = alias\n      } else {\n        if (version.indexOf('.') === -1) {\n          alias = version + '.0'\n        } else {\n          alias = version.replace(/\\.0$/, '')\n        }\n        alias = normalizeVersion(data, alias)\n        if (alias) {\n          version = alias\n        } else if (context.ignoreUnknownVersions) {\n          return []\n        } else {\n          throw new BrowserslistError(\n            'Unknown version ' + version + ' of ' + node.browser\n          )\n        }\n      }\n      return [data.name + ' ' + version]\n    }\n  },\n  browserslist_config: {\n    matches: [],\n    regexp: /^browserslist config$/i,\n    needsPath: true,\n    select: function (context) {\n      return browserslist(undefined, context)\n    }\n  },\n  extends: {\n    matches: ['config'],\n    regexp: /^extends (.+)$/i,\n    needsPath: true,\n    select: function (context, node) {\n      return resolve(env.loadQueries(context, node.config), context)\n    }\n  },\n  defaults: {\n    matches: [],\n    regexp: /^defaults$/i,\n    select: function (context) {\n      return resolve(browserslist.defaults, context)\n    }\n  },\n  dead: {\n    matches: [],\n    regexp: /^dead$/i,\n    select: function (context) {\n      var dead = [\n        'Baidu >= 0',\n        'ie <= 11',\n        'ie_mob <= 11',\n        'bb <= 10',\n        'op_mob <= 12.1',\n        'samsung 4'\n      ]\n      return resolve(dead, context)\n    }\n  },\n  unknown: {\n    matches: [],\n    regexp: /^(\\w+)$/i,\n    select: function (context, node) {\n      if (byName(node.query, context)) {\n        throw new BrowserslistError(\n          'Specify versions in Browserslist query for browser ' + node.query\n        )\n      } else {\n        throw unknownQuery(node.query)\n      }\n    }\n  }\n}\n\n// Get and convert Can I Use data\n\n;(function () {\n  for (var name in agents) {\n    var browser = agents[name]\n    browserslist.data[name] = {\n      name: name,\n      versions: normalize(agents[name].versions),\n      released: normalize(agents[name].versions.slice(0, -3)),\n      releaseDate: agents[name].release_date\n    }\n    fillUsage(browserslist.usage.global, name, browser.usage_global)\n\n    browserslist.versionAliases[name] = {}\n    for (var i = 0; i < browser.versions.length; i++) {\n      var full = browser.versions[i]\n      if (!full) continue\n\n      if (full.indexOf('-') !== -1) {\n        var interval = full.split('-')\n        for (var j = 0; j < interval.length; j++) {\n          browserslist.versionAliases[name][interval[j]] = full\n        }\n      }\n    }\n  }\n\n  browserslist.nodeVersions = jsReleases.map(function (release) {\n    return release.version\n  })\n})()\n\nmodule.exports = browserslist\n","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\n/**\n * A regexp-tree plugin to remove unnecessary groups.\n *\n * /(?:a)/ -> /a/\n */\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = {\n  Group: function Group(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    var childPath = path.getChild();\n\n    if (node.capturing || !childPath) {\n      return;\n    }\n\n    // Don't optimize \\1(?:0) to \\10\n    if (!hasAppropriateSiblings(path)) {\n      return;\n    }\n\n    // Don't optimize /a(?:b|c)/ to /ab|c/\n    // but /(?:b|c)/ to /b|c/ is ok\n    if (childPath.node.type === 'Disjunction' && parent.type !== 'RegExp') {\n      return;\n    }\n\n    // Don't optimize /(?:ab)+/ to /ab+/\n    // but /(?:a)+/ to /a+/ is ok\n    // and /(?:[a-d])+/ to /[a-d]+/ is ok too\n    if (parent.type === 'Repetition' && childPath.node.type !== 'Char' && childPath.node.type !== 'CharacterClass') {\n      return;\n    }\n\n    if (childPath.node.type === 'Alternative') {\n      var parentPath = path.getParent();\n      if (parentPath.node.type === 'Alternative') {\n        // /abc(?:def)ghi/ When (?:def) is ungrouped its content must be merged with parent alternative\n\n        parentPath.replace({\n          type: 'Alternative',\n          expressions: [].concat(_toConsumableArray(parent.expressions.slice(0, path.index)), _toConsumableArray(childPath.node.expressions), _toConsumableArray(parent.expressions.slice(path.index + 1)))\n        });\n      }\n    } else {\n      path.replace(childPath.node);\n    }\n  }\n};\n\nfunction hasAppropriateSiblings(path) {\n  var parent = path.parent,\n      index = path.index;\n\n\n  if (parent.type !== 'Alternative') {\n    return true;\n  }\n\n  var previousNode = parent.expressions[index - 1];\n  if (previousNode == null) {\n    return true;\n  }\n\n  // Don't optimized \\1(?:0) to \\10\n  if (previousNode.type === 'Backreference' && previousNode.kind === 'number') {\n    return false;\n  }\n\n  // Don't optimized \\2(?:0) to \\20\n  if (previousNode.type === 'Char' && previousNode.kind === 'decimal') {\n    return false;\n  }\n\n  return true;\n}","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nconst getLogger = user => {\n\tif (user === null) {\n\t\treturn getLoggerBuilder()\n\t\t\t.setApp('core')\n\t\t\t.build()\n\t}\n\treturn getLoggerBuilder()\n\t\t.setApp('core')\n\t\t.setUid(user.uid)\n\t\t.build()\n}\n\nexport default getLogger(getCurrentUser())\n\nexport const unifiedSearchLogger = getLoggerBuilder()\n\t.setApp('unified-search')\n\t.detectUser()\n\t.build()\n","module.exports={A:{A:{K:0,E:0,F:0,G:0.033801,A:0,B:0.371811,kC:0},B:\"mskC\",\"K\",\"E\",\"F\",\"G\",\"A\",\"B\",\"\",\"\",\"\"],E:\"IE\",F:{kC:962323200,K:998870400,E:1161129600,F:1237420800,G:1300060800,A:1346716800,B:1381968000}},B:{A:{\"6\":0.003558,\"7\":0,\"8\":0.003558,\"9\":0.003558,C:0,L:0,M:0,H:0,N:0,O:0.003558,P:0.117414,Q:0,I:0,R:0,S:0,T:0,U:0,V:0,W:0,X:0,Y:0,Z:0,a:0,b:0.010674,c:0,d:0,e:0,f:0,g:0,h:0,i:0,j:0,k:0,l:0,m:0,n:0,o:0,p:0,q:0,r:0.003558,s:0.049812,t:0,u:0.003558,v:0.007116,w:0.007116,x:0.010674,AB:0.003558,BB:0.021348,CB:0.010674,DB:0.014232,EB:0.007116,FB:0.010674,GB:0.010674,HB:0.021348,IB:0.021348,JB:0.01779,KB:0.021348,LB:0.067602,MB:2.88198,D:1.62245},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"C\",\"L\",\"M\",\"H\",\"N\",\"O\",\"P\",\"Q\",\"I\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"D\",\"\",\"\",\"\"],E:\"Edge\",F:{\"6\":1689897600,\"7\":1692576000,\"8\":1694649600,\"9\":1697155200,C:1438128000,L:1447286400,M:1470096000,H:1491868800,N:1508198400,O:1525046400,P:1542067200,Q:1579046400,I:1581033600,R:1586736000,S:1590019200,T:1594857600,U:1598486400,V:1602201600,W:1605830400,X:1611360000,Y:1614816000,Z:1618358400,a:1622073600,b:1626912000,c:1630627200,d:1632441600,e:1634774400,f:1637539200,g:1641427200,h:1643932800,i:1646265600,j:1649635200,k:1651190400,l:1653955200,m:1655942400,n:1659657600,o:1661990400,p:1664755200,q:1666915200,r:1670198400,s:1673481600,t:1675900800,u:1678665600,v:1680825600,w:1683158400,x:1685664000,AB:1698969600,BB:1701993600,CB:1706227200,DB:1708732800,EB:1711152000,FB:1713398400,GB:1715990400,HB:1718841600,IB:1721865600,JB:1724371200,KB:1726704000,LB:1729123200,MB:1731542400,D:1737417600},D:{C:\"ms\",L:\"ms\",M:\"ms\",H:\"ms\",N:\"ms\",O:\"ms\",P:\"ms\"}},C:{A:{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0.234828,\"7\":0,\"8\":0,\"9\":0.085392,lC:0,IC:0,J:0,NB:0,K:0,E:0,F:0,G:0,A:0,B:0.021348,C:0,L:0,M:0,H:0,N:0,O:0,P:0,OB:0,y:0,z:0,PB:0,QB:0,RB:0,SB:0,TB:0,UB:0,VB:0,WB:0,XB:0,YB:0,ZB:0,aB:0,bB:0,cB:0,dB:0,eB:0.007116,fB:0.003558,gB:0,hB:0,iB:0.003558,jB:0,kB:0,lB:0,mB:0,nB:0.028464,oB:0,pB:0,qB:0.003558,rB:0.014232,sB:0,tB:0,JC:0.003558,uB:0,KC:0,vB:0,wB:0,xB:0,yB:0,zB:0,\"0B\":0,\"1B\":0,\"2B\":0,\"3B\":0,\"4B\":0,\"5B\":0,\"6B\":0,\"7B\":0,\"8B\":0,\"9B\":0,AC:0,BC:0.010674,Q:0,I:0,R:0,LC:0,S:0,T:0,U:0,V:0,W:0,X:0.003558,Y:0,Z:0,a:0,b:0,c:0,d:0,e:0,f:0,g:0,h:0,i:0,j:0,k:0,l:0,m:0.007116,n:0,o:0,p:0,q:0,r:0,s:0.003558,t:0,u:0,v:0,w:0.007116,x:0,AB:0,BB:0.003558,CB:0.003558,DB:0,EB:0,FB:0,GB:0.01779,HB:0,IB:0.007116,JB:0.078276,KB:0.003558,LB:0.007116,MB:0.010674,D:0.021348,MC:0.49812,NC:1.02826,OC:0.007116,PC:0,mC:0,nC:0,oC:0,pC:0},B:\"moz\",C:[\"lC\",\"IC\",\"oC\",\"pC\",\"J\",\"NB\",\"K\",\"E\",\"F\",\"G\",\"A\",\"B\",\"C\",\"L\",\"M\",\"H\",\"N\",\"O\",\"P\",\"OB\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"JC\",\"uB\",\"KC\",\"vB\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"1B\",\"2B\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"AC\",\"BC\",\"Q\",\"I\",\"R\",\"LC\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"D\",\"MC\",\"NC\",\"OC\",\"PC\",\"mC\",\"nC\"],E:\"Firefox\",F:{\"0\":1368489600,\"1\":1372118400,\"2\":1375747200,\"3\":1379376000,\"4\":1386633600,\"5\":1391472000,\"6\":1688428800,\"7\":1690848000,\"8\":1693267200,\"9\":1695686400,lC:1161648000,IC:1213660800,oC:1246320000,pC:1264032000,J:1300752000,NB:1308614400,K:1313452800,E:1317081600,F:1317081600,G:1320710400,A:1324339200,B:1327968000,C:1331596800,L:1335225600,M:1338854400,H:1342483200,N:1346112000,O:1349740800,P:1353628800,OB:1357603200,y:1361232000,z:1364860800,PB:1395100800,QB:1398729600,RB:1402358400,SB:1405987200,TB:1409616000,UB:1413244800,VB:1417392000,WB:1421107200,XB:1424736000,YB:1428278400,ZB:1431475200,aB:1435881600,bB:1439251200,cB:1442880000,dB:1446508800,eB:1450137600,fB:1453852800,gB:1457395200,hB:1461628800,iB:1465257600,jB:1470096000,kB:1474329600,lB:1479168000,mB:1485216000,nB:1488844800,oB:1492560000,pB:1497312000,qB:1502150400,rB:1506556800,sB:1510617600,tB:1516665600,JC:1520985600,uB:1525824000,KC:1529971200,vB:1536105600,wB:1540252800,xB:1544486400,yB:1548720000,zB:1552953600,\"0B\":1558396800,\"1B\":1562630400,\"2B\":1567468800,\"3B\":1571788800,\"4B\":1575331200,\"5B\":1578355200,\"6B\":1581379200,\"7B\":1583798400,\"8B\":1586304000,\"9B\":1588636800,AC:1591056000,BC:1593475200,Q:1595894400,I:1598313600,R:1600732800,LC:1603152000,S:1605571200,T:1607990400,U:1611619200,V:1614038400,W:1616457600,X:1618790400,Y:1622505600,Z:1626134400,a:1628553600,b:1630972800,c:1633392000,d:1635811200,e:1638835200,f:1641859200,g:1644364800,h:1646697600,i:1649116800,j:1651536000,k:1653955200,l:1656374400,m:1658793600,n:1661212800,o:1663632000,p:1666051200,q:1668470400,r:1670889600,s:1673913600,t:1676332800,u:1678752000,v:1681171200,w:1683590400,x:1686009600,AB:1698105600,BB:1700524800,CB:1702944000,DB:1705968000,EB:1708387200,FB:1710806400,GB:1713225600,HB:1715644800,IB:1718064000,JB:1720483200,KB:1722902400,LB:1725321600,MB:1727740800,D:1730160000,MC:1732579200,NC:1736208000,OC:1738627200,PC:null,mC:null,nC:null}},D:{A:{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0.024906,\"7\":0.110298,\"8\":0.067602,\"9\":0.056928,J:0,NB:0,K:0,E:0,F:0,G:0,A:0,B:0,C:0,L:0,M:0,H:0,N:0,O:0,P:0,OB:0,y:0,z:0,PB:0,QB:0,RB:0,SB:0,TB:0,UB:0,VB:0,WB:0,XB:0,YB:0,ZB:0.007116,aB:0,bB:0,cB:0,dB:0,eB:0,fB:0,gB:0.003558,hB:0,iB:0.003558,jB:0.014232,kB:0.014232,lB:0.024906,mB:0,nB:0.007116,oB:0.007116,pB:0,qB:0,rB:0.010674,sB:0,tB:0.007116,JC:0,uB:0,KC:0.007116,vB:0,wB:0,xB:0,yB:0,zB:0.021348,\"0B\":0,\"1B\":0,\"2B\":0.007116,\"3B\":0.010674,\"4B\":0,\"5B\":0,\"6B\":0.007116,\"7B\":0.007116,\"8B\":0.003558,\"9B\":0.003558,AC:0.010674,BC:0.010674,Q:0.08895,I:0.010674,R:0.024906,S:0.032022,T:0,U:0.010674,V:0.01779,W:0.067602,X:0.010674,Y:0.007116,Z:0.007116,a:0.03558,b:0.010674,c:0.010674,d:0.032022,e:0.014232,f:0.007116,g:0.014232,h:0.039138,i:0.010674,j:0.007116,k:0.014232,l:0.010674,m:0.099624,n:0.042696,o:0.010674,p:0.01779,q:0.024906,r:0.039138,s:1.04605,t:0.021348,u:0.028464,v:0.039138,w:0.145878,x:0.07116,AB:0.039138,BB:0.056928,CB:0.08895,DB:0.074718,EB:0.078276,FB:0.138762,GB:0.814782,HB:0.295314,IB:0.224154,JB:0.156552,KB:0.14232,LB:0.384264,MB:12.7946,D:3.25201,MC:0.014232,NC:0.007116,OC:0,PC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"J\",\"NB\",\"K\",\"E\",\"F\",\"G\",\"A\",\"B\",\"C\",\"L\",\"M\",\"H\",\"N\",\"O\",\"P\",\"OB\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"JC\",\"uB\",\"KC\",\"vB\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"1B\",\"2B\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"AC\",\"BC\",\"Q\",\"I\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"6\",\"7\",\"8\",\"9\",\"AB\",\"BB\",\"CB\",\"DB\",\"EB\",\"FB\",\"GB\",\"HB\",\"IB\",\"JB\",\"KB\",\"LB\",\"MB\",\"D\",\"MC\",\"NC\",\"OC\",\"PC\"],E:\"Chrome\",F:{\"0\":1343692800,\"1\":1348531200,\"2\":1352246400,\"3\":1357862400,\"4\":1361404800,\"5\":1364428800,\"6\":1689724800,\"7\":1692057600,\"8\":1694476800,\"9\":1696896000,J:1264377600,NB:1274745600,K:1283385600,E:1287619200,F:1291248000,G:1296777600,A:1299542400,B:1303862400,C:1307404800,L:1312243200,M:1316131200,H:1316131200,N:1319500800,O:1323734400,P:1328659200,OB:1332892800,y:1337040000,z:1340668800,PB:1369094400,QB:1374105600,RB:1376956800,SB:1384214400,TB:1389657600,UB:1392940800,VB:1397001600,WB:1400544000,XB:1405468800,YB:1409011200,ZB:1412640000,aB:1416268800,bB:1421798400,cB:1425513600,dB:1429401600,eB:1432080000,fB:1437523200,gB:1441152000,hB:1444780800,iB:1449014400,jB:1453248000,kB:1456963200,lB:1460592000,mB:1464134400,nB:1469059200,oB:1472601600,pB:1476230400,qB:1480550400,rB:1485302400,sB:1489017600,tB:1492560000,JC:1496707200,uB:1500940800,KC:1504569600,vB:1508198400,wB:1512518400,xB:1516752000,yB:1520294400,zB:1523923200,\"0B\":1527552000,\"1B\":1532390400,\"2B\":1536019200,\"3B\":1539648000,\"4B\":1543968000,\"5B\":1548720000,\"6B\":1552348800,\"7B\":1555977600,\"8B\":1559606400,\"9B\":1564444800,AC:1568073600,BC:1571702400,Q:1575936000,I:1580860800,R:1586304000,S:1589846400,T:1594684800,U:1598313600,V:1601942400,W:1605571200,X:1611014400,Y:1614556800,Z:1618272000,a:1621987200,b:1626739200,c:1630368000,d:1632268800,e:1634601600,f:1637020800,g:1641340800,h:1643673600,i:1646092800,j:1648512000,k:1650931200,l:1653350400,m:1655769600,n:1659398400,o:1661817600,p:1664236800,q:1666656000,r:1669680000,s:1673308800,t:1675728000,u:1678147200,v:1680566400,w:1682985600,x:1685404800,AB:1698710400,BB:1701993600,CB:1705968000,DB:1708387200,EB:1710806400,FB:1713225600,GB:1715644800,HB:1718064000,IB:1721174400,JB:1724112000,KB:1726531200,LB:1728950400,MB:1731369600,D:1736812800,MC:1738627200,NC:null,OC:null,PC:null}},E:{A:{J:0,NB:0,K:0,E:0,F:0,G:0,A:0,B:0,C:0,L:0.003558,M:0.01779,H:0.003558,qC:0,QC:0,rC:0,sC:0,tC:0,uC:0,RC:0,CC:0.003558,DC:0.007116,vC:0.039138,wC:0.05337,xC:0.010674,SC:0.007116,TC:0.014232,EC:0.01779,yC:0.167226,FC:0.024906,UC:0.028464,VC:0.021348,WC:0.049812,XC:0.01779,YC:0.028464,zC:0.224154,GC:0.014232,ZC:0.024906,aC:0.024906,bC:0.028464,cC:0.064044,dC:0.131646,\"0C\":0.39138,HC:0.067602,eC:0.939312,fC:0.416286,gC:0.028464,hC:0,\"1C\":0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"qC\",\"QC\",\"J\",\"NB\",\"rC\",\"K\",\"sC\",\"E\",\"tC\",\"F\",\"G\",\"uC\",\"A\",\"RC\",\"B\",\"CC\",\"C\",\"DC\",\"L\",\"vC\",\"M\",\"wC\",\"H\",\"xC\",\"SC\",\"TC\",\"EC\",\"yC\",\"FC\",\"UC\",\"VC\",\"WC\",\"XC\",\"YC\",\"zC\",\"GC\",\"ZC\",\"aC\",\"bC\",\"cC\",\"dC\",\"0C\",\"HC\",\"eC\",\"fC\",\"gC\",\"hC\",\"1C\",\"\"],E:\"Safari\",F:{qC:1205798400,QC:1226534400,J:1244419200,NB:1275868800,rC:1311120000,K:1343174400,sC:1382400000,E:1382400000,tC:1410998400,F:1413417600,G:1443657600,uC:1458518400,A:1474329600,RC:1490572800,B:1505779200,CC:1522281600,C:1537142400,DC:1553472000,L:1568851200,vC:1585008000,M:1600214400,wC:1619395200,H:1632096000,xC:1635292800,SC:1639353600,TC:1647216000,EC:1652745600,yC:1658275200,FC:1662940800,UC:1666569600,VC:1670889600,WC:1674432000,XC:1679875200,YC:1684368000,zC:1690156800,GC:1695686400,ZC:1698192000,aC:1702252800,bC:1705881600,cC:1709596800,dC:1715558400,\"0C\":1722211200,HC:1726444800,eC:1730073600,fC:1733875200,gC:1737936000,hC:null,\"1C\":null}},F:{A:{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,G:0,B:0,C:0,H:0,N:0,O:0,P:0,OB:0,y:0,z:0,PB:0,QB:0,RB:0,SB:0,TB:0,UB:0,VB:0,WB:0,XB:0,YB:0,ZB:0,aB:0,bB:0.003558,cB:0,dB:0,eB:0,fB:0,gB:0,hB:0.014232,iB:0,jB:0,kB:0,lB:0,mB:0,nB:0,oB:0,pB:0,qB:0,rB:0,sB:0,tB:0,uB:0,vB:0,wB:0,xB:0,yB:0,zB:0,\"0B\":0,\"1B\":0,\"2B\":0,\"3B\":0,\"4B\":0,\"5B\":0,\"6B\":0,\"7B\":0,\"8B\":0,\"9B\":0,AC:0,BC:0,Q:0,I:0,R:0,LC:0,S:0,T:0,U:0,V:0.032022,W:0.010674,X:0,Y:0,Z:0,a:0,b:0,c:0,d:0,e:0.032022,f:0,g:0,h:0,i:0,j:0,k:0,l:0.010674,m:0,n:0,o:0,p:0,q:0,r:0,s:0,t:0,u:0,v:0,w:0,x:0.313104,\"2C\":0,\"3C\":0,\"4C\":0,\"5C\":0,CC:0,iC:0,\"6C\":0,DC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"G\",\"2C\",\"3C\",\"4C\",\"5C\",\"B\",\"CC\",\"iC\",\"6C\",\"C\",\"DC\",\"H\",\"N\",\"O\",\"P\",\"OB\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"PB\",\"QB\",\"RB\",\"SB\",\"TB\",\"UB\",\"VB\",\"WB\",\"XB\",\"YB\",\"ZB\",\"aB\",\"bB\",\"cB\",\"dB\",\"eB\",\"fB\",\"gB\",\"hB\",\"iB\",\"jB\",\"kB\",\"lB\",\"mB\",\"nB\",\"oB\",\"pB\",\"qB\",\"rB\",\"sB\",\"tB\",\"uB\",\"vB\",\"wB\",\"xB\",\"yB\",\"zB\",\"0B\",\"1B\",\"2B\",\"3B\",\"4B\",\"5B\",\"6B\",\"7B\",\"8B\",\"9B\",\"AC\",\"BC\",\"Q\",\"I\",\"R\",\"LC\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\",\"\",\"\"],E:\"Opera\",F:{\"0\":1401753600,\"1\":1405987200,\"2\":1409616000,\"3\":1413331200,\"4\":1417132800,\"5\":1422316800,G:1150761600,\"2C\":1223424000,\"3C\":1251763200,\"4C\":1267488000,\"5C\":1277942400,B:1292457600,CC:1302566400,iC:1309219200,\"6C\":1323129600,C:1323129600,DC:1352073600,H:1372723200,N:1377561600,O:1381104000,P:1386288000,OB:1390867200,y:1393891200,z:1399334400,PB:1425945600,QB:1430179200,RB:1433808000,SB:1438646400,TB:1442448000,UB:1445904000,VB:1449100800,WB:1454371200,XB:1457308800,YB:1462320000,ZB:1465344000,aB:1470096000,bB:1474329600,cB:1477267200,dB:1481587200,eB:1486425600,fB:1490054400,gB:1494374400,hB:1498003200,iB:1502236800,jB:1506470400,kB:1510099200,lB:1515024000,mB:1517961600,nB:1521676800,oB:1525910400,pB:1530144000,qB:1534982400,rB:1537833600,sB:1543363200,tB:1548201600,uB:1554768000,vB:1561593600,wB:1566259200,xB:1570406400,yB:1573689600,zB:1578441600,\"0B\":1583971200,\"1B\":1587513600,\"2B\":1592956800,\"3B\":1595894400,\"4B\":1600128000,\"5B\":1603238400,\"6B\":1613520000,\"7B\":1612224000,\"8B\":1616544000,\"9B\":1619568000,AC:1623715200,BC:1627948800,Q:1631577600,I:1633392000,R:1635984000,LC:1638403200,S:1642550400,T:1644969600,U:1647993600,V:1650412800,W:1652745600,X:1654646400,Y:1657152000,Z:1660780800,a:1663113600,b:1668816000,c:1668643200,d:1671062400,e:1675209600,f:1677024000,g:1679529600,h:1681948800,i:1684195200,j:1687219200,k:1690329600,l:1692748800,m:1696204800,n:1699920000,o:1699920000,p:1702944000,q:1707264000,r:1710115200,s:1711497600,t:1716336000,u:1719273600,v:1721088000,w:1724284800,x:1727222400},D:{G:\"o\",B:\"o\",C:\"o\",\"2C\":\"o\",\"3C\":\"o\",\"4C\":\"o\",\"5C\":\"o\",CC:\"o\",iC:\"o\",\"6C\":\"o\",DC:\"o\"}},G:{A:{F:0,QC:0,\"7C\":0,jC:0.00293498,\"8C\":0,\"9C\":0.00733744,AD:0.00880493,BD:0,CD:0.00293498,DD:0.0220123,ED:0.00440246,FD:0.0322847,GD:0.0924517,HD:0.0102724,ID:0.00586995,JD:0.155554,KD:0.00293498,LD:0.0176099,MD:0.00586995,ND:0.0220123,OD:0.143814,PD:0.0689719,QD:0.0352197,SC:0.0366872,TC:0.0425571,EC:0.0498946,RD:0.585528,FC:0.0880493,UC:0.192241,VC:0.0983217,WC:0.171696,XC:0.0366872,YC:0.0704394,SD:0.713199,GC:0.0454921,ZC:0.0807118,aC:0.063102,bC:0.0895167,cC:0.192241,dC:0.463726,TD:1.59369,HC:0.490141,eC:6.52592,fC:2.20123,gC:0.190773,hC:0},B:\"webkit\",C:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"QC\",\"7C\",\"jC\",\"8C\",\"9C\",\"AD\",\"F\",\"BD\",\"CD\",\"DD\",\"ED\",\"FD\",\"GD\",\"HD\",\"ID\",\"JD\",\"KD\",\"LD\",\"MD\",\"ND\",\"OD\",\"PD\",\"QD\",\"SC\",\"TC\",\"EC\",\"RD\",\"FC\",\"UC\",\"VC\",\"WC\",\"XC\",\"YC\",\"SD\",\"GC\",\"ZC\",\"aC\",\"bC\",\"cC\",\"dC\",\"TD\",\"HC\",\"eC\",\"fC\",\"gC\",\"hC\",\"\",\"\"],E:\"Safari on iOS\",F:{QC:1270252800,\"7C\":1283904000,jC:1299628800,\"8C\":1331078400,\"9C\":1359331200,AD:1394409600,F:1410912000,BD:1413763200,CD:1442361600,DD:1458518400,ED:1473724800,FD:1490572800,GD:1505779200,HD:1522281600,ID:1537142400,JD:1553472000,KD:1568851200,LD:1572220800,MD:1580169600,ND:1585008000,OD:1600214400,PD:1619395200,QD:1632096000,SC:1639353600,TC:1647216000,EC:1652659200,RD:1658275200,FC:1662940800,UC:1666569600,VC:1670889600,WC:1674432000,XC:1679875200,YC:1684368000,SD:1690156800,GC:1694995200,ZC:1698192000,aC:1702252800,bC:1705881600,cC:1709596800,dC:1715558400,TD:1722211200,HC:1726444800,eC:1730073600,fC:1733875200,gC:1737936000,hC:null}},H:{A:{UD:0.04},B:\"opera Mini\",F:{UD:1426464000}},I:{A:{IC:0,J:0,D:0.308567,VD:0,WD:0,XD:0,YD:0.0000309216,jC:0.0000618432,ZD:0,aD:0.000371059},B:\"webkitjC\",\"ZD\",\"aD\",\"D\",\"\",\"\",\"\"],E:\"Android Browser\",F:{VD:1256515200,WD:1274313600,XD:1291593600,IC:1298332800,J:1318896000,YD:1341792000,jC:1374624000,ZD:1386547200,aD:1401667200,D:1737676800}},J:{A:{E:0,A:0},B:\"webkitlackberry Browser\",F:{E:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,I:1.03581,CC:0,iC:0,DC:0},B:\"oiC\",\"C\",\"DC\",\"I\",\"\",\"\",\"\"],E:\"Opera Mobile\",F:{A:1287100800,B:1300752000,CC:1314835200,iC:1318291200,C:1330300800,DC:1349740800,I:1709769600},D:{I:\"webkit\"}},L:{A:{D:46.1904},B:\"webkithrome for Android\",F:{D:1737676800}},M:{A:{D:0.334984},B:\"mozirefox for Android\",F:{D:1730160000}},N:{A:{A:0,B:0},B:\"msobile\",F:{A:1340150400,B:1353456000}},O:{A:{EC:0.83746},B:\"webkitrowser for Android\",F:{EC:1710115200},D:{EC:\"webkit\"}},P:{A:{\"0\":0.0330772,\"1\":0.0330772,\"2\":0.0441029,\"3\":0.0441029,\"4\":0.110257,\"5\":1.90745,J:0.0661544,y:0,z:0.0220515,bD:0.0110257,cD:0,dD:0.0110257,eD:0,fD:0,RC:0,gD:0,hD:0,iD:0,jD:0,kD:0,FC:0,GC:0.0110257,HC:0,lD:0},B:\"webkitbD\",\"cD\",\"dD\",\"eD\",\"fD\",\"RC\",\"gD\",\"hD\",\"iD\",\"jD\",\"kD\",\"FC\",\"GC\",\"HC\",\"lD\",\"y\",\"z\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"\",\"\",\"\"],E:\"Samsung Internet\",F:{\"0\":1689292800,\"1\":1697587200,\"2\":1711497600,\"3\":1715126400,\"4\":1717718400,\"5\":1725667200,J:1461024000,bD:1481846400,cD:1509408000,dD:1528329600,eD:1546128000,fD:1554163200,RC:1567900800,gD:1582588800,hD:1593475200,iD:1605657600,jD:1618531200,kD:1629072000,FC:1640736000,GC:1651708800,HC:1659657600,lD:1667260800,y:1677369600,z:1684454400}},Q:{A:{mD:0.199702},B:\"webkitmD\",\"\",\"\",\"\"],E:\"QQ Browser\",F:{mD:1710288000}},R:{A:{nD:0},B:\"webkitnD\",\"\",\"\",\"\"],E:\"Baidu Browser\",F:{nD:1710201600}},S:{A:{oD:0.019326,pD:0},B:\"mozoD\",\"pD\",\"\",\"\",\"\"],E:\"KaiOS Browser\",F:{oD:1527811200,pD:1631664000}}};\n","/**\n * LR parser generated by the Syntax tool.\n *\n * https://www.npmjs.com/package/syntax-cli\n *\n *   npm install -g syntax-cli\n *\n *   syntax-cli --help\n *\n * To regenerate run:\n *\n *   syntax-cli \\\n *     --grammar ~/path-to-grammar-file \\\n *     --mode <parsing-mode> \\\n *     --output ~/path-to-output-parser-file.js\n */\n\n'use strict';\n\n/**\n * Matched token text.\n */\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar yytext = void 0;\n\n/**\n * Length of the matched token text.\n */\nvar yyleng = void 0;\n\n/**\n * Storage object.\n */\nvar yy = {};\n\n/**\n * Result of semantic action.\n */\nvar __ = void 0;\n\n/**\n * Result location object.\n */\nvar __loc = void 0;\n\nfunction yyloc(start, end) {\n  if (!yy.options.captureLocations) {\n    return null;\n  }\n\n  // Epsilon doesn't produce location.\n  if (!start || !end) {\n    return start || end;\n  }\n\n  return {\n    startOffset: start.startOffset,\n    endOffset: end.endOffset,\n    startLine: start.startLine,\n    endLine: end.endLine,\n    startColumn: start.startColumn,\n    endColumn: end.endColumn\n  };\n}\n\nvar EOF = '$';\n\n/**\n * List of productions (generated by Syntax tool).\n */\nvar productions = [[-1, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [0, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  __ = Node({\n    type: 'RegExp',\n    body: _2,\n    flags: checkFlags(_4)\n  }, loc(_1loc, _4loc || _3loc));\n}], [1, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [1, 0, function () {\n  __loc = null;__ = '';\n}], [2, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [2, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = _1 + _2;\n}], [3, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [4, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [4, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  // Location for empty disjunction: /|/\n  var _loc = null;\n\n  if (_2loc) {\n    _loc = loc(_1loc || _2loc, _3loc || _2loc);\n  };\n\n  __ = Node({\n    type: 'Disjunction',\n    left: _1,\n    right: _3\n  }, _loc);\n}], [5, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  if (_1.length === 0) {\n    __ = null;\n    return;\n  }\n\n  if (_1.length === 1) {\n    __ = Node(_1[0], __loc);\n  } else {\n    __ = Node({\n      type: 'Alternative',\n      expressions: _1\n    }, __loc);\n  }\n}], [6, 0, function () {\n  __loc = null;__ = [];\n}], [6, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = _1.concat(_2);\n}], [7, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Node(Object.assign({ type: 'Assertion' }, _1), __loc);\n}], [7, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);\n  __ = _1;\n\n  if (_2) {\n    __ = Node({\n      type: 'Repetition',\n      expression: _1,\n      quantifier: _2\n    }, __loc);\n  }\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '^' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '$' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '\\\\b' };\n}], [8, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = { kind: '\\\\B' };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookahead',\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookahead',\n    negative: true,\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookbehind',\n    assertion: _2\n  };\n}], [8, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = {\n    kind: 'Lookbehind',\n    negative: true,\n    assertion: _2\n  };\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [9, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'simple', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1.slice(1), 'simple', __loc);__.escaped = true;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'unicode', __loc);__.isSurrogatePair = true;\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'unicode', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = UnicodeProperty(_1, __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'control', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'hex', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'oct', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = GroupRefOrDecChar(_1, __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}], [10, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = NamedGroupRefOrChars(_1, _1loc);\n}], [11, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [11, 0], [12, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [12, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);\n  _1.greedy = false;\n  __ = _1;\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: _1,\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  var range = getRange(_1);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: range[0],\n    to: range[0],\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: getRange(_1)[0],\n    greedy: true\n  }, __loc);\n}], [13, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);\n  var range = getRange(_1);\n  __ = Node({\n    type: 'Quantifier',\n    kind: 'Range',\n    from: range[0],\n    to: range[1],\n    greedy: true\n  }, __loc);\n}], [14, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [14, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [15, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  var nameRaw = String(_1);\n  var name = decodeUnicodeGroupName(nameRaw);\n  if (!yy.options.allowGroupNameDuplicates && namedGroups.hasOwnProperty(name)) {\n    throw new SyntaxError('Duplicate of the named group \"' + name + '\".');\n  }\n\n  namedGroups[name] = _1.groupNumber;\n\n  __ = Node({\n    type: 'Group',\n    capturing: true,\n    name: name,\n    nameRaw: nameRaw,\n    number: _1.groupNumber,\n    expression: _2\n  }, __loc);\n}], [15, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'Group',\n    capturing: true,\n    number: _1.groupNumber,\n    expression: _2\n  }, __loc);\n}], [16, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'Group',\n    capturing: false,\n    expression: _2\n  }, __loc);\n}], [17, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'CharacterClass',\n    negative: true,\n    expressions: _2\n  }, __loc);\n}], [17, 3, function (_1, _2, _3, _1loc, _2loc, _3loc) {\n  __loc = yyloc(_1loc, _3loc);\n  __ = Node({\n    type: 'CharacterClass',\n    expressions: _2\n  }, __loc);\n}], [18, 0, function () {\n  __loc = null;__ = [];\n}], [18, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [19, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = [_1];\n}], [19, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = [_1].concat(_2);\n}], [19, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  checkClassRange(_1, _3);\n\n  __ = [Node({\n    type: 'ClassRange',\n    from: _1,\n    to: _3\n  }, loc(_1loc, _3loc))];\n\n  if (_4) {\n    __ = __.concat(_4);\n  }\n}], [20, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [20, 2, function (_1, _2, _1loc, _2loc) {\n  __loc = yyloc(_1loc, _2loc);__ = [_1].concat(_2);\n}], [20, 4, function (_1, _2, _3, _4, _1loc, _2loc, _3loc, _4loc) {\n  __loc = yyloc(_1loc, _4loc);\n  checkClassRange(_1, _3);\n\n  __ = [Node({\n    type: 'ClassRange',\n    from: _1,\n    to: _3\n  }, loc(_1loc, _3loc))];\n\n  if (_4) {\n    __ = __.concat(_4);\n  }\n}], [21, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'simple', __loc);\n}], [21, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [22, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = _1;\n}], [22, 1, function (_1, _1loc) {\n  __loc = yyloc(_1loc, _1loc);__ = Char(_1, 'meta', __loc);\n}]];\n\n/**\n * Encoded tokens map.\n */\nvar tokens = { \"SLASH\": \"23\", \"CHAR\": \"24\", \"BAR\": \"25\", \"BOS\": \"26\", \"EOS\": \"27\", \"ESC_b\": \"28\", \"ESC_B\": \"29\", \"POS_LA_ASSERT\": \"30\", \"R_PAREN\": \"31\", \"NEG_LA_ASSERT\": \"32\", \"POS_LB_ASSERT\": \"33\", \"NEG_LB_ASSERT\": \"34\", \"ESC_CHAR\": \"35\", \"U_CODE_SURROGATE\": \"36\", \"U_CODE\": \"37\", \"U_PROP_VALUE_EXP\": \"38\", \"CTRL_CH\": \"39\", \"HEX_CODE\": \"40\", \"OCT_CODE\": \"41\", \"DEC_CODE\": \"42\", \"META_CHAR\": \"43\", \"ANY\": \"44\", \"NAMED_GROUP_REF\": \"45\", \"Q_MARK\": \"46\", \"STAR\": \"47\", \"PLUS\": \"48\", \"RANGE_EXACT\": \"49\", \"RANGE_OPEN\": \"50\", \"RANGE_CLOSED\": \"51\", \"NAMED_CAPTURE_GROUP\": \"52\", \"L_PAREN\": \"53\", \"NON_CAPTURE_GROUP\": \"54\", \"NEG_CLASS\": \"55\", \"R_BRACKET\": \"56\", \"L_BRACKET\": \"57\", \"DASH\": \"58\", \"$\": \"59\" };\n\n/**\n * Parsing table (generated by Syntax tool).\n */\nvar table = [{ \"0\": 1, \"23\": \"s2\" }, { \"59\": \"acc\" }, { \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"23\": \"r10\", \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"s7\" }, { \"23\": \"r6\", \"25\": \"s12\" }, { \"23\": \"r7\", \"25\": \"r7\", \"31\": \"r7\" }, { \"7\": 14, \"8\": 15, \"9\": 16, \"10\": 25, \"14\": 27, \"15\": 42, \"16\": 43, \"17\": 26, \"23\": \"r9\", \"24\": \"s28\", \"25\": \"r9\", \"26\": \"s17\", \"27\": \"s18\", \"28\": \"s19\", \"29\": \"s20\", \"30\": \"s21\", \"31\": \"r9\", \"32\": \"s22\", \"33\": \"s23\", \"34\": \"s24\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"52\": \"s44\", \"53\": \"s45\", \"54\": \"s46\", \"55\": \"s40\", \"57\": \"s41\" }, { \"1\": 8, \"2\": 9, \"24\": \"s10\", \"59\": \"r3\" }, { \"59\": \"r1\" }, { \"24\": \"s11\", \"59\": \"r2\" }, { \"24\": \"r4\", \"59\": \"r4\" }, { \"24\": \"r5\", \"59\": \"r5\" }, { \"5\": 13, \"6\": 6, \"23\": \"r10\", \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r8\", \"25\": \"r8\", \"31\": \"r8\" }, { \"23\": \"r11\", \"24\": \"r11\", \"25\": \"r11\", \"26\": \"r11\", \"27\": \"r11\", \"28\": \"r11\", \"29\": \"r11\", \"30\": \"r11\", \"31\": \"r11\", \"32\": \"r11\", \"33\": \"r11\", \"34\": \"r11\", \"35\": \"r11\", \"36\": \"r11\", \"37\": \"r11\", \"38\": \"r11\", \"39\": \"r11\", \"40\": \"r11\", \"41\": \"r11\", \"42\": \"r11\", \"43\": \"r11\", \"44\": \"r11\", \"45\": \"r11\", \"52\": \"r11\", \"53\": \"r11\", \"54\": \"r11\", \"55\": \"r11\", \"57\": \"r11\" }, { \"23\": \"r12\", \"24\": \"r12\", \"25\": \"r12\", \"26\": \"r12\", \"27\": \"r12\", \"28\": \"r12\", \"29\": \"r12\", \"30\": \"r12\", \"31\": \"r12\", \"32\": \"r12\", \"33\": \"r12\", \"34\": \"r12\", \"35\": \"r12\", \"36\": \"r12\", \"37\": \"r12\", \"38\": \"r12\", \"39\": \"r12\", \"40\": \"r12\", \"41\": \"r12\", \"42\": \"r12\", \"43\": \"r12\", \"44\": \"r12\", \"45\": \"r12\", \"52\": \"r12\", \"53\": \"r12\", \"54\": \"r12\", \"55\": \"r12\", \"57\": \"r12\" }, { \"11\": 47, \"12\": 48, \"13\": 49, \"23\": \"r38\", \"24\": \"r38\", \"25\": \"r38\", \"26\": \"r38\", \"27\": \"r38\", \"28\": \"r38\", \"29\": \"r38\", \"30\": \"r38\", \"31\": \"r38\", \"32\": \"r38\", \"33\": \"r38\", \"34\": \"r38\", \"35\": \"r38\", \"36\": \"r38\", \"37\": \"r38\", \"38\": \"r38\", \"39\": \"r38\", \"40\": \"r38\", \"41\": \"r38\", \"42\": \"r38\", \"43\": \"r38\", \"44\": \"r38\", \"45\": \"r38\", \"46\": \"s52\", \"47\": \"s50\", \"48\": \"s51\", \"49\": \"s53\", \"50\": \"s54\", \"51\": \"s55\", \"52\": \"r38\", \"53\": \"r38\", \"54\": \"r38\", \"55\": \"r38\", \"57\": \"r38\" }, { \"23\": \"r14\", \"24\": \"r14\", \"25\": \"r14\", \"26\": \"r14\", \"27\": \"r14\", \"28\": \"r14\", \"29\": \"r14\", \"30\": \"r14\", \"31\": \"r14\", \"32\": \"r14\", \"33\": \"r14\", \"34\": \"r14\", \"35\": \"r14\", \"36\": \"r14\", \"37\": \"r14\", \"38\": \"r14\", \"39\": \"r14\", \"40\": \"r14\", \"41\": \"r14\", \"42\": \"r14\", \"43\": \"r14\", \"44\": \"r14\", \"45\": \"r14\", \"52\": \"r14\", \"53\": \"r14\", \"54\": \"r14\", \"55\": \"r14\", \"57\": \"r14\" }, { \"23\": \"r15\", \"24\": \"r15\", \"25\": \"r15\", \"26\": \"r15\", \"27\": \"r15\", \"28\": \"r15\", \"29\": \"r15\", \"30\": \"r15\", \"31\": \"r15\", \"32\": \"r15\", \"33\": \"r15\", \"34\": \"r15\", \"35\": \"r15\", \"36\": \"r15\", \"37\": \"r15\", \"38\": \"r15\", \"39\": \"r15\", \"40\": \"r15\", \"41\": \"r15\", \"42\": \"r15\", \"43\": \"r15\", \"44\": \"r15\", \"45\": \"r15\", \"52\": \"r15\", \"53\": \"r15\", \"54\": \"r15\", \"55\": \"r15\", \"57\": \"r15\" }, { \"23\": \"r16\", \"24\": \"r16\", \"25\": \"r16\", \"26\": \"r16\", \"27\": \"r16\", \"28\": \"r16\", \"29\": \"r16\", \"30\": \"r16\", \"31\": \"r16\", \"32\": \"r16\", \"33\": \"r16\", \"34\": \"r16\", \"35\": \"r16\", \"36\": \"r16\", \"37\": \"r16\", \"38\": \"r16\", \"39\": \"r16\", \"40\": \"r16\", \"41\": \"r16\", \"42\": \"r16\", \"43\": \"r16\", \"44\": \"r16\", \"45\": \"r16\", \"52\": \"r16\", \"53\": \"r16\", \"54\": \"r16\", \"55\": \"r16\", \"57\": \"r16\" }, { \"23\": \"r17\", \"24\": \"r17\", \"25\": \"r17\", \"26\": \"r17\", \"27\": \"r17\", \"28\": \"r17\", \"29\": \"r17\", \"30\": \"r17\", \"31\": \"r17\", \"32\": \"r17\", \"33\": \"r17\", \"34\": \"r17\", \"35\": \"r17\", \"36\": \"r17\", \"37\": \"r17\", \"38\": \"r17\", \"39\": \"r17\", \"40\": \"r17\", \"41\": \"r17\", \"42\": \"r17\", \"43\": \"r17\", \"44\": \"r17\", \"45\": \"r17\", \"52\": \"r17\", \"53\": \"r17\", \"54\": \"r17\", \"55\": \"r17\", \"57\": \"r17\" }, { \"4\": 57, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 59, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 61, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 63, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r22\", \"24\": \"r22\", \"25\": \"r22\", \"26\": \"r22\", \"27\": \"r22\", \"28\": \"r22\", \"29\": \"r22\", \"30\": \"r22\", \"31\": \"r22\", \"32\": \"r22\", \"33\": \"r22\", \"34\": \"r22\", \"35\": \"r22\", \"36\": \"r22\", \"37\": \"r22\", \"38\": \"r22\", \"39\": \"r22\", \"40\": \"r22\", \"41\": \"r22\", \"42\": \"r22\", \"43\": \"r22\", \"44\": \"r22\", \"45\": \"r22\", \"46\": \"r22\", \"47\": \"r22\", \"48\": \"r22\", \"49\": \"r22\", \"50\": \"r22\", \"51\": \"r22\", \"52\": \"r22\", \"53\": \"r22\", \"54\": \"r22\", \"55\": \"r22\", \"57\": \"r22\" }, { \"23\": \"r23\", \"24\": \"r23\", \"25\": \"r23\", \"26\": \"r23\", \"27\": \"r23\", \"28\": \"r23\", \"29\": \"r23\", \"30\": \"r23\", \"31\": \"r23\", \"32\": \"r23\", \"33\": \"r23\", \"34\": \"r23\", \"35\": \"r23\", \"36\": \"r23\", \"37\": \"r23\", \"38\": \"r23\", \"39\": \"r23\", \"40\": \"r23\", \"41\": \"r23\", \"42\": \"r23\", \"43\": \"r23\", \"44\": \"r23\", \"45\": \"r23\", \"46\": \"r23\", \"47\": \"r23\", \"48\": \"r23\", \"49\": \"r23\", \"50\": \"r23\", \"51\": \"r23\", \"52\": \"r23\", \"53\": \"r23\", \"54\": \"r23\", \"55\": \"r23\", \"57\": \"r23\" }, { \"23\": \"r24\", \"24\": \"r24\", \"25\": \"r24\", \"26\": \"r24\", \"27\": \"r24\", \"28\": \"r24\", \"29\": \"r24\", \"30\": \"r24\", \"31\": \"r24\", \"32\": \"r24\", \"33\": \"r24\", \"34\": \"r24\", \"35\": \"r24\", \"36\": \"r24\", \"37\": \"r24\", \"38\": \"r24\", \"39\": \"r24\", \"40\": \"r24\", \"41\": \"r24\", \"42\": \"r24\", \"43\": \"r24\", \"44\": \"r24\", \"45\": \"r24\", \"46\": \"r24\", \"47\": \"r24\", \"48\": \"r24\", \"49\": \"r24\", \"50\": \"r24\", \"51\": \"r24\", \"52\": \"r24\", \"53\": \"r24\", \"54\": \"r24\", \"55\": \"r24\", \"57\": \"r24\" }, { \"23\": \"r25\", \"24\": \"r25\", \"25\": \"r25\", \"26\": \"r25\", \"27\": \"r25\", \"28\": \"r25\", \"29\": \"r25\", \"30\": \"r25\", \"31\": \"r25\", \"32\": \"r25\", \"33\": \"r25\", \"34\": \"r25\", \"35\": \"r25\", \"36\": \"r25\", \"37\": \"r25\", \"38\": \"r25\", \"39\": \"r25\", \"40\": \"r25\", \"41\": \"r25\", \"42\": \"r25\", \"43\": \"r25\", \"44\": \"r25\", \"45\": \"r25\", \"46\": \"r25\", \"47\": \"r25\", \"48\": \"r25\", \"49\": \"r25\", \"50\": \"r25\", \"51\": \"r25\", \"52\": \"r25\", \"53\": \"r25\", \"54\": \"r25\", \"55\": \"r25\", \"56\": \"r25\", \"57\": \"r25\", \"58\": \"r25\" }, { \"23\": \"r26\", \"24\": \"r26\", \"25\": \"r26\", \"26\": \"r26\", \"27\": \"r26\", \"28\": \"r26\", \"29\": \"r26\", \"30\": \"r26\", \"31\": \"r26\", \"32\": \"r26\", \"33\": \"r26\", \"34\": \"r26\", \"35\": \"r26\", \"36\": \"r26\", \"37\": \"r26\", \"38\": \"r26\", \"39\": \"r26\", \"40\": \"r26\", \"41\": \"r26\", \"42\": \"r26\", \"43\": \"r26\", \"44\": \"r26\", \"45\": \"r26\", \"46\": \"r26\", \"47\": \"r26\", \"48\": \"r26\", \"49\": \"r26\", \"50\": \"r26\", \"51\": \"r26\", \"52\": \"r26\", \"53\": \"r26\", \"54\": \"r26\", \"55\": \"r26\", \"56\": \"r26\", \"57\": \"r26\", \"58\": \"r26\" }, { \"23\": \"r27\", \"24\": \"r27\", \"25\": \"r27\", \"26\": \"r27\", \"27\": \"r27\", \"28\": \"r27\", \"29\": \"r27\", \"30\": \"r27\", \"31\": \"r27\", \"32\": \"r27\", \"33\": \"r27\", \"34\": \"r27\", \"35\": \"r27\", \"36\": \"r27\", \"37\": \"r27\", \"38\": \"r27\", \"39\": \"r27\", \"40\": \"r27\", \"41\": \"r27\", \"42\": \"r27\", \"43\": \"r27\", \"44\": \"r27\", \"45\": \"r27\", \"46\": \"r27\", \"47\": \"r27\", \"48\": \"r27\", \"49\": \"r27\", \"50\": \"r27\", \"51\": \"r27\", \"52\": \"r27\", \"53\": \"r27\", \"54\": \"r27\", \"55\": \"r27\", \"56\": \"r27\", \"57\": \"r27\", \"58\": \"r27\" }, { \"23\": \"r28\", \"24\": \"r28\", \"25\": \"r28\", \"26\": \"r28\", \"27\": \"r28\", \"28\": \"r28\", \"29\": \"r28\", \"30\": \"r28\", \"31\": \"r28\", \"32\": \"r28\", \"33\": \"r28\", \"34\": \"r28\", \"35\": \"r28\", \"36\": \"r28\", \"37\": \"r28\", \"38\": \"r28\", \"39\": \"r28\", \"40\": \"r28\", \"41\": \"r28\", \"42\": \"r28\", \"43\": \"r28\", \"44\": \"r28\", \"45\": \"r28\", \"46\": \"r28\", \"47\": \"r28\", \"48\": \"r28\", \"49\": \"r28\", \"50\": \"r28\", \"51\": \"r28\", \"52\": \"r28\", \"53\": \"r28\", \"54\": \"r28\", \"55\": \"r28\", \"56\": \"r28\", \"57\": \"r28\", \"58\": \"r28\" }, { \"23\": \"r29\", \"24\": \"r29\", \"25\": \"r29\", \"26\": \"r29\", \"27\": \"r29\", \"28\": \"r29\", \"29\": \"r29\", \"30\": \"r29\", \"31\": \"r29\", \"32\": \"r29\", \"33\": \"r29\", \"34\": \"r29\", \"35\": \"r29\", \"36\": \"r29\", \"37\": \"r29\", \"38\": \"r29\", \"39\": \"r29\", \"40\": \"r29\", \"41\": \"r29\", \"42\": \"r29\", \"43\": \"r29\", \"44\": \"r29\", \"45\": \"r29\", \"46\": \"r29\", \"47\": \"r29\", \"48\": \"r29\", \"49\": \"r29\", \"50\": \"r29\", \"51\": \"r29\", \"52\": \"r29\", \"53\": \"r29\", \"54\": \"r29\", \"55\": \"r29\", \"56\": \"r29\", \"57\": \"r29\", \"58\": \"r29\" }, { \"23\": \"r30\", \"24\": \"r30\", \"25\": \"r30\", \"26\": \"r30\", \"27\": \"r30\", \"28\": \"r30\", \"29\": \"r30\", \"30\": \"r30\", \"31\": \"r30\", \"32\": \"r30\", \"33\": \"r30\", \"34\": \"r30\", \"35\": \"r30\", \"36\": \"r30\", \"37\": \"r30\", \"38\": \"r30\", \"39\": \"r30\", \"40\": \"r30\", \"41\": \"r30\", \"42\": \"r30\", \"43\": \"r30\", \"44\": \"r30\", \"45\": \"r30\", \"46\": \"r30\", \"47\": \"r30\", \"48\": \"r30\", \"49\": \"r30\", \"50\": \"r30\", \"51\": \"r30\", \"52\": \"r30\", \"53\": \"r30\", \"54\": \"r30\", \"55\": \"r30\", \"56\": \"r30\", \"57\": \"r30\", \"58\": \"r30\" }, { \"23\": \"r31\", \"24\": \"r31\", \"25\": \"r31\", \"26\": \"r31\", \"27\": \"r31\", \"28\": \"r31\", \"29\": \"r31\", \"30\": \"r31\", \"31\": \"r31\", \"32\": \"r31\", \"33\": \"r31\", \"34\": \"r31\", \"35\": \"r31\", \"36\": \"r31\", \"37\": \"r31\", \"38\": \"r31\", \"39\": \"r31\", \"40\": \"r31\", \"41\": \"r31\", \"42\": \"r31\", \"43\": \"r31\", \"44\": \"r31\", \"45\": \"r31\", \"46\": \"r31\", \"47\": \"r31\", \"48\": \"r31\", \"49\": \"r31\", \"50\": \"r31\", \"51\": \"r31\", \"52\": \"r31\", \"53\": \"r31\", \"54\": \"r31\", \"55\": \"r31\", \"56\": \"r31\", \"57\": \"r31\", \"58\": \"r31\" }, { \"23\": \"r32\", \"24\": \"r32\", \"25\": \"r32\", \"26\": \"r32\", \"27\": \"r32\", \"28\": \"r32\", \"29\": \"r32\", \"30\": \"r32\", \"31\": \"r32\", \"32\": \"r32\", \"33\": \"r32\", \"34\": \"r32\", \"35\": \"r32\", \"36\": \"r32\", \"37\": \"r32\", \"38\": \"r32\", \"39\": \"r32\", \"40\": \"r32\", \"41\": \"r32\", \"42\": \"r32\", \"43\": \"r32\", \"44\": \"r32\", \"45\": \"r32\", \"46\": \"r32\", \"47\": \"r32\", \"48\": \"r32\", \"49\": \"r32\", \"50\": \"r32\", \"51\": \"r32\", \"52\": \"r32\", \"53\": \"r32\", \"54\": \"r32\", \"55\": \"r32\", \"56\": \"r32\", \"57\": \"r32\", \"58\": \"r32\" }, { \"23\": \"r33\", \"24\": \"r33\", \"25\": \"r33\", \"26\": \"r33\", \"27\": \"r33\", \"28\": \"r33\", \"29\": \"r33\", \"30\": \"r33\", \"31\": \"r33\", \"32\": \"r33\", \"33\": \"r33\", \"34\": \"r33\", \"35\": \"r33\", \"36\": \"r33\", \"37\": \"r33\", \"38\": \"r33\", \"39\": \"r33\", \"40\": \"r33\", \"41\": \"r33\", \"42\": \"r33\", \"43\": \"r33\", \"44\": \"r33\", \"45\": \"r33\", \"46\": \"r33\", \"47\": \"r33\", \"48\": \"r33\", \"49\": \"r33\", \"50\": \"r33\", \"51\": \"r33\", \"52\": \"r33\", \"53\": \"r33\", \"54\": \"r33\", \"55\": \"r33\", \"56\": \"r33\", \"57\": \"r33\", \"58\": \"r33\" }, { \"23\": \"r34\", \"24\": \"r34\", \"25\": \"r34\", \"26\": \"r34\", \"27\": \"r34\", \"28\": \"r34\", \"29\": \"r34\", \"30\": \"r34\", \"31\": \"r34\", \"32\": \"r34\", \"33\": \"r34\", \"34\": \"r34\", \"35\": \"r34\", \"36\": \"r34\", \"37\": \"r34\", \"38\": \"r34\", \"39\": \"r34\", \"40\": \"r34\", \"41\": \"r34\", \"42\": \"r34\", \"43\": \"r34\", \"44\": \"r34\", \"45\": \"r34\", \"46\": \"r34\", \"47\": \"r34\", \"48\": \"r34\", \"49\": \"r34\", \"50\": \"r34\", \"51\": \"r34\", \"52\": \"r34\", \"53\": \"r34\", \"54\": \"r34\", \"55\": \"r34\", \"56\": \"r34\", \"57\": \"r34\", \"58\": \"r34\" }, { \"23\": \"r35\", \"24\": \"r35\", \"25\": \"r35\", \"26\": \"r35\", \"27\": \"r35\", \"28\": \"r35\", \"29\": \"r35\", \"30\": \"r35\", \"31\": \"r35\", \"32\": \"r35\", \"33\": \"r35\", \"34\": \"r35\", \"35\": \"r35\", \"36\": \"r35\", \"37\": \"r35\", \"38\": \"r35\", \"39\": \"r35\", \"40\": \"r35\", \"41\": \"r35\", \"42\": \"r35\", \"43\": \"r35\", \"44\": \"r35\", \"45\": \"r35\", \"46\": \"r35\", \"47\": \"r35\", \"48\": \"r35\", \"49\": \"r35\", \"50\": \"r35\", \"51\": \"r35\", \"52\": \"r35\", \"53\": \"r35\", \"54\": \"r35\", \"55\": \"r35\", \"56\": \"r35\", \"57\": \"r35\", \"58\": \"r35\" }, { \"23\": \"r36\", \"24\": \"r36\", \"25\": \"r36\", \"26\": \"r36\", \"27\": \"r36\", \"28\": \"r36\", \"29\": \"r36\", \"30\": \"r36\", \"31\": \"r36\", \"32\": \"r36\", \"33\": \"r36\", \"34\": \"r36\", \"35\": \"r36\", \"36\": \"r36\", \"37\": \"r36\", \"38\": \"r36\", \"39\": \"r36\", \"40\": \"r36\", \"41\": \"r36\", \"42\": \"r36\", \"43\": \"r36\", \"44\": \"r36\", \"45\": \"r36\", \"46\": \"r36\", \"47\": \"r36\", \"48\": \"r36\", \"49\": \"r36\", \"50\": \"r36\", \"51\": \"r36\", \"52\": \"r36\", \"53\": \"r36\", \"54\": \"r36\", \"55\": \"r36\", \"56\": \"r36\", \"57\": \"r36\", \"58\": \"r36\" }, { \"10\": 70, \"18\": 65, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"10\": 70, \"18\": 83, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"23\": \"r47\", \"24\": \"r47\", \"25\": \"r47\", \"26\": \"r47\", \"27\": \"r47\", \"28\": \"r47\", \"29\": \"r47\", \"30\": \"r47\", \"31\": \"r47\", \"32\": \"r47\", \"33\": \"r47\", \"34\": \"r47\", \"35\": \"r47\", \"36\": \"r47\", \"37\": \"r47\", \"38\": \"r47\", \"39\": \"r47\", \"40\": \"r47\", \"41\": \"r47\", \"42\": \"r47\", \"43\": \"r47\", \"44\": \"r47\", \"45\": \"r47\", \"46\": \"r47\", \"47\": \"r47\", \"48\": \"r47\", \"49\": \"r47\", \"50\": \"r47\", \"51\": \"r47\", \"52\": \"r47\", \"53\": \"r47\", \"54\": \"r47\", \"55\": \"r47\", \"57\": \"r47\" }, { \"23\": \"r48\", \"24\": \"r48\", \"25\": \"r48\", \"26\": \"r48\", \"27\": \"r48\", \"28\": \"r48\", \"29\": \"r48\", \"30\": \"r48\", \"31\": \"r48\", \"32\": \"r48\", \"33\": \"r48\", \"34\": \"r48\", \"35\": \"r48\", \"36\": \"r48\", \"37\": \"r48\", \"38\": \"r48\", \"39\": \"r48\", \"40\": \"r48\", \"41\": \"r48\", \"42\": \"r48\", \"43\": \"r48\", \"44\": \"r48\", \"45\": \"r48\", \"46\": \"r48\", \"47\": \"r48\", \"48\": \"r48\", \"49\": \"r48\", \"50\": \"r48\", \"51\": \"r48\", \"52\": \"r48\", \"53\": \"r48\", \"54\": \"r48\", \"55\": \"r48\", \"57\": \"r48\" }, { \"4\": 85, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 87, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"4\": 89, \"5\": 5, \"6\": 6, \"24\": \"r10\", \"25\": \"r10\", \"26\": \"r10\", \"27\": \"r10\", \"28\": \"r10\", \"29\": \"r10\", \"30\": \"r10\", \"31\": \"r10\", \"32\": \"r10\", \"33\": \"r10\", \"34\": \"r10\", \"35\": \"r10\", \"36\": \"r10\", \"37\": \"r10\", \"38\": \"r10\", \"39\": \"r10\", \"40\": \"r10\", \"41\": \"r10\", \"42\": \"r10\", \"43\": \"r10\", \"44\": \"r10\", \"45\": \"r10\", \"52\": \"r10\", \"53\": \"r10\", \"54\": \"r10\", \"55\": \"r10\", \"57\": \"r10\" }, { \"23\": \"r13\", \"24\": \"r13\", \"25\": \"r13\", \"26\": \"r13\", \"27\": \"r13\", \"28\": \"r13\", \"29\": \"r13\", \"30\": \"r13\", \"31\": \"r13\", \"32\": \"r13\", \"33\": \"r13\", \"34\": \"r13\", \"35\": \"r13\", \"36\": \"r13\", \"37\": \"r13\", \"38\": \"r13\", \"39\": \"r13\", \"40\": \"r13\", \"41\": \"r13\", \"42\": \"r13\", \"43\": \"r13\", \"44\": \"r13\", \"45\": \"r13\", \"52\": \"r13\", \"53\": \"r13\", \"54\": \"r13\", \"55\": \"r13\", \"57\": \"r13\" }, { \"23\": \"r37\", \"24\": \"r37\", \"25\": \"r37\", \"26\": \"r37\", \"27\": \"r37\", \"28\": \"r37\", \"29\": \"r37\", \"30\": \"r37\", \"31\": \"r37\", \"32\": \"r37\", \"33\": \"r37\", \"34\": \"r37\", \"35\": \"r37\", \"36\": \"r37\", \"37\": \"r37\", \"38\": \"r37\", \"39\": \"r37\", \"40\": \"r37\", \"41\": \"r37\", \"42\": \"r37\", \"43\": \"r37\", \"44\": \"r37\", \"45\": \"r37\", \"52\": \"r37\", \"53\": \"r37\", \"54\": \"r37\", \"55\": \"r37\", \"57\": \"r37\" }, { \"23\": \"r39\", \"24\": \"r39\", \"25\": \"r39\", \"26\": \"r39\", \"27\": \"r39\", \"28\": \"r39\", \"29\": \"r39\", \"30\": \"r39\", \"31\": \"r39\", \"32\": \"r39\", \"33\": \"r39\", \"34\": \"r39\", \"35\": \"r39\", \"36\": \"r39\", \"37\": \"r39\", \"38\": \"r39\", \"39\": \"r39\", \"40\": \"r39\", \"41\": \"r39\", \"42\": \"r39\", \"43\": \"r39\", \"44\": \"r39\", \"45\": \"r39\", \"46\": \"s56\", \"52\": \"r39\", \"53\": \"r39\", \"54\": \"r39\", \"55\": \"r39\", \"57\": \"r39\" }, { \"23\": \"r41\", \"24\": \"r41\", \"25\": \"r41\", \"26\": \"r41\", \"27\": \"r41\", \"28\": \"r41\", \"29\": \"r41\", \"30\": \"r41\", \"31\": \"r41\", \"32\": \"r41\", \"33\": \"r41\", \"34\": \"r41\", \"35\": \"r41\", \"36\": \"r41\", \"37\": \"r41\", \"38\": \"r41\", \"39\": \"r41\", \"40\": \"r41\", \"41\": \"r41\", \"42\": \"r41\", \"43\": \"r41\", \"44\": \"r41\", \"45\": \"r41\", \"46\": \"r41\", \"52\": \"r41\", \"53\": \"r41\", \"54\": \"r41\", \"55\": \"r41\", \"57\": \"r41\" }, { \"23\": \"r42\", \"24\": \"r42\", \"25\": \"r42\", \"26\": \"r42\", \"27\": \"r42\", \"28\": \"r42\", \"29\": \"r42\", \"30\": \"r42\", \"31\": \"r42\", \"32\": \"r42\", \"33\": \"r42\", \"34\": \"r42\", \"35\": \"r42\", \"36\": \"r42\", \"37\": \"r42\", \"38\": \"r42\", \"39\": \"r42\", \"40\": \"r42\", \"41\": \"r42\", \"42\": \"r42\", \"43\": \"r42\", \"44\": \"r42\", \"45\": \"r42\", \"46\": \"r42\", \"52\": \"r42\", \"53\": \"r42\", \"54\": \"r42\", \"55\": \"r42\", \"57\": \"r42\" }, { \"23\": \"r43\", \"24\": \"r43\", \"25\": \"r43\", \"26\": \"r43\", \"27\": \"r43\", \"28\": \"r43\", \"29\": \"r43\", \"30\": \"r43\", \"31\": \"r43\", \"32\": \"r43\", \"33\": \"r43\", \"34\": \"r43\", \"35\": \"r43\", \"36\": \"r43\", \"37\": \"r43\", \"38\": \"r43\", \"39\": \"r43\", \"40\": \"r43\", \"41\": \"r43\", \"42\": \"r43\", \"43\": \"r43\", \"44\": \"r43\", \"45\": \"r43\", \"46\": \"r43\", \"52\": \"r43\", \"53\": \"r43\", \"54\": \"r43\", \"55\": \"r43\", \"57\": \"r43\" }, { \"23\": \"r44\", \"24\": \"r44\", \"25\": \"r44\", \"26\": \"r44\", \"27\": \"r44\", \"28\": \"r44\", \"29\": \"r44\", \"30\": \"r44\", \"31\": \"r44\", \"32\": \"r44\", \"33\": \"r44\", \"34\": \"r44\", \"35\": \"r44\", \"36\": \"r44\", \"37\": \"r44\", \"38\": \"r44\", \"39\": \"r44\", \"40\": \"r44\", \"41\": \"r44\", \"42\": \"r44\", \"43\": \"r44\", \"44\": \"r44\", \"45\": \"r44\", \"46\": \"r44\", \"52\": \"r44\", \"53\": \"r44\", \"54\": \"r44\", \"55\": \"r44\", \"57\": \"r44\" }, { \"23\": \"r45\", \"24\": \"r45\", \"25\": \"r45\", \"26\": \"r45\", \"27\": \"r45\", \"28\": \"r45\", \"29\": \"r45\", \"30\": \"r45\", \"31\": \"r45\", \"32\": \"r45\", \"33\": \"r45\", \"34\": \"r45\", \"35\": \"r45\", \"36\": \"r45\", \"37\": \"r45\", \"38\": \"r45\", \"39\": \"r45\", \"40\": \"r45\", \"41\": \"r45\", \"42\": \"r45\", \"43\": \"r45\", \"44\": \"r45\", \"45\": \"r45\", \"46\": \"r45\", \"52\": \"r45\", \"53\": \"r45\", \"54\": \"r45\", \"55\": \"r45\", \"57\": \"r45\" }, { \"23\": \"r46\", \"24\": \"r46\", \"25\": \"r46\", \"26\": \"r46\", \"27\": \"r46\", \"28\": \"r46\", \"29\": \"r46\", \"30\": \"r46\", \"31\": \"r46\", \"32\": \"r46\", \"33\": \"r46\", \"34\": \"r46\", \"35\": \"r46\", \"36\": \"r46\", \"37\": \"r46\", \"38\": \"r46\", \"39\": \"r46\", \"40\": \"r46\", \"41\": \"r46\", \"42\": \"r46\", \"43\": \"r46\", \"44\": \"r46\", \"45\": \"r46\", \"46\": \"r46\", \"52\": \"r46\", \"53\": \"r46\", \"54\": \"r46\", \"55\": \"r46\", \"57\": \"r46\" }, { \"23\": \"r40\", \"24\": \"r40\", \"25\": \"r40\", \"26\": \"r40\", \"27\": \"r40\", \"28\": \"r40\", \"29\": \"r40\", \"30\": \"r40\", \"31\": \"r40\", \"32\": \"r40\", \"33\": \"r40\", \"34\": \"r40\", \"35\": \"r40\", \"36\": \"r40\", \"37\": \"r40\", \"38\": \"r40\", \"39\": \"r40\", \"40\": \"r40\", \"41\": \"r40\", \"42\": \"r40\", \"43\": \"r40\", \"44\": \"r40\", \"45\": \"r40\", \"52\": \"r40\", \"53\": \"r40\", \"54\": \"r40\", \"55\": \"r40\", \"57\": \"r40\" }, { \"25\": \"s12\", \"31\": \"s58\" }, { \"23\": \"r18\", \"24\": \"r18\", \"25\": \"r18\", \"26\": \"r18\", \"27\": \"r18\", \"28\": \"r18\", \"29\": \"r18\", \"30\": \"r18\", \"31\": \"r18\", \"32\": \"r18\", \"33\": \"r18\", \"34\": \"r18\", \"35\": \"r18\", \"36\": \"r18\", \"37\": \"r18\", \"38\": \"r18\", \"39\": \"r18\", \"40\": \"r18\", \"41\": \"r18\", \"42\": \"r18\", \"43\": \"r18\", \"44\": \"r18\", \"45\": \"r18\", \"52\": \"r18\", \"53\": \"r18\", \"54\": \"r18\", \"55\": \"r18\", \"57\": \"r18\" }, { \"25\": \"s12\", \"31\": \"s60\" }, { \"23\": \"r19\", \"24\": \"r19\", \"25\": \"r19\", \"26\": \"r19\", \"27\": \"r19\", \"28\": \"r19\", \"29\": \"r19\", \"30\": \"r19\", \"31\": \"r19\", \"32\": \"r19\", \"33\": \"r19\", \"34\": \"r19\", \"35\": \"r19\", \"36\": \"r19\", \"37\": \"r19\", \"38\": \"r19\", \"39\": \"r19\", \"40\": \"r19\", \"41\": \"r19\", \"42\": \"r19\", \"43\": \"r19\", \"44\": \"r19\", \"45\": \"r19\", \"52\": \"r19\", \"53\": \"r19\", \"54\": \"r19\", \"55\": \"r19\", \"57\": \"r19\" }, { \"25\": \"s12\", \"31\": \"s62\" }, { \"23\": \"r20\", \"24\": \"r20\", \"25\": \"r20\", \"26\": \"r20\", \"27\": \"r20\", \"28\": \"r20\", \"29\": \"r20\", \"30\": \"r20\", \"31\": \"r20\", \"32\": \"r20\", \"33\": \"r20\", \"34\": \"r20\", \"35\": \"r20\", \"36\": \"r20\", \"37\": \"r20\", \"38\": \"r20\", \"39\": \"r20\", \"40\": \"r20\", \"41\": \"r20\", \"42\": \"r20\", \"43\": \"r20\", \"44\": \"r20\", \"45\": \"r20\", \"52\": \"r20\", \"53\": \"r20\", \"54\": \"r20\", \"55\": \"r20\", \"57\": \"r20\" }, { \"25\": \"s12\", \"31\": \"s64\" }, { \"23\": \"r21\", \"24\": \"r21\", \"25\": \"r21\", \"26\": \"r21\", \"27\": \"r21\", \"28\": \"r21\", \"29\": \"r21\", \"30\": \"r21\", \"31\": \"r21\", \"32\": \"r21\", \"33\": \"r21\", \"34\": \"r21\", \"35\": \"r21\", \"36\": \"r21\", \"37\": \"r21\", \"38\": \"r21\", \"39\": \"r21\", \"40\": \"r21\", \"41\": \"r21\", \"42\": \"r21\", \"43\": \"r21\", \"44\": \"r21\", \"45\": \"r21\", \"52\": \"r21\", \"53\": \"r21\", \"54\": \"r21\", \"55\": \"r21\", \"57\": \"r21\" }, { \"56\": \"s72\" }, { \"56\": \"r55\" }, { \"10\": 70, \"20\": 73, \"21\": 75, \"22\": 76, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r56\", \"58\": \"s74\" }, { \"24\": \"r62\", \"28\": \"r62\", \"35\": \"r62\", \"36\": \"r62\", \"37\": \"r62\", \"38\": \"r62\", \"39\": \"r62\", \"40\": \"r62\", \"41\": \"r62\", \"42\": \"r62\", \"43\": \"r62\", \"44\": \"r62\", \"45\": \"r62\", \"56\": \"r62\", \"58\": \"r62\" }, { \"24\": \"r63\", \"28\": \"r63\", \"35\": \"r63\", \"36\": \"r63\", \"37\": \"r63\", \"38\": \"r63\", \"39\": \"r63\", \"40\": \"r63\", \"41\": \"r63\", \"42\": \"r63\", \"43\": \"r63\", \"44\": \"r63\", \"45\": \"r63\", \"56\": \"r63\", \"58\": \"r63\" }, { \"24\": \"r64\", \"28\": \"r64\", \"35\": \"r64\", \"36\": \"r64\", \"37\": \"r64\", \"38\": \"r64\", \"39\": \"r64\", \"40\": \"r64\", \"41\": \"r64\", \"42\": \"r64\", \"43\": \"r64\", \"44\": \"r64\", \"45\": \"r64\", \"56\": \"r64\", \"58\": \"r64\" }, { \"24\": \"r65\", \"28\": \"r65\", \"35\": \"r65\", \"36\": \"r65\", \"37\": \"r65\", \"38\": \"r65\", \"39\": \"r65\", \"40\": \"r65\", \"41\": \"r65\", \"42\": \"r65\", \"43\": \"r65\", \"44\": \"r65\", \"45\": \"r65\", \"56\": \"r65\", \"58\": \"r65\" }, { \"23\": \"r52\", \"24\": \"r52\", \"25\": \"r52\", \"26\": \"r52\", \"27\": \"r52\", \"28\": \"r52\", \"29\": \"r52\", \"30\": \"r52\", \"31\": \"r52\", \"32\": \"r52\", \"33\": \"r52\", \"34\": \"r52\", \"35\": \"r52\", \"36\": \"r52\", \"37\": \"r52\", \"38\": \"r52\", \"39\": \"r52\", \"40\": \"r52\", \"41\": \"r52\", \"42\": \"r52\", \"43\": \"r52\", \"44\": \"r52\", \"45\": \"r52\", \"46\": \"r52\", \"47\": \"r52\", \"48\": \"r52\", \"49\": \"r52\", \"50\": \"r52\", \"51\": \"r52\", \"52\": \"r52\", \"53\": \"r52\", \"54\": \"r52\", \"55\": \"r52\", \"57\": \"r52\" }, { \"56\": \"r57\" }, { \"10\": 70, \"21\": 77, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r62\", \"58\": \"s68\" }, { \"56\": \"r59\" }, { \"10\": 70, \"20\": 79, \"21\": 75, \"22\": 76, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r63\", \"58\": \"s80\" }, { \"10\": 70, \"18\": 78, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"56\": \"r58\" }, { \"56\": \"r60\" }, { \"10\": 70, \"21\": 81, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r62\", \"58\": \"s68\" }, { \"10\": 70, \"18\": 82, \"19\": 66, \"21\": 67, \"22\": 69, \"24\": \"s28\", \"28\": \"s71\", \"35\": \"s29\", \"36\": \"s30\", \"37\": \"s31\", \"38\": \"s32\", \"39\": \"s33\", \"40\": \"s34\", \"41\": \"s35\", \"42\": \"s36\", \"43\": \"s37\", \"44\": \"s38\", \"45\": \"s39\", \"56\": \"r54\", \"58\": \"s68\" }, { \"56\": \"r61\" }, { \"56\": \"s84\" }, { \"23\": \"r53\", \"24\": \"r53\", \"25\": \"r53\", \"26\": \"r53\", \"27\": \"r53\", \"28\": \"r53\", \"29\": \"r53\", \"30\": \"r53\", \"31\": \"r53\", \"32\": \"r53\", \"33\": \"r53\", \"34\": \"r53\", \"35\": \"r53\", \"36\": \"r53\", \"37\": \"r53\", \"38\": \"r53\", \"39\": \"r53\", \"40\": \"r53\", \"41\": \"r53\", \"42\": \"r53\", \"43\": \"r53\", \"44\": \"r53\", \"45\": \"r53\", \"46\": \"r53\", \"47\": \"r53\", \"48\": \"r53\", \"49\": \"r53\", \"50\": \"r53\", \"51\": \"r53\", \"52\": \"r53\", \"53\": \"r53\", \"54\": \"r53\", \"55\": \"r53\", \"57\": \"r53\" }, { \"25\": \"s12\", \"31\": \"s86\" }, { \"23\": \"r49\", \"24\": \"r49\", \"25\": \"r49\", \"26\": \"r49\", \"27\": \"r49\", \"28\": \"r49\", \"29\": \"r49\", \"30\": \"r49\", \"31\": \"r49\", \"32\": \"r49\", \"33\": \"r49\", \"34\": \"r49\", \"35\": \"r49\", \"36\": \"r49\", \"37\": \"r49\", \"38\": \"r49\", \"39\": \"r49\", \"40\": \"r49\", \"41\": \"r49\", \"42\": \"r49\", \"43\": \"r49\", \"44\": \"r49\", \"45\": \"r49\", \"46\": \"r49\", \"47\": \"r49\", \"48\": \"r49\", \"49\": \"r49\", \"50\": \"r49\", \"51\": \"r49\", \"52\": \"r49\", \"53\": \"r49\", \"54\": \"r49\", \"55\": \"r49\", \"57\": \"r49\" }, { \"25\": \"s12\", \"31\": \"s88\" }, { \"23\": \"r50\", \"24\": \"r50\", \"25\": \"r50\", \"26\": \"r50\", \"27\": \"r50\", \"28\": \"r50\", \"29\": \"r50\", \"30\": \"r50\", \"31\": \"r50\", \"32\": \"r50\", \"33\": \"r50\", \"34\": \"r50\", \"35\": \"r50\", \"36\": \"r50\", \"37\": \"r50\", \"38\": \"r50\", \"39\": \"r50\", \"40\": \"r50\", \"41\": \"r50\", \"42\": \"r50\", \"43\": \"r50\", \"44\": \"r50\", \"45\": \"r50\", \"46\": \"r50\", \"47\": \"r50\", \"48\": \"r50\", \"49\": \"r50\", \"50\": \"r50\", \"51\": \"r50\", \"52\": \"r50\", \"53\": \"r50\", \"54\": \"r50\", \"55\": \"r50\", \"57\": \"r50\" }, { \"25\": \"s12\", \"31\": \"s90\" }, { \"23\": \"r51\", \"24\": \"r51\", \"25\": \"r51\", \"26\": \"r51\", \"27\": \"r51\", \"28\": \"r51\", \"29\": \"r51\", \"30\": \"r51\", \"31\": \"r51\", \"32\": \"r51\", \"33\": \"r51\", \"34\": \"r51\", \"35\": \"r51\", \"36\": \"r51\", \"37\": \"r51\", \"38\": \"r51\", \"39\": \"r51\", \"40\": \"r51\", \"41\": \"r51\", \"42\": \"r51\", \"43\": \"r51\", \"44\": \"r51\", \"45\": \"r51\", \"46\": \"r51\", \"47\": \"r51\", \"48\": \"r51\", \"49\": \"r51\", \"50\": \"r51\", \"51\": \"r51\", \"52\": \"r51\", \"53\": \"r51\", \"54\": \"r51\", \"55\": \"r51\", \"57\": \"r51\" }];\n\n/**\n * Parsing stack.\n */\nvar stack = [];\n\n/**\n * Tokenizer instance.\n */\nvar tokenizer = void 0;\n/**\n * Generic tokenizer used by the parser in the Syntax tool.\n *\n * https://www.npmjs.com/package/syntax-cli\n *\n * See `--custom-tokinzer` to skip this generation, and use a custom one.\n */\n\nvar lexRules = [[/^#[^\\n]+/, function () {/* skip comments */}], [/^\\s+/, function () {/* skip whitespace */}], [/^-/, function () {\n  return 'DASH';\n}], [/^\\//, function () {\n  return 'CHAR';\n}], [/^#/, function () {\n  return 'CHAR';\n}], [/^\\|/, function () {\n  return 'CHAR';\n}], [/^\\./, function () {\n  return 'CHAR';\n}], [/^\\{/, function () {\n  return 'CHAR';\n}], [/^\\{\\d+\\}/, function () {\n  return 'RANGE_EXACT';\n}], [/^\\{\\d+,\\}/, function () {\n  return 'RANGE_OPEN';\n}], [/^\\{\\d+,\\d+\\}/, function () {\n  return 'RANGE_CLOSED';\n}], [/^\\\\k<(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf75\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee4\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd23\\udf00-\\udf1c\\udf27\\udf30-\\udf45\\udfe0-\\udff6]|\\ud804[\\udc03-\\udc37\\udc83-\\udcaf\\udcd0-\\udce8\\udd03-\\udd26\\udd44\\udd50-\\udd72\\udd76\\udd83-\\uddb2\\uddc1-\\uddc4\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude2b\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udede\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3d\\udf50\\udf5d-\\udf61]|\\ud805[\\udc00-\\udc34\\udc47-\\udc4a\\udc5f\\udc80-\\udcaf\\udcc4-\\udcc5\\udcc7\\udd80-\\uddae\\uddd8-\\udddb\\ude00-\\ude2f\\ude44\\ude80-\\udeaa\\udeb8\\udf00-\\udf1a]|\\ud806[\\udc00-\\udc2b\\udca0-\\udcdf\\udcff\\udda0-\\udda7\\uddaa-\\uddd0\\udde1\\udde3\\ude00\\ude0b-\\ude32\\ude3a\\ude50\\ude5c-\\ude89\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc2e\\udc40\\udc72-\\udc8f\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd30\\udd46\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd89\\udd98\\udee0-\\udef2]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udf00-\\udf2f\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf50\\udf93-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud838[\\udd00-\\udd2c\\udd37-\\udd3d\\udd4e\\udec0-\\udeeb]|\\ud83a[\\udc00-\\udcc4\\udd00-\\udd43\\udd4b]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\}))(([\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00b5\\u00b7\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udca0-\\udca9\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00-\\ude03\\ude05-\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd27\\udd30-\\udd39\\udf00-\\udf1c\\udf27\\udf30-\\udf50\\udfe0-\\udff6]|\\ud804[\\udc00-\\udc46\\udc66-\\udc6f\\udc7f-\\udcba\\udcd0-\\udce8\\udcf0-\\udcf9\\udd00-\\udd34\\udd36-\\udd3f\\udd44-\\udd46\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddc9-\\uddcc\\uddd0-\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude37\\ude3e\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udeea\\udef0-\\udef9\\udf00-\\udf03\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3b-\\udf44\\udf47-\\udf48\\udf4b-\\udf4d\\udf50\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc00-\\udc4a\\udc50-\\udc59\\udc5e-\\udc5f\\udc80-\\udcc5\\udcc7\\udcd0-\\udcd9\\udd80-\\uddb5\\uddb8-\\uddc0\\uddd8-\\udddd\\ude00-\\ude40\\ude44\\ude50-\\ude59\\ude80-\\udeb8\\udec0-\\udec9\\udf00-\\udf1a\\udf1d-\\udf2b\\udf30-\\udf39]|\\ud806[\\udc00-\\udc3a\\udca0-\\udce9\\udcff\\udda0-\\udda7\\uddaa-\\uddd7\\uddda-\\udde1\\udde3-\\udde4\\ude00-\\ude3e\\ude47\\ude50-\\ude99\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc36\\udc38-\\udc40\\udc50-\\udc59\\udc72-\\udc8f\\udc92-\\udca7\\udca9-\\udcb6\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd36\\udd3a\\udd3c-\\udd3d\\udd3f-\\udd47\\udd50-\\udd59\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd8e\\udd90-\\udd91\\udd93-\\udd98\\udda0-\\udda9\\udee0-\\udef6]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\ude60-\\ude69\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf50-\\udf59\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf4f-\\udf87\\udf8f-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d-\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb\\udfce-\\udfff]|\\ud836[\\ude00-\\ude36\\ude3b-\\ude6c\\ude75\\ude84\\ude9b-\\ude9f\\udea1-\\udeaf]|\\ud838[\\udc00-\\udc06\\udc08-\\udc18\\udc1b-\\udc21\\udc23-\\udc24\\udc26-\\udc2a\\udd00-\\udd2c\\udd30-\\udd3d\\udd40-\\udd49\\udd4e\\udec0-\\udef9]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6\\udd00-\\udd4b\\udd50-\\udd59]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})|[\\u200c\\u200d])*>/, function () {\n  var groupName = yytext.slice(3, -1);\n  validateUnicodeGroupName(groupName, this.getCurrentState());\n  return 'NAMED_GROUP_REF';\n}], [/^\\\\b/, function () {\n  return 'ESC_b';\n}], [/^\\\\B/, function () {\n  return 'ESC_B';\n}], [/^\\\\c[a-zA-Z]/, function () {\n  return 'CTRL_CH';\n}], [/^\\\\0\\d{1,2}/, function () {\n  return 'OCT_CODE';\n}], [/^\\\\0/, function () {\n  return 'DEC_CODE';\n}], [/^\\\\\\d{1,3}/, function () {\n  return 'DEC_CODE';\n}], [/^\\\\u[dD][89abAB][0-9a-fA-F]{2}\\\\u[dD][c-fC-F][0-9a-fA-F]{2}/, function () {\n  return 'U_CODE_SURROGATE';\n}], [/^\\\\u\\{[0-9a-fA-F]{1,}\\}/, function () {\n  return 'U_CODE';\n}], [/^\\\\u[0-9a-fA-F]{4}/, function () {\n  return 'U_CODE';\n}], [/^\\\\[pP]\\{\\w+(?:=\\w+)?\\}/, function () {\n  return 'U_PROP_VALUE_EXP';\n}], [/^\\\\x[0-9a-fA-F]{2}/, function () {\n  return 'HEX_CODE';\n}], [/^\\\\[tnrdDsSwWvf]/, function () {\n  return 'META_CHAR';\n}], [/^\\\\\\//, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[ #]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[\\^\\$\\.\\*\\+\\?\\(\\)\\\\\\[\\]\\{\\}\\|\\/]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\\\[^*?+\\[()\\\\|]/, function () {\n  var s = this.getCurrentState();\n  if (s === 'u_class' && yytext === \"\\\\-\") {\n    return 'ESC_CHAR';\n  } else if (s === 'u' || s === 'xu' || s === 'u_class') {\n    throw new SyntaxError('invalid Unicode escape ' + yytext);\n  }\n  return 'ESC_CHAR';\n}], [/^\\(/, function () {\n  return 'CHAR';\n}], [/^\\)/, function () {\n  return 'CHAR';\n}], [/^\\(\\?=/, function () {\n  return 'POS_LA_ASSERT';\n}], [/^\\(\\?!/, function () {\n  return 'NEG_LA_ASSERT';\n}], [/^\\(\\?<=/, function () {\n  return 'POS_LB_ASSERT';\n}], [/^\\(\\?<!/, function () {\n  return 'NEG_LB_ASSERT';\n}], [/^\\(\\?:/, function () {\n  return 'NON_CAPTURE_GROUP';\n}], [/^\\(\\?<(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5-\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\ude80-\\ude9c\\udea0-\\uded0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf75\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00\\ude10-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee4\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd23\\udf00-\\udf1c\\udf27\\udf30-\\udf45\\udfe0-\\udff6]|\\ud804[\\udc03-\\udc37\\udc83-\\udcaf\\udcd0-\\udce8\\udd03-\\udd26\\udd44\\udd50-\\udd72\\udd76\\udd83-\\uddb2\\uddc1-\\uddc4\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude2b\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udede\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3d\\udf50\\udf5d-\\udf61]|\\ud805[\\udc00-\\udc34\\udc47-\\udc4a\\udc5f\\udc80-\\udcaf\\udcc4-\\udcc5\\udcc7\\udd80-\\uddae\\uddd8-\\udddb\\ude00-\\ude2f\\ude44\\ude80-\\udeaa\\udeb8\\udf00-\\udf1a]|\\ud806[\\udc00-\\udc2b\\udca0-\\udcdf\\udcff\\udda0-\\udda7\\uddaa-\\uddd0\\udde1\\udde3\\ude00\\ude0b-\\ude32\\ude3a\\ude50\\ude5c-\\ude89\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc2e\\udc40\\udc72-\\udc8f\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd30\\udd46\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd89\\udd98\\udee0-\\udef2]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\uded0-\\udeed\\udf00-\\udf2f\\udf40-\\udf43\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf50\\udf93-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb]|\\ud838[\\udd00-\\udd2c\\udd37-\\udd3d\\udd4e\\udec0-\\udeeb]|\\ud83a[\\udc00-\\udcc4\\udd00-\\udd43\\udd4b]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\}))(([\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00b5\\u00b7\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0610-\\u061a\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dc\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u0710-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u08e1\\u08e3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1369-\\u1371\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19da\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cfa\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u203f-\\u2040\\u2054\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7c6\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab67\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc]|\\ud800[\\udc00-\\udc0b\\udc0d-\\udc26\\udc28-\\udc3a\\udc3c-\\udc3d\\udc3f-\\udc4d\\udc50-\\udc5d\\udc80-\\udcfa\\udd40-\\udd74\\uddfd\\ude80-\\ude9c\\udea0-\\uded0\\udee0\\udf00-\\udf1f\\udf2d-\\udf4a\\udf50-\\udf7a\\udf80-\\udf9d\\udfa0-\\udfc3\\udfc8-\\udfcf\\udfd1-\\udfd5]|\\ud801[\\udc00-\\udc9d\\udca0-\\udca9\\udcb0-\\udcd3\\udcd8-\\udcfb\\udd00-\\udd27\\udd30-\\udd63\\ude00-\\udf36\\udf40-\\udf55\\udf60-\\udf67]|\\ud802[\\udc00-\\udc05\\udc08\\udc0a-\\udc35\\udc37-\\udc38\\udc3c\\udc3f-\\udc55\\udc60-\\udc76\\udc80-\\udc9e\\udce0-\\udcf2\\udcf4-\\udcf5\\udd00-\\udd15\\udd20-\\udd39\\udd80-\\uddb7\\uddbe-\\uddbf\\ude00-\\ude03\\ude05-\\ude06\\ude0c-\\ude13\\ude15-\\ude17\\ude19-\\ude35\\ude38-\\ude3a\\ude3f\\ude60-\\ude7c\\ude80-\\ude9c\\udec0-\\udec7\\udec9-\\udee6\\udf00-\\udf35\\udf40-\\udf55\\udf60-\\udf72\\udf80-\\udf91]|\\ud803[\\udc00-\\udc48\\udc80-\\udcb2\\udcc0-\\udcf2\\udd00-\\udd27\\udd30-\\udd39\\udf00-\\udf1c\\udf27\\udf30-\\udf50\\udfe0-\\udff6]|\\ud804[\\udc00-\\udc46\\udc66-\\udc6f\\udc7f-\\udcba\\udcd0-\\udce8\\udcf0-\\udcf9\\udd00-\\udd34\\udd36-\\udd3f\\udd44-\\udd46\\udd50-\\udd73\\udd76\\udd80-\\uddc4\\uddc9-\\uddcc\\uddd0-\\uddda\\udddc\\ude00-\\ude11\\ude13-\\ude37\\ude3e\\ude80-\\ude86\\ude88\\ude8a-\\ude8d\\ude8f-\\ude9d\\ude9f-\\udea8\\udeb0-\\udeea\\udef0-\\udef9\\udf00-\\udf03\\udf05-\\udf0c\\udf0f-\\udf10\\udf13-\\udf28\\udf2a-\\udf30\\udf32-\\udf33\\udf35-\\udf39\\udf3b-\\udf44\\udf47-\\udf48\\udf4b-\\udf4d\\udf50\\udf57\\udf5d-\\udf63\\udf66-\\udf6c\\udf70-\\udf74]|\\ud805[\\udc00-\\udc4a\\udc50-\\udc59\\udc5e-\\udc5f\\udc80-\\udcc5\\udcc7\\udcd0-\\udcd9\\udd80-\\uddb5\\uddb8-\\uddc0\\uddd8-\\udddd\\ude00-\\ude40\\ude44\\ude50-\\ude59\\ude80-\\udeb8\\udec0-\\udec9\\udf00-\\udf1a\\udf1d-\\udf2b\\udf30-\\udf39]|\\ud806[\\udc00-\\udc3a\\udca0-\\udce9\\udcff\\udda0-\\udda7\\uddaa-\\uddd7\\uddda-\\udde1\\udde3-\\udde4\\ude00-\\ude3e\\ude47\\ude50-\\ude99\\ude9d\\udec0-\\udef8]|\\ud807[\\udc00-\\udc08\\udc0a-\\udc36\\udc38-\\udc40\\udc50-\\udc59\\udc72-\\udc8f\\udc92-\\udca7\\udca9-\\udcb6\\udd00-\\udd06\\udd08-\\udd09\\udd0b-\\udd36\\udd3a\\udd3c-\\udd3d\\udd3f-\\udd47\\udd50-\\udd59\\udd60-\\udd65\\udd67-\\udd68\\udd6a-\\udd8e\\udd90-\\udd91\\udd93-\\udd98\\udda0-\\udda9\\udee0-\\udef6]|\\ud808[\\udc00-\\udf99]|\\ud809[\\udc00-\\udc6e\\udc80-\\udd43]|\\ud80c[\\udc00-\\udfff]|\\ud80d[\\udc00-\\udc2e]|\\ud811[\\udc00-\\ude46]|\\ud81a[\\udc00-\\ude38\\ude40-\\ude5e\\ude60-\\ude69\\uded0-\\udeed\\udef0-\\udef4\\udf00-\\udf36\\udf40-\\udf43\\udf50-\\udf59\\udf63-\\udf77\\udf7d-\\udf8f]|\\ud81b[\\ude40-\\ude7f\\udf00-\\udf4a\\udf4f-\\udf87\\udf8f-\\udf9f\\udfe0-\\udfe1\\udfe3]|\\ud81c[\\udc00-\\udfff]|\\ud81d[\\udc00-\\udfff]|\\ud81e[\\udc00-\\udfff]|\\ud81f[\\udc00-\\udfff]|\\ud820[\\udc00-\\udfff]|\\ud821[\\udc00-\\udff7]|\\ud822[\\udc00-\\udef2]|\\ud82c[\\udc00-\\udd1e\\udd50-\\udd52\\udd64-\\udd67\\udd70-\\udefb]|\\ud82f[\\udc00-\\udc6a\\udc70-\\udc7c\\udc80-\\udc88\\udc90-\\udc99\\udc9d-\\udc9e]|\\ud834[\\udd65-\\udd69\\udd6d-\\udd72\\udd7b-\\udd82\\udd85-\\udd8b\\uddaa-\\uddad\\ude42-\\ude44]|\\ud835[\\udc00-\\udc54\\udc56-\\udc9c\\udc9e-\\udc9f\\udca2\\udca5-\\udca6\\udca9-\\udcac\\udcae-\\udcb9\\udcbb\\udcbd-\\udcc3\\udcc5-\\udd05\\udd07-\\udd0a\\udd0d-\\udd14\\udd16-\\udd1c\\udd1e-\\udd39\\udd3b-\\udd3e\\udd40-\\udd44\\udd46\\udd4a-\\udd50\\udd52-\\udea5\\udea8-\\udec0\\udec2-\\udeda\\udedc-\\udefa\\udefc-\\udf14\\udf16-\\udf34\\udf36-\\udf4e\\udf50-\\udf6e\\udf70-\\udf88\\udf8a-\\udfa8\\udfaa-\\udfc2\\udfc4-\\udfcb\\udfce-\\udfff]|\\ud836[\\ude00-\\ude36\\ude3b-\\ude6c\\ude75\\ude84\\ude9b-\\ude9f\\udea1-\\udeaf]|\\ud838[\\udc00-\\udc06\\udc08-\\udc18\\udc1b-\\udc21\\udc23-\\udc24\\udc26-\\udc2a\\udd00-\\udd2c\\udd30-\\udd3d\\udd40-\\udd49\\udd4e\\udec0-\\udef9]|\\ud83a[\\udc00-\\udcc4\\udcd0-\\udcd6\\udd00-\\udd4b\\udd50-\\udd59]|\\ud83b[\\ude00-\\ude03\\ude05-\\ude1f\\ude21-\\ude22\\ude24\\ude27\\ude29-\\ude32\\ude34-\\ude37\\ude39\\ude3b\\ude42\\ude47\\ude49\\ude4b\\ude4d-\\ude4f\\ude51-\\ude52\\ude54\\ude57\\ude59\\ude5b\\ude5d\\ude5f\\ude61-\\ude62\\ude64\\ude67-\\ude6a\\ude6c-\\ude72\\ude74-\\ude77\\ude79-\\ude7c\\ude7e\\ude80-\\ude89\\ude8b-\\ude9b\\udea1-\\udea3\\udea5-\\udea9\\udeab-\\udebb]|\\ud840[\\udc00-\\udfff]|\\ud841[\\udc00-\\udfff]|\\ud842[\\udc00-\\udfff]|\\ud843[\\udc00-\\udfff]|\\ud844[\\udc00-\\udfff]|\\ud845[\\udc00-\\udfff]|\\ud846[\\udc00-\\udfff]|\\ud847[\\udc00-\\udfff]|\\ud848[\\udc00-\\udfff]|\\ud849[\\udc00-\\udfff]|\\ud84a[\\udc00-\\udfff]|\\ud84b[\\udc00-\\udfff]|\\ud84c[\\udc00-\\udfff]|\\ud84d[\\udc00-\\udfff]|\\ud84e[\\udc00-\\udfff]|\\ud84f[\\udc00-\\udfff]|\\ud850[\\udc00-\\udfff]|\\ud851[\\udc00-\\udfff]|\\ud852[\\udc00-\\udfff]|\\ud853[\\udc00-\\udfff]|\\ud854[\\udc00-\\udfff]|\\ud855[\\udc00-\\udfff]|\\ud856[\\udc00-\\udfff]|\\ud857[\\udc00-\\udfff]|\\ud858[\\udc00-\\udfff]|\\ud859[\\udc00-\\udfff]|\\ud85a[\\udc00-\\udfff]|\\ud85b[\\udc00-\\udfff]|\\ud85c[\\udc00-\\udfff]|\\ud85d[\\udc00-\\udfff]|\\ud85e[\\udc00-\\udfff]|\\ud85f[\\udc00-\\udfff]|\\ud860[\\udc00-\\udfff]|\\ud861[\\udc00-\\udfff]|\\ud862[\\udc00-\\udfff]|\\ud863[\\udc00-\\udfff]|\\ud864[\\udc00-\\udfff]|\\ud865[\\udc00-\\udfff]|\\ud866[\\udc00-\\udfff]|\\ud867[\\udc00-\\udfff]|\\ud868[\\udc00-\\udfff]|\\ud869[\\udc00-\\uded6\\udf00-\\udfff]|\\ud86a[\\udc00-\\udfff]|\\ud86b[\\udc00-\\udfff]|\\ud86c[\\udc00-\\udfff]|\\ud86d[\\udc00-\\udf34\\udf40-\\udfff]|\\ud86e[\\udc00-\\udc1d\\udc20-\\udfff]|\\ud86f[\\udc00-\\udfff]|\\ud870[\\udc00-\\udfff]|\\ud871[\\udc00-\\udfff]|\\ud872[\\udc00-\\udfff]|\\ud873[\\udc00-\\udea1\\udeb0-\\udfff]|\\ud874[\\udc00-\\udfff]|\\ud875[\\udc00-\\udfff]|\\ud876[\\udc00-\\udfff]|\\ud877[\\udc00-\\udfff]|\\ud878[\\udc00-\\udfff]|\\ud879[\\udc00-\\udfff]|\\ud87a[\\udc00-\\udfe0]|\\ud87e[\\udc00-\\ude1d]|\\udb40[\\udd00-\\uddef])|[$_]|(\\\\u[0-9a-fA-F]{4}|\\\\u\\{[0-9a-fA-F]{1,}\\})|[\\u200c\\u200d])*>/, function () {\n  yytext = yytext.slice(3, -1);\n  validateUnicodeGroupName(yytext, this.getCurrentState());\n  return 'NAMED_CAPTURE_GROUP';\n}], [/^\\(/, function () {\n  return 'L_PAREN';\n}], [/^\\)/, function () {\n  return 'R_PAREN';\n}], [/^[*?+[^$]/, function () {\n  return 'CHAR';\n}], [/^\\\\\\]/, function () {\n  return 'ESC_CHAR';\n}], [/^\\]/, function () {\n  this.popState();return 'R_BRACKET';\n}], [/^\\^/, function () {\n  return 'BOS';\n}], [/^\\$/, function () {\n  return 'EOS';\n}], [/^\\*/, function () {\n  return 'STAR';\n}], [/^\\?/, function () {\n  return 'Q_MARK';\n}], [/^\\+/, function () {\n  return 'PLUS';\n}], [/^\\|/, function () {\n  return 'BAR';\n}], [/^\\./, function () {\n  return 'ANY';\n}], [/^\\//, function () {\n  return 'SLASH';\n}], [/^[^*?+\\[()\\\\|]/, function () {\n  return 'CHAR';\n}], [/^\\[\\^/, function () {\n  var s = this.getCurrentState();this.pushState(s === 'u' || s === 'xu' ? 'u_class' : 'class');return 'NEG_CLASS';\n}], [/^\\[/, function () {\n  var s = this.getCurrentState();this.pushState(s === 'u' || s === 'xu' ? 'u_class' : 'class');return 'L_BRACKET';\n}]];\nvar lexRulesByConditions = { \"INITIAL\": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"u\": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"xu\": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"x\": [0, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"u_class\": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], \"class\": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51] };\n\nvar EOF_TOKEN = {\n  type: EOF,\n  value: ''\n};\n\ntokenizer = {\n  initString: function initString(string) {\n    this._string = string;\n    this._cursor = 0;\n\n    this._states = ['INITIAL'];\n    this._tokensQueue = [];\n\n    this._currentLine = 1;\n    this._currentColumn = 0;\n    this._currentLineBeginOffset = 0;\n\n    /**\n     * Matched token location data.\n     */\n    this._tokenStartOffset = 0;\n    this._tokenEndOffset = 0;\n    this._tokenStartLine = 1;\n    this._tokenEndLine = 1;\n    this._tokenStartColumn = 0;\n    this._tokenEndColumn = 0;\n\n    return this;\n  },\n\n\n  /**\n   * Returns tokenizer states.\n   */\n  getStates: function getStates() {\n    return this._states;\n  },\n  getCurrentState: function getCurrentState() {\n    return this._states[this._states.length - 1];\n  },\n  pushState: function pushState(state) {\n    this._states.push(state);\n  },\n  begin: function begin(state) {\n    this.pushState(state);\n  },\n  popState: function popState() {\n    if (this._states.length > 1) {\n      return this._states.pop();\n    }\n    return this._states[0];\n  },\n  getNextToken: function getNextToken() {\n    // Something was queued, return it.\n    if (this._tokensQueue.length > 0) {\n      return this.onToken(this._toToken(this._tokensQueue.shift()));\n    }\n\n    if (!this.hasMoreTokens()) {\n      return this.onToken(EOF_TOKEN);\n    }\n\n    var string = this._string.slice(this._cursor);\n    var lexRulesForState = lexRulesByConditions[this.getCurrentState()];\n\n    for (var i = 0; i < lexRulesForState.length; i++) {\n      var lexRuleIndex = lexRulesForState[i];\n      var lexRule = lexRules[lexRuleIndex];\n\n      var matched = this._match(string, lexRule[0]);\n\n      // Manual handling of EOF token (the end of string). Return it\n      // as `EOF` symbol.\n      if (string === '' && matched === '') {\n        this._cursor++;\n      }\n\n      if (matched !== null) {\n        yytext = matched;\n        yyleng = yytext.length;\n        var token = lexRule[1].call(this);\n\n        if (!token) {\n          return this.getNextToken();\n        }\n\n        // If multiple tokens are returned, save them to return\n        // on next `getNextToken` call.\n\n        if (Array.isArray(token)) {\n          var tokensToQueue = token.slice(1);\n          token = token[0];\n          if (tokensToQueue.length > 0) {\n            var _tokensQueue;\n\n            (_tokensQueue = this._tokensQueue).unshift.apply(_tokensQueue, _toConsumableArray(tokensToQueue));\n          }\n        }\n\n        return this.onToken(this._toToken(token, yytext));\n      }\n    }\n\n    if (this.isEOF()) {\n      this._cursor++;\n      return EOF_TOKEN;\n    }\n\n    this.throwUnexpectedToken(string[0], this._currentLine, this._currentColumn);\n  },\n\n\n  /**\n   * Throws default \"Unexpected token\" exception, showing the actual\n   * line from the source, pointing with the ^ marker to the bad token.\n   * In addition, shows `line:column` location.\n   */\n  throwUnexpectedToken: function throwUnexpectedToken(symbol, line, column) {\n    var lineSource = this._string.split('\\n')[line - 1];\n    var lineData = '';\n\n    if (lineSource) {\n      var pad = ' '.repeat(column);\n      lineData = '\\n\\n' + lineSource + '\\n' + pad + '^\\n';\n    }\n\n    throw new SyntaxError(lineData + 'Unexpected token: \"' + symbol + '\" ' + ('at ' + line + ':' + column + '.'));\n  },\n  getCursor: function getCursor() {\n    return this._cursor;\n  },\n  getCurrentLine: function getCurrentLine() {\n    return this._currentLine;\n  },\n  getCurrentColumn: function getCurrentColumn() {\n    return this._currentColumn;\n  },\n  _captureLocation: function _captureLocation(matched) {\n    var nlRe = /\\n/g;\n\n    // Absolute offsets.\n    this._tokenStartOffset = this._cursor;\n\n    // Line-based locations, start.\n    this._tokenStartLine = this._currentLine;\n    this._tokenStartColumn = this._tokenStartOffset - this._currentLineBeginOffset;\n\n    // Extract `\\n` in the matched token.\n    var nlMatch = void 0;\n    while ((nlMatch = nlRe.exec(matched)) !== null) {\n      this._currentLine++;\n      this._currentLineBeginOffset = this._tokenStartOffset + nlMatch.index + 1;\n    }\n\n    this._tokenEndOffset = this._cursor + matched.length;\n\n    // Line-based locations, end.\n    this._tokenEndLine = this._currentLine;\n    this._tokenEndColumn = this._currentColumn = this._tokenEndOffset - this._currentLineBeginOffset;\n  },\n  _toToken: function _toToken(tokenType) {\n    var yytext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    return {\n      // Basic data.\n      type: tokenType,\n      value: yytext,\n\n      // Location data.\n      startOffset: this._tokenStartOffset,\n      endOffset: this._tokenEndOffset,\n      startLine: this._tokenStartLine,\n      endLine: this._tokenEndLine,\n      startColumn: this._tokenStartColumn,\n      endColumn: this._tokenEndColumn\n    };\n  },\n  isEOF: function isEOF() {\n    return this._cursor === this._string.length;\n  },\n  hasMoreTokens: function hasMoreTokens() {\n    return this._cursor <= this._string.length;\n  },\n  _match: function _match(string, regexp) {\n    var matched = string.match(regexp);\n    if (matched) {\n      // Handle `\\n` in the matched token to track line numbers.\n      this._captureLocation(matched[0]);\n      this._cursor += matched[0].length;\n      return matched[0];\n    }\n    return null;\n  },\n\n\n  /**\n   * Allows analyzing, and transforming token. Default implementation\n   * just passes the token through.\n   */\n  onToken: function onToken(token) {\n    return token;\n  }\n};\n\n/**\n * Expose tokenizer so it can be accessed in semantic actions.\n */\nyy.lexer = tokenizer;\nyy.tokenizer = tokenizer;\n\n/**\n * Global parsing options. Some options can be shadowed per\n * each `parse` call, if the optations are passed.\n *\n * Initalized to the `captureLocations` which is passed\n * from the generator. Other options can be added at runtime.\n */\nyy.options = {\n  captureLocations: true\n};\n\n/**\n * Parsing module.\n */\nvar yyparse = {\n  /**\n   * Sets global parsing options.\n   */\n  setOptions: function setOptions(options) {\n    yy.options = options;\n    return this;\n  },\n\n\n  /**\n   * Returns parsing options.\n   */\n  getOptions: function getOptions() {\n    return yy.options;\n  },\n\n\n  /**\n   * Parses a string.\n   */\n  parse: function parse(string, parseOptions) {\n    if (!tokenizer) {\n      throw new Error('Tokenizer instance wasn\\'t specified.');\n    }\n\n    tokenizer.initString(string);\n\n    /**\n     * If parse options are passed, override global parse options for\n     * this call, and later restore global options.\n     */\n    var globalOptions = yy.options;\n    if (parseOptions) {\n      yy.options = Object.assign({}, yy.options, parseOptions);\n    }\n\n    /**\n     * Allow callers to do setup work based on the\n     * parsing string, and passed options.\n     */\n    yyparse.onParseBegin(string, tokenizer, yy.options);\n\n    stack.length = 0;\n    stack.push(0);\n\n    var token = tokenizer.getNextToken();\n    var shiftedToken = null;\n\n    do {\n      if (!token) {\n        // Restore options.\n        yy.options = globalOptions;\n        unexpectedEndOfInput();\n      }\n\n      var state = stack[stack.length - 1];\n      var column = tokens[token.type];\n\n      if (!table[state].hasOwnProperty(column)) {\n        yy.options = globalOptions;\n        unexpectedToken(token);\n      }\n\n      var entry = table[state][column];\n\n      // Shift action.\n      if (entry[0] === 's') {\n        var _loc2 = null;\n\n        if (yy.options.captureLocations) {\n          _loc2 = {\n            startOffset: token.startOffset,\n            endOffset: token.endOffset,\n            startLine: token.startLine,\n            endLine: token.endLine,\n            startColumn: token.startColumn,\n            endColumn: token.endColumn\n          };\n        }\n\n        shiftedToken = this.onShift(token);\n\n        stack.push({ symbol: tokens[shiftedToken.type], semanticValue: shiftedToken.value, loc: _loc2 }, Number(entry.slice(1)));\n\n        token = tokenizer.getNextToken();\n      }\n\n      // Reduce action.\n      else if (entry[0] === 'r') {\n          var productionNumber = entry.slice(1);\n          var production = productions[productionNumber];\n          var hasSemanticAction = typeof production[2] === 'function';\n          var semanticValueArgs = hasSemanticAction ? [] : null;\n\n          var locationArgs = hasSemanticAction && yy.options.captureLocations ? [] : null;\n\n          if (production[1] !== 0) {\n            var rhsLength = production[1];\n            while (rhsLength-- > 0) {\n              stack.pop();\n              var stackEntry = stack.pop();\n\n              if (hasSemanticAction) {\n                semanticValueArgs.unshift(stackEntry.semanticValue);\n\n                if (locationArgs) {\n                  locationArgs.unshift(stackEntry.loc);\n                }\n              }\n            }\n          }\n\n          var reduceStackEntry = { symbol: production[0] };\n\n          if (hasSemanticAction) {\n            yytext = shiftedToken ? shiftedToken.value : null;\n            yyleng = shiftedToken ? shiftedToken.value.length : null;\n\n            var semanticActionArgs = locationArgs !== null ? semanticValueArgs.concat(locationArgs) : semanticValueArgs;\n\n            production[2].apply(production, _toConsumableArray(semanticActionArgs));\n\n            reduceStackEntry.semanticValue = __;\n\n            if (locationArgs) {\n              reduceStackEntry.loc = __loc;\n            }\n          }\n\n          var nextState = stack[stack.length - 1];\n          var symbolToReduceWith = production[0];\n\n          stack.push(reduceStackEntry, table[nextState][symbolToReduceWith]);\n        }\n\n        // Accept.\n        else if (entry === 'acc') {\n            stack.pop();\n            var parsed = stack.pop();\n\n            if (stack.length !== 1 || stack[0] !== 0 || tokenizer.hasMoreTokens()) {\n              // Restore options.\n              yy.options = globalOptions;\n              unexpectedToken(token);\n            }\n\n            if (parsed.hasOwnProperty('semanticValue')) {\n              yy.options = globalOptions;\n              yyparse.onParseEnd(parsed.semanticValue);\n              return parsed.semanticValue;\n            }\n\n            yyparse.onParseEnd();\n\n            // Restore options.\n            yy.options = globalOptions;\n            return true;\n          }\n    } while (tokenizer.hasMoreTokens() || stack.length > 1);\n  },\n  setTokenizer: function setTokenizer(customTokenizer) {\n    tokenizer = customTokenizer;\n    return yyparse;\n  },\n  getTokenizer: function getTokenizer() {\n    return tokenizer;\n  },\n  onParseBegin: function onParseBegin(string, tokenizer, options) {},\n  onParseEnd: function onParseEnd(parsed) {},\n\n\n  /**\n   * Allows analyzing, and transforming shifted token. Default implementation\n   * just passes the token through.\n   */\n  onShift: function onShift(token) {\n    return token;\n  }\n};\n\n/**\n * Tracks capturing groups.\n */\nvar capturingGroupsCount = 0;\n\n/**\n * Tracks named groups.\n */\nvar namedGroups = {};\n\n/**\n * Parsing string.\n */\nvar parsingString = '';\n\nyyparse.onParseBegin = function (string, lexer) {\n  parsingString = string;\n  capturingGroupsCount = 0;\n  namedGroups = {};\n\n  var lastSlash = string.lastIndexOf('/');\n  var flags = string.slice(lastSlash);\n\n  if (flags.includes('x') && flags.includes('u')) {\n    lexer.pushState('xu');\n  } else {\n    if (flags.includes('x')) {\n      lexer.pushState('x');\n    }\n    if (flags.includes('u')) {\n      lexer.pushState('u');\n    }\n  }\n};\n\n/**\n * On shifting `(` remember its number to used on reduce.\n */\nyyparse.onShift = function (token) {\n  if (token.type === 'L_PAREN' || token.type === 'NAMED_CAPTURE_GROUP') {\n    token.value = new String(token.value);\n    token.value.groupNumber = ++capturingGroupsCount;\n  }\n  return token;\n};\n\n/**\n * Extracts ranges from the range string.\n */\nfunction getRange(text) {\n  var range = text.match(/\\d+/g).map(Number);\n\n  if (Number.isFinite(range[1]) && range[1] < range[0]) {\n    throw new SyntaxError('Numbers out of order in ' + text + ' quantifier');\n  }\n\n  return range;\n}\n\n/**\n * Checks class range\n */\nfunction checkClassRange(from, to) {\n  if (from.kind === 'control' || to.kind === 'control' || !isNaN(from.codePoint) && !isNaN(to.codePoint) && from.codePoint > to.codePoint) {\n    throw new SyntaxError('Range ' + from.value + '-' + to.value + ' out of order in character class');\n  }\n}\n\n// ---------------------- Unicode property -------------------------------------------\n\nvar unicodeProperties = require('../unicode/parser-unicode-properties.js');\n\n/**\n * Unicode property.\n */\nfunction UnicodeProperty(matched, loc) {\n  var negative = matched[1] === 'P';\n  var separatorIdx = matched.indexOf('=');\n\n  var name = matched.slice(3, separatorIdx !== -1 ? separatorIdx : -1);\n  var value = void 0;\n\n  // General_Category allows using only value as a shorthand.\n  var isShorthand = separatorIdx === -1 && unicodeProperties.isGeneralCategoryValue(name);\n\n  // Binary propery name.\n  var isBinaryProperty = separatorIdx === -1 && unicodeProperties.isBinaryPropertyName(name);\n\n  if (isShorthand) {\n    value = name;\n    name = 'General_Category';\n  } else if (isBinaryProperty) {\n    value = name;\n  } else {\n    if (!unicodeProperties.isValidName(name)) {\n      throw new SyntaxError('Invalid unicode property name: ' + name + '.');\n    }\n\n    value = matched.slice(separatorIdx + 1, -1);\n\n    if (!unicodeProperties.isValidValue(name, value)) {\n      throw new SyntaxError('Invalid ' + name + ' unicode property value: ' + value + '.');\n    }\n  }\n\n  return Node({\n    type: 'UnicodeProperty',\n    name: name,\n    value: value,\n    negative: negative,\n    shorthand: isShorthand,\n    binary: isBinaryProperty,\n    canonicalName: unicodeProperties.getCanonicalName(name) || name,\n    canonicalValue: unicodeProperties.getCanonicalValue(value) || value\n  }, loc);\n}\n\n// ----------------------------------------------------------------------------------\n\n\n/**\n * Creates a character node.\n */\nfunction Char(value, kind, loc) {\n  var symbol = void 0;\n  var codePoint = void 0;\n\n  switch (kind) {\n    case 'decimal':\n      {\n        codePoint = Number(value.slice(1));\n        symbol = String.fromCodePoint(codePoint);\n        break;\n      }\n    case 'oct':\n      {\n        codePoint = parseInt(value.slice(1), 8);\n        symbol = String.fromCodePoint(codePoint);\n        break;\n      }\n    case 'hex':\n    case 'unicode':\n      {\n        if (value.lastIndexOf('\\\\u') > 0) {\n          var _value$split$slice = value.split('\\\\u').slice(1),\n              _value$split$slice2 = _slicedToArray(_value$split$slice, 2),\n              lead = _value$split$slice2[0],\n              trail = _value$split$slice2[1];\n\n          lead = parseInt(lead, 16);\n          trail = parseInt(trail, 16);\n          codePoint = (lead - 0xd800) * 0x400 + (trail - 0xdc00) + 0x10000;\n\n          symbol = String.fromCodePoint(codePoint);\n        } else {\n          var hex = value.slice(2).replace('{', '');\n          codePoint = parseInt(hex, 16);\n          if (codePoint > 0x10ffff) {\n            throw new SyntaxError('Bad character escape sequence: ' + value);\n          }\n\n          symbol = String.fromCodePoint(codePoint);\n        }\n        break;\n      }\n    case 'meta':\n      {\n        switch (value) {\n          case '\\\\t':\n            symbol = '\\t';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\n':\n            symbol = '\\n';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\r':\n            symbol = '\\r';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\v':\n            symbol = '\\v';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\f':\n            symbol = '\\f';\n            codePoint = symbol.codePointAt(0);\n            break;\n          case '\\\\b':\n            symbol = '\\b';\n            codePoint = symbol.codePointAt(0);\n          case '\\\\0':\n            symbol = '\\0';\n            codePoint = 0;\n          case '.':\n            symbol = '.';\n            codePoint = NaN;\n            break;\n          default:\n            codePoint = NaN;\n        }\n        break;\n      }\n    case 'simple':\n      {\n        symbol = value;\n        codePoint = symbol.codePointAt(0);\n        break;\n      }\n  }\n\n  return Node({\n    type: 'Char',\n    value: value,\n    kind: kind,\n    symbol: symbol,\n    codePoint: codePoint\n  }, loc);\n}\n\n/**\n * Valid flags per current ECMAScript spec and\n * stage 3+ proposals.\n */\nvar validFlags = 'gimsuxy';\n\n/**\n * Checks the flags are valid, and that\n * we don't duplicate flags.\n */\nfunction checkFlags(flags) {\n  var seen = new Set();\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = flags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var flag = _step.value;\n\n      if (seen.has(flag) || !validFlags.includes(flag)) {\n        throw new SyntaxError('Invalid flags: ' + flags);\n      }\n      seen.add(flag);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return flags.split('').sort().join('');\n}\n\n/**\n * Parses patterns like \\1, \\2, etc. either as a backreference\n * to a group, or a deciaml char code.\n */\nfunction GroupRefOrDecChar(text, textLoc) {\n  var reference = Number(text.slice(1));\n\n  if (reference > 0 && reference <= capturingGroupsCount) {\n    return Node({\n      type: 'Backreference',\n      kind: 'number',\n      number: reference,\n      reference: reference\n    }, textLoc);\n  }\n\n  return Char(text, 'decimal', textLoc);\n}\n\n/**\n * Unicode names.\n */\nvar uReStart = /^\\\\u[0-9a-fA-F]{4}/; // only matches start of string\nvar ucpReStart = /^\\\\u\\{[0-9a-fA-F]{1,}\\}/; // only matches start of string\nvar ucpReAnywhere = /\\\\u\\{[0-9a-fA-F]{1,}\\}/; // matches anywhere in string\n\n/**\n * Validates Unicode group name.\n */\nfunction validateUnicodeGroupName(name, state) {\n  var isUnicodeName = ucpReAnywhere.test(name);\n  var isUnicodeState = state === 'u' || state === 'xu' || state === 'u_class';\n\n  if (isUnicodeName && !isUnicodeState) {\n    throw new SyntaxError('invalid group Unicode name \"' + name + '\", use `u` flag.');\n  }\n\n  return name;\n}\n\n// Matches the following production: https://tc39.es/ecma262/#prod-RegExpUnicodeEscapeSequence\n//\n//  RegExpUnicodeEscapeSequence ::\n//    `u` LeadSurrogate `\\u` TrailSurrogate   # as 'leadSurrogate', 'trailSurrogate'\n//    `u` LeadSurrogate                       # as 'leadSurrogateOnly'\n//    `u` TrailSurrogate                      # as 'trailSurrogateOnly'\n//    `u` NonSurrogate                        # as 'nonSurrogate'\n//    `u` `{` CodePoint `}`                   # as 'codePoint'\n//\n//  LeadSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is in the inclusive range 0xD800 to 0xDBFF        # [dD][89aAbB][0-9a-fA-F]{2}\n//\n//  TrailSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is in the inclusive range 0xDC00 to 0xDFFF        # [dD][c-fC-F][0-9a-fA-F]{2}\n//\n//  NonSurrogate ::\n//    Hex4Digits but only if the SV of Hex4Digits is not in the inclusive range 0xD800 to 0xDFFF    # [0-9a-ce-fA-CE-F][0-9a-fA-F]{3}|[dD][0-7][0-9a-fA-F]{2}\n//\n//  CodePoint ::\n//    HexDigits but only if MV of HexDigits ≤ 0x10FFFF                                              # 0*(?:[0-9a-fA-F]{1,5}|10[0-9a-fA-F]{4})\n//\nvar uidRe = /\\\\u(?:([dD][89aAbB][0-9a-fA-F]{2})\\\\u([dD][c-fC-F][0-9a-fA-F]{2})|([dD][89aAbB][0-9a-fA-F]{2})|([dD][c-fC-F][0-9a-fA-F]{2})|([0-9a-ce-fA-CE-F][0-9a-fA-F]{3}|[dD][0-7][0-9a-fA-F]{2})|\\{(0*(?:[0-9a-fA-F]{1,5}|10[0-9a-fA-F]{4}))\\})/;\n\nfunction decodeUnicodeGroupName(name) {\n  return name.replace(new RegExp(uidRe, 'g'), function (_, leadSurrogate, trailSurrogate, leadSurrogateOnly, trailSurrogateOnly, nonSurrogate, codePoint) {\n    if (leadSurrogate) {\n      return String.fromCodePoint(parseInt(leadSurrogate, 16), parseInt(trailSurrogate, 16));\n    }\n    if (leadSurrogateOnly) {\n      return String.fromCodePoint(parseInt(leadSurrogateOnly, 16));\n    }\n    if (trailSurrogateOnly) {\n      // TODO: Per the spec: https://tc39.es/ecma262/#prod-RegExpUnicodeEscapeSequence\n      // > Each `\\u` TrailSurrogate for which the choice of associated `u` LeadSurrogate is ambiguous shall be associated with the nearest possible `u` LeadSurrogate that would otherwise have no corresponding `\\u` TrailSurrogate.\n      return String.fromCodePoint(parseInt(trailSurrogateOnly, 16));\n    }\n    if (nonSurrogate) {\n      return String.fromCodePoint(parseInt(nonSurrogate, 16));\n    }\n    if (codePoint) {\n      return String.fromCodePoint(parseInt(codePoint, 16));\n    }\n    return _;\n  });\n}\n\n/**\n * Extracts from `\\k<foo>` pattern either a backreference\n * to a named capturing group (if it presents), or parses it\n * as a list of char: `\\k`, `<`, `f`, etc.\n */\nfunction NamedGroupRefOrChars(text, textLoc) {\n  var referenceRaw = text.slice(3, -1);\n  var reference = decodeUnicodeGroupName(referenceRaw);\n\n  if (namedGroups.hasOwnProperty(reference)) {\n    return Node({\n      type: 'Backreference',\n      kind: 'name',\n      number: namedGroups[reference],\n      reference: reference,\n      referenceRaw: referenceRaw\n    }, textLoc);\n  }\n\n  // Else `\\k<foo>` should be parsed as a list of `Char`s.\n  // This is really a 0.01% edge case, but we should handle it.\n\n  var startOffset = null;\n  var startLine = null;\n  var endLine = null;\n  var startColumn = null;\n\n  if (textLoc) {\n    startOffset = textLoc.startOffset;\n    startLine = textLoc.startLine;\n    endLine = textLoc.endLine;\n    startColumn = textLoc.startColumn;\n  }\n\n  var charRe = /^[\\w$<>]/;\n  var loc = void 0;\n\n  var chars = [\n  // Init to first \\k, taking 2 symbols.\n  Char(text.slice(1, 2), 'simple', startOffset ? {\n    startLine: startLine,\n    endLine: endLine,\n    startColumn: startColumn,\n    startOffset: startOffset,\n    endOffset: startOffset += 2,\n    endColumn: startColumn += 2\n  } : null)];\n\n  // For \\k\n  chars[0].escaped = true;\n\n  // Other symbols.\n  text = text.slice(2);\n\n  while (text.length > 0) {\n    var matched = null;\n\n    // Unicode, \\u003B or \\u{003B}\n    if ((matched = text.match(uReStart)) || (matched = text.match(ucpReStart))) {\n      if (startOffset) {\n        loc = {\n          startLine: startLine,\n          endLine: endLine,\n          startColumn: startColumn,\n          startOffset: startOffset,\n          endOffset: startOffset += matched[0].length,\n          endColumn: startColumn += matched[0].length\n        };\n      }\n      chars.push(Char(matched[0], 'unicode', loc));\n      text = text.slice(matched[0].length);\n    }\n\n    // Simple char.\n    else if (matched = text.match(charRe)) {\n        if (startOffset) {\n          loc = {\n            startLine: startLine,\n            endLine: endLine,\n            startColumn: startColumn,\n            startOffset: startOffset,\n            endOffset: ++startOffset,\n            endColumn: ++startColumn\n          };\n        }\n        chars.push(Char(matched[0], 'simple', loc));\n        text = text.slice(1);\n      }\n  }\n\n  return chars;\n}\n\n/**\n * Creates an AST node with a location.\n */\nfunction Node(node, loc) {\n  if (yy.options.captureLocations) {\n    node.loc = {\n      source: parsingString.slice(loc.startOffset, loc.endOffset),\n      start: {\n        line: loc.startLine,\n        column: loc.startColumn,\n        offset: loc.startOffset\n      },\n      end: {\n        line: loc.endLine,\n        column: loc.endColumn,\n        offset: loc.endOffset\n      }\n    };\n  }\n  return node;\n}\n\n/**\n * Creates location node.\n */\nfunction loc(start, end) {\n  if (!yy.options.captureLocations) {\n    return null;\n  }\n\n  return {\n    startOffset: start.startOffset,\n    endOffset: end.endOffset,\n    startLine: start.startLine,\n    endLine: end.endLine,\n    startColumn: start.startColumn,\n    endColumn: end.endColumn\n  };\n}\n\nfunction unexpectedToken(token) {\n  if (token.type === EOF) {\n    unexpectedEndOfInput();\n  }\n\n  tokenizer.throwUnexpectedToken(token.value, token.startLine, token.startColumn);\n}\n\nfunction unexpectedEndOfInput() {\n  parseError('Unexpected end of input.');\n}\n\nfunction parseError(message) {\n  throw new SyntaxError(message);\n}\n\nmodule.exports = yyparse;","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar NodePath = require('../../traverse/node-path');\n\nvar _require = require('../../transform/utils'),\n    increaseQuantifierByOne = _require.increaseQuantifierByOne;\n\n/**\n * A regexp-tree plugin to combine repeating patterns.\n *\n * /^abcabcabc/ -> /^abc{3}/\n * /^(?:abc){2}abc/ -> /^(?:abc){3}/\n * /^abc(?:abc){2}/ -> /^(?:abc){3}/\n */\n\nmodule.exports = {\n  Alternative: function Alternative(path) {\n    var node = path.node;\n\n    // We can skip the first child\n\n    var index = 1;\n    while (index < node.expressions.length) {\n      var child = path.getChild(index);\n      index = Math.max(1, combineRepeatingPatternLeft(path, child, index));\n\n      if (index >= node.expressions.length) {\n        break;\n      }\n\n      child = path.getChild(index);\n      index = Math.max(1, combineWithPreviousRepetition(path, child, index));\n\n      if (index >= node.expressions.length) {\n        break;\n      }\n\n      child = path.getChild(index);\n      index = Math.max(1, combineRepetitionWithPrevious(path, child, index));\n\n      index++;\n    }\n  }\n};\n\n// abcabc -> (?:abc){2}\nfunction combineRepeatingPatternLeft(alternative, child, index) {\n  var node = alternative.node;\n\n\n  var nbPossibleLengths = Math.ceil(index / 2);\n  var i = 0;\n\n  while (i < nbPossibleLengths) {\n    var startIndex = index - 2 * i - 1;\n    var right = void 0,\n        left = void 0;\n\n    if (i === 0) {\n      right = child;\n      left = alternative.getChild(startIndex);\n    } else {\n      right = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(index - i, index)), [child.node])\n      });\n\n      left = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(startIndex, index - i)))\n      });\n    }\n\n    if (right.hasEqualSource(left)) {\n      for (var j = 0; j < 2 * i + 1; j++) {\n        alternative.getChild(startIndex).remove();\n      }\n\n      child.replace({\n        type: 'Repetition',\n        expression: i === 0 && right.node.type !== 'Repetition' ? right.node : {\n          type: 'Group',\n          capturing: false,\n          expression: right.node\n        },\n        quantifier: {\n          type: 'Quantifier',\n          kind: 'Range',\n          from: 2,\n          to: 2,\n          greedy: true\n        }\n      });\n      return startIndex;\n    }\n\n    i++;\n  }\n\n  return index;\n}\n\n// (?:abc){2}abc -> (?:abc){3}\nfunction combineWithPreviousRepetition(alternative, child, index) {\n  var node = alternative.node;\n\n\n  var i = 0;\n  while (i < index) {\n    var previousChild = alternative.getChild(i);\n\n    if (previousChild.node.type === 'Repetition' && previousChild.node.quantifier.greedy) {\n      var left = previousChild.getChild();\n      var right = void 0;\n\n      if (left.node.type === 'Group' && !left.node.capturing) {\n        left = left.getChild();\n      }\n\n      if (i + 1 === index) {\n        right = child;\n        if (right.node.type === 'Group' && !right.node.capturing) {\n          right = right.getChild();\n        }\n      } else {\n        right = NodePath.getForNode({\n          type: 'Alternative',\n          expressions: [].concat(_toConsumableArray(node.expressions.slice(i + 1, index + 1)))\n        });\n      }\n\n      if (left.hasEqualSource(right)) {\n        for (var j = i; j < index; j++) {\n          alternative.getChild(i + 1).remove();\n        }\n\n        increaseQuantifierByOne(previousChild.node.quantifier);\n\n        return i;\n      }\n    }\n\n    i++;\n  }\n  return index;\n}\n\n// abc(?:abc){2} -> (?:abc){3}\nfunction combineRepetitionWithPrevious(alternative, child, index) {\n  var node = alternative.node;\n\n\n  if (child.node.type === 'Repetition' && child.node.quantifier.greedy) {\n    var right = child.getChild();\n    var left = void 0;\n\n    if (right.node.type === 'Group' && !right.node.capturing) {\n      right = right.getChild();\n    }\n\n    var rightLength = void 0;\n    if (right.node.type === 'Alternative') {\n      rightLength = right.node.expressions.length;\n      left = NodePath.getForNode({\n        type: 'Alternative',\n        expressions: [].concat(_toConsumableArray(node.expressions.slice(index - rightLength, index)))\n      });\n    } else {\n      rightLength = 1;\n      left = alternative.getChild(index - 1);\n      if (left.node.type === 'Group' && !left.node.capturing) {\n        left = left.getChild();\n      }\n    }\n\n    if (left.hasEqualSource(right)) {\n      for (var j = index - rightLength; j < index; j++) {\n        alternative.getChild(index - rightLength).remove();\n      }\n\n      increaseQuantifierByOne(child.node.quantifier);\n\n      return index - rightLength;\n    }\n  }\n  return index;\n}","/**\n * The MIT License (MIT)\n * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>\n */\n\n'use strict';\n\nvar UPPER_A_CP = 'A'.codePointAt(0);\nvar UPPER_Z_CP = 'Z'.codePointAt(0);\n/**\n * Transforms case-insensitive regexp to lowercase\n *\n * /AaBbÏ/i -> /aabbï/i\n */\nmodule.exports = {\n  _AZClassRanges: null,\n  _hasUFlag: false,\n  init: function init(ast) {\n    this._AZClassRanges = new Set();\n    this._hasUFlag = ast.flags.includes('u');\n  },\n  shouldRun: function shouldRun(ast) {\n    return ast.flags.includes('i');\n  },\n  Char: function Char(path) {\n    var node = path.node,\n        parent = path.parent;\n\n    if (isNaN(node.codePoint)) {\n      return;\n    }\n\n    // Engine support for case-insensitive matching without the u flag\n    // for characters above \\u1000 does not seem reliable.\n    if (!this._hasUFlag && node.codePoint >= 0x1000) {\n      return;\n    }\n\n    if (parent.type === 'ClassRange') {\n      // The only class ranges we handle must be inside A-Z.\n      // After the `from` char is processed, the isAZClassRange test\n      // will be false, so we use a Set to keep track of parents and\n      // process the `to` char.\n      if (!this._AZClassRanges.has(parent) && !isAZClassRange(parent)) {\n        return;\n      }\n      this._AZClassRanges.add(parent);\n    }\n\n    var lower = node.symbol.toLowerCase();\n    if (lower !== node.symbol) {\n      node.value = displaySymbolAsValue(lower, node);\n      node.symbol = lower;\n      node.codePoint = lower.codePointAt(0);\n    }\n  }\n};\n\nfunction isAZClassRange(classRange) {\n  var from = classRange.from,\n      to = classRange.to;\n  // A-Z\n\n  return from.codePoint >= UPPER_A_CP && from.codePoint <= UPPER_Z_CP && to.codePoint >= UPPER_A_CP && to.codePoint <= UPPER_Z_CP;\n}\n\nfunction displaySymbolAsValue(symbol, node) {\n  var codePoint = symbol.codePointAt(0);\n  if (node.kind === 'decimal') {\n    return '\\\\' + codePoint;\n  }\n  if (node.kind === 'oct') {\n    return '\\\\0' + codePoint.toString(8);\n  }\n  if (node.kind === 'hex') {\n    return '\\\\x' + codePoint.toString(16);\n  }\n  if (node.kind === 'unicode') {\n    if (node.isSurrogatePair) {\n      var _getSurrogatePairFrom = getSurrogatePairFromCodePoint(codePoint),\n          lead = _getSurrogatePairFrom.lead,\n          trail = _getSurrogatePairFrom.trail;\n\n      return '\\\\u' + '0'.repeat(4 - lead.length) + lead + '\\\\u' + '0'.repeat(4 - trail.length) + trail;\n    } else if (node.value.includes('{')) {\n      return '\\\\u{' + codePoint.toString(16) + '}';\n    } else {\n      var code = codePoint.toString(16);\n      return '\\\\u' + '0'.repeat(4 - code.length) + code;\n    }\n  }\n  // simple\n  return symbol;\n}\n\n/**\n * Converts a code point to a surrogate pair.\n * Conversion algorithm is taken from The Unicode Standard 3.0 Section 3.7\n * (https://www.unicode.org/versions/Unicode3.0.0/ch03.pdf)\n * @param {number} codePoint - Between 0x10000 and 0x10ffff\n * @returns {{lead: string, trail: string}}\n */\nfunction getSurrogatePairFromCodePoint(codePoint) {\n  var lead = Math.floor((codePoint - 0x10000) / 0x400) + 0xd800;\n  var trail = (codePoint - 0x10000) % 0x400 + 0xdc00;\n  return {\n    lead: lead.toString(16),\n    trail: trail.toString(16)\n  };\n}"],"names":["module","exports","CharacterClass","path","node","sources","i","expressions","length","childPath","getChild","source","jsonEncode","hasOwnProperty","remove","clone","obj","res","Array","isArray","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","generator","parser","traverse","TransformResult","ast","extra","arguments","undefined","instance","TypeError","_classCallCheck","this","_ast","_source","_string","_regexp","_extra","value","RegExp","getSource","flags","generate","body","transform","regexp","handlers","parse","captureLocations","SemverPart","numbersToRanges","numbers","semverify","version","versionParts","toString","split","Infinity","versionPart","semverPart","semver","parseInt","isNaN","compareSemvers","a","b","options","major","minor","patch","majorBase","minorBase","patchBase","ignoreMinor","ignorePatch","allowHigherVersions","compareMinor","comparePatch","compareArrays","from","len","copy","concat","items","AlternativeNode","exps","filter","Boolean","type","SimpleCharNode","kind","String","codePoint","NaN","ClassRangeNode","to","CharacterClassNode","CapturingGroupNode","expression","capturing","number","DisjunctionCapturingGroupNode","expr","exprs","disjunction","left","right","pop","reduceRight","DisjunctionNode","DigitPatternNode","NumberPatternNode","quantifier","greedy","numberPattern","RepetitionNode","NumberCharsNode","isNumberPatternNode","isCharNode","test","isDigitRangeNode","isExpressionNode","parseRegex","regex","replace","classes","visitors","every","reduce","newVisitors","className","visitor","visitorPre","pre","visitorPost","post","nodePath","numberToDigits","num","Number","rayRangeDigitPattern","digit","includes","rangeStart","segmentRangeNumberPattern","zeros","fromNode","toNode","zerosPrefix","segmentToNumberPatterns","digitsInNumber","fromDigits","digitsCount","toDigits","decadeRanges","ranges","decade","push","Math","min","splitToDecadeRanges","parts","map","commonStart","common","currA","currB","diffA","diffB","splitCommonDiff","from1","to1","diffParts","range","middleSegment","_","ri","d","j","patterns","prevNode","merged","exp","unshift","rangeToRegex","digits","other","RangeQuantifierNode","pow","numberPatterns","topNodes","prev","nodes","rayToNumberPatterns","getNumberPatternsPart","numberPatternsCount","regexAst","maxNumbersCount","count","Group","getNumberPatternsCount","numbersCounter","containsNumberPattern","parent","applyVersionsToRegex","versions","finalVersions","maxRequiredPartsCount","max","allowZeroSubversions","shouldRepeatCount","getRequiredSemverPartsCount","numberPatternsPart","versionsPart","rangedVersion","ignoreIndex","prevWasZero","start","createMapper","rangedSemverToRegex","numbersToReplace","slice","shift","replaceNumberPatterns","defaultOptions","getPreUserAgentRegexes","finalOptions","browserRegexes","sourceRegex","maxVersion","matchedVersions","current","Major","Minor","Patch","part","p","versionsListToRanges","applyVersionsToRegexes","browsers","targetRegexes","result","prevFamily","prevRegexIsGlobal","forEach","requestVersions","get","family","minVersion","bases","compareOptions","minComparator","ver","maxComparator","comparator","findMatchedVersions","getRegexesForBrowsers","merge","Map","strVersion","join","set","sort","mergeBrowserVersions","browserslistOptions","browser","versionString","versionStringTo","partIndex","i1","v","rangeSemver","getBrowsersList","getUserAgentRegex","src","getAST","optimizeRegex","_toConsumableArray","arr","arr2","_hasIFlag","_hasUFlag","init","isFullNumberRange","rewriteNumberRanges","hasIFlag","hasUFlag","numberPath","lowerCasePath","upperCasePath","underscorePath","u017fPath","u212aPath","isMetaChar","isLowerCaseRange","isUpperCaseRange","isUnderscore","isCodePoint","rewriteWordRanges","whitespaceRangeTests","some","nNode","find","symbol","rewriteWhitespaceRanges","isChar","char","browserVersions","AND_REGEXP","OR_REGEXP","flatten","array","matchQuery","all","query","name","indexOf","not","match","matches","matchBlock","string","qs","predicate","n","substr","parsed","compose","trim","queries","block","consumeNumbers","startIndex","rtl","siblingNode","escaped","abs","isSimpleChar","_hasXFlag","Char","hasXFlag","index","nbFollowingNumbers","nextSiblingNode","preservesOpeningCurlyBraceEscape","nbPrecedingNumbers","previousSiblingNode","preservesClosingCurlyBraceEscape","preservesEscape","negative","preservesInCharClass","shouldUnescape","shouldRun","isSurrogatePair","compatTransforms","_transform","transformsWhitelist","transformToApply","keys","transformName","Error","handler","getExtra","setExtra","shouldEscape","previousNode","hasAppropriateSiblings","isAppropriateChar","_node$expressions$","isMeta","toUpperCase","toLowerCase","getInverseMeta","gen","Alternative","Disjunction","nameRaw","Backreference","reference","referenceRaw","Assertion","assertion","_assertion","ClassRange","Repetition","Quantifier","UnicodeProperty","shorthand","binary","regexes","regexpTreeParser","generatedParseFn","bind","setOptions","_require","alt","or","rep","plusRep","questionRep","fragments","apply","build","NodePath","asNodes","getPathFor","prop","parentPath","getForNode","initRegistry","root","skipProperty","visit","idx","_prop","child","traversingIndexStack","updateTraversingIndex","astTraverse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","isRemoved","handlerFuncPre","call","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","handlerFuncPost","increaseQuantifierByOne","isGreedyOpenRange","extractFromTo","previousSibling","getPreviousSibling","hasEqualSource","_extractFromTo","previousSiblingFrom","previousSiblingTo","_extractFromTo2","nodeFrom","nodeTo","DFAMinimizer","EPSILON_CLOSURE","DFA","nfa","_nfa","getTransitionTable","_originalAcceptingStateNumbers","_acceptingStateNumbers","_originalTransitionTable","_transitionTable","minimize","getAlphabet","table","stateNumbers","_this","nfaTable","nfaStates","Set","worklist","alphabet","nfaAcceptingStates","getAcceptingStateNumbers","dfaTable","updateAcceptingStates","states","nfaAcceptingState","add","dfaStateLabel","onSymbol","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","nfaStatesOnSymbol","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","nfaStateOnSymbol","dfaStatesOnSymbolSet","dfaStatesOnSymbol","dfaOnSymbolStr","_remapStateNumbers","calculatedDFATable","newStatesMap","transitionTable","originalNumber","newNumber","originalRow","row","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_originalNumber","state","has","disjunctionToList","list","listToDisjunction","NFA","nfaFromRegExp","builders","toNFA","toDFA","NON_BINARY_PROP_NAMES_TO_ALIASES","General_Category","Script","Script_Extensions","NON_BINARY_ALIASES_TO_PROP_NAMES","inverseMap","BINARY_PROP_NAMES_TO_ALIASES","ASCII","ASCII_Hex_Digit","Alphabetic","Any","Assigned","Bidi_Control","Bidi_Mirrored","Case_Ignorable","Cased","Changes_When_Casefolded","Changes_When_Casemapped","Changes_When_Lowercased","Changes_When_NFKC_Casefolded","Changes_When_Titlecased","Changes_When_Uppercased","Dash","Default_Ignorable_Code_Point","Deprecated","Diacritic","Emoji","Emoji_Component","Emoji_Modifier","Emoji_Modifier_Base","Emoji_Presentation","Extended_Pictographic","Extender","Grapheme_Base","Grapheme_Extend","Hex_Digit","IDS_Binary_Operator","IDS_Trinary_Operator","ID_Continue","ID_Start","Ideographic","Join_Control","Logical_Order_Exception","Lowercase","Noncharacter_Code_Point","Pattern_Syntax","Pattern_White_Space","Quotation_Mark","Radical","Regional_Indicator","Sentence_Terminal","Soft_Dotted","Terminal_Punctuation","Unified_Ideograph","Uppercase","Variation_Selector","White_Space","XID_Continue","XID_Start","BINARY_ALIASES_TO_PROP_NAMES","GENERAL_CATEGORY_VALUE_TO_ALIASES","Cased_Letter","Close_Punctuation","Connector_Punctuation","Control","Currency_Symbol","Dash_Punctuation","Decimal_Number","Enclosing_Mark","Final_Punctuation","Format","Initial_Punctuation","Letter","Letter_Number","Line_Separator","Lowercase_Letter","Mark","Math_Symbol","Modifier_Letter","Modifier_Symbol","Nonspacing_Mark","Open_Punctuation","Other","Other_Letter","Other_Number","Other_Punctuation","Other_Symbol","Paragraph_Separator","Private_Use","Punctuation","Separator","Space_Separator","Spacing_Mark","Surrogate","Titlecase_Letter","Unassigned","Uppercase_Letter","GENERAL_CATEGORY_VALUE_ALIASES_TO_VALUES","SCRIPT_VALUE_TO_ALIASES","Adlam","Ahom","Anatolian_Hieroglyphs","Arabic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bhaiksuki","Bopomofo","Brahmi","Braille","Buginese","Buhid","Canadian_Aboriginal","Carian","Caucasian_Albanian","Chakma","Cham","Cherokee","Common","Coptic","Cuneiform","Cypriot","Cyrillic","Deseret","Devanagari","Dogra","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gunjala_Gondi","Gurmukhi","Han","Hangul","Hanifi_Rohingya","Hanunoo","Hatran","Hebrew","Hiragana","Imperial_Aramaic","Inherited","Inscriptional_Pahlavi","Inscriptional_Parthian","Javanese","Kaithi","Kannada","Katakana","Kayah_Li","Kharoshthi","Khmer","Khojki","Khudawadi","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Makasar","Malayalam","Mandaic","Manichaean","Marchen","Medefaidrin","Masaram_Gondi","Meetei_Mayek","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Miao","Modi","Mongolian","Mro","Multani","Myanmar","Nabataean","New_Tai_Lue","Newa","Nko","Nushu","Ogham","Ol_Chiki","Old_Hungarian","Old_Italic","Old_North_Arabian","Old_Permic","Old_Persian","Old_Sogdian","Old_South_Arabian","Old_Turkic","Oriya","Osage","Osmanya","Pahawh_Hmong","Palmyrene","Pau_Cin_Hau","Phags_Pa","Phoenician","Psalter_Pahlavi","Rejang","Runic","Samaritan","Saurashtra","Sharada","Shavian","Siddham","SignWriting","Sinhala","Sogdian","Sora_Sompeng","Soyombo","Sundanese","Syloti_Nagri","Syriac","Tagalog","Tagbanwa","Tai_Le","Tai_Tham","Tai_Viet","Takri","Tamil","Tangut","Telugu","Thaana","Thai","Tibetan","Tifinagh","Tirhuta","Ugaritic","Vai","Warang_Citi","Yi","Zanabazar_Square","SCRIPT_VALUE_ALIASES_TO_VALUE","data","inverse","isGeneralCategoryValue","isScriptCategoryValue","isAlias","isValidName","isValidValue","isGeneralCategoryName","isScriptCategoryName","isBinaryPropertyName","getCanonicalName","getCanonicalValue","DEFAULT_COLLECTION_PROP","DEFAULT_SINGLE_PROP","property","_enforceProp","end","setChild","splice","getTraversingIndex","_rebuildIndex","registry","delete","newNode","nodeProps","assign","JSON","stringify","jsonSkipLoc","_ref","format","useLoc","clear","dx","dotAll","namedCapturingGroups","xFlag","getBuilder","clearOnLogout","persist","toValue","toSymbol","State","EPSILON","NFAState","_State","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","subClass","superClass","create","constructor","setPrototypeOf","_inherits","visited","accepting","getTransitionsOnSymbol","rest","symbolTransitions","_this2","_epsilonClosure","epsilonTransitions","closure","nextState","getEpsilonClosure","RegExpTree","re","groups","_re","_groups","global","ignoreCase","multiline","sticky","unicode","compile","_toStringResult","exec","group","groupNumber","compatTranspiler","optimizer","_traverse","fa","regexpTree","toRegExp","compat","compatTranspile","getFlags","optimize","whitelist","blacklist","supportedBrowsersRegExp","browserslistConfig","browserslist","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","c","e","f","g","h","k","l","m","o","q","r","s","t","u","w","x","y","z","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","aB","bB","cB","dB","eB","fB","gB","hB","iB","jB","kB","lB","mB","nB","oB","pB","qB","rB","sB","tB","uB","vB","wB","xB","yB","zB","AC","BC","CC","DC","EC","FC","GC","HC","IC","JC","KC","LC","MC","NC","OC","PC","QC","RC","SC","TC","UC","VC","WC","XC","YC","ZC","aC","bC","cC","dC","eC","fC","gC","hC","iC","jC","kC","lC","mC","nC","oC","pC","qC","rC","sC","tC","uC","vC","wC","xC","yC","zC","AD","BD","CD","DD","ED","FD","GD","HD","ID","JD","KD","LD","MD","ND","OD","PD","QD","RD","SD","TD","UD","VD","WD","XD","YD","ZD","aD","bD","cD","dD","eD","fD","gD","hD","iD","jD","kD","lD","mD","nD","oD","pD","uniqueNodesMap","encoded","_groupNames","optimizationTransforms","_ref$whitelist","_ref$blacklist","prevResultString","transformer","newResult","sortCharClass","aValue","getSortValue","bValue","isControl","fitsInMetas","metas","hasIUFlags","fitsInMeta","meta","fitsInMetaS","fitsInMetaD","fitsInMetaW","combinesWithPrecedingClassRange","classRange","fitsInClassRange","isMetaWCharOrCode","combinesWithFollowingClassRange","charCombinesWithPrecedingChars","nbMergedChars","currentExpression","precedingExpresion","_hasIUFlags","inState","outState","addTransition","altPair","first","second","out","in","orPair","_len","_key","_len2","_key2","fragment","repExplicit","getParent","BrowserslistError","message","captureStackTrace","agentsData","unpackBrowserVersions","versionsData","usage","entry","usage_global","prefix_exceptions","release_date","map2","key2","prefix","insertChildAt","redirectPath","generateUrl","isBrowserOverridden","browserStorage","getItem","testSupportedBrowser","navigator","userAgent","logger","debug","window","location","pathname","redirectUrl","href","origin","base64Param","Buffer","history","pushState","reload","_ref$accepting","_transitions","toState","transitions","charset","shouldProcess","size","characterClass","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","currentTransitionMap","sameRow","r1","r2","s1","s2","areEquivalent","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","goToSameSet","originalTransitionS1","originalTransitionS2","dfa","allStates","nonAccepting","previous","_loop","newTransitionMap","_set","handledStates","_set2","restSets","handledState","newSets","remaped","minimizedTable","minimizedAcceptingStates","entries","_ref2","_idx","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","originalTransition","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","originalState","setTransitionTable","setAcceptingStateNumbers","UPPER_A_CP","codePointAt","UPPER_Z_CP","LOWER_A_CP","LOWER_Z_CP","DIGIT_0_CP","DIGIT_9_CP","fromCodePoint","newChar","parentType","needsEscape","rewriteOpenZero","rewriteOpenOne","rewriteExactOne","_alphabet","_acceptingStates","getAcceptingStates","acceptingState","symbols","visitState","getTransitions","combinedState","noop","loadQueries","getStat","opts","stats","loadConfig","config","loadCountry","loadFeature","currentNode","resolve","context","parseConfig","readConfig","findConfig","findConfigFile","clearCaches","oldDataWarning","env","jsReleases","agents","e2c","jsEOL","parseWithoutCache","ANDROID_EVERGREEN_FIRST","isVersionsMatch","versionA","versionB","normalize","normalizeElectron","versionToUse","nameMapper","getMajor","getMajorVersions","released","majorVersions","uniq","minimum","selected","filtered","fillUsage","generateFilter","sign","parseFloat","parseLatestFloat","parseSimpleInt","compare","compareSemver","semverFilterLoose","operator","compareSemverLoose","normalizeVersion","resolved","versionAliases","resolveVersion","filterByYear","since","byName","releaseDate","date","cloneData","aliases","mobileToDesktop","desktopNames","desktop","android","chrome","normalizeAndroidVersions","copyObject","cloned","androidVersions","chromeVersions","iFirstEvergreen","checkName","filterJumps","nVersions","jump","op_mob","isSupported","withPartial","parseQueries","QUERIES","select","prepareOpts","prepareQueries","defaults","checkQueries","cache","parseCache","needsPath","ignoreUnknownVersions","dangerousExtend","customUsage","cacheKey","name1","name2","version1","BROWSERSLIST_DISABLE_CACHE","nodeQuery","matched","nodeVersions","sinceQuery","year","month","day","Date","UTC","coverQuery","coverage","place","coveraged","custom","fx","ff","ios","explorer","blackberry","explorermobile","operamini","operamobile","chromeandroid","firefoxandroid","ucandroid","qqandroid","and_chr","and_ff","ie_mob","customStats","dataByBrowser","last_major_versions","last_versions","last_electron_major_versions","last_node_major_versions","last_browser_major_versions","last_electron_versions","last_node_versions","last_browser_versions","unreleased_versions","unreleased_electron_versions","unreleased_browser_versions","last_years","now","years","since_y","since_y_m","since_y_m_d","popularity","popularity_in_my_stats","percentage","popularity_in_config_stats","loadStat","popularity_in_place","cover","cover_in","supports","feature","supportType","features","iMax","checkDesktop","electron_range","fromToUse","toToUse","node_range","browser_range","electron_ray","node_ray","browser_ray","alias","firefox_esr","opera_mini_all","electron_version","node_major_version","node_minor_version","node_patch_version","current_node","maintained_node","phantomjs_1_9","phantomjs_2_1","browser_version","browserslist_config","extends","dead","unknown","full","interval","release","user","getCurrentUser","getLoggerBuilder","setApp","setUid","uid","detectUser","yytext","yy","__","__loc","yyloc","startOffset","endOffset","startLine","endLine","startColumn","endColumn","productions","_1","_1loc","_2","_3","_4","_2loc","_3loc","_4loc","Node","checkFlags","loc","_loc","separatorIdx","isShorthand","unicodeProperties","isBinaryProperty","SyntaxError","canonicalName","canonicalValue","text","textLoc","capturingGroupsCount","decodeUnicodeGroupName","namedGroups","charRe","chars","uReStart","ucpReStart","NamedGroupRefOrChars","getRange","allowGroupNameDuplicates","checkClassRange","tokens","stack","tokenizer","lexRules","validateUnicodeGroupName","getCurrentState","popState","lexRulesByConditions","EOF_TOKEN","initString","_cursor","_states","_tokensQueue","_currentLine","_currentColumn","_currentLineBeginOffset","_tokenStartOffset","_tokenEndOffset","_tokenStartLine","_tokenEndLine","_tokenStartColumn","_tokenEndColumn","getStates","begin","getNextToken","onToken","_toToken","hasMoreTokens","lexRulesForState","lexRuleIndex","lexRule","_match","token","tokensToQueue","isEOF","throwUnexpectedToken","line","column","lineSource","lineData","repeat","getCursor","getCurrentLine","getCurrentColumn","_captureLocation","nlRe","nlMatch","tokenType","lexer","yyparse","getOptions","parseOptions","globalOptions","onParseBegin","shiftedToken","unexpectedEndOfInput","unexpectedToken","_loc2","onShift","semanticValue","productionNumber","production","hasSemanticAction","semanticValueArgs","locationArgs","rhsLength","stackEntry","reduceStackEntry","semanticActionArgs","symbolToReduceWith","onParseEnd","setTokenizer","customTokenizer","getTokenizer","parsingString","isFinite","lastSlash","lastIndexOf","_value$split$slice2","lead","trail","hex","validFlags","seen","flag","ucpReAnywhere","uidRe","leadSurrogate","trailSurrogate","leadSurrogateOnly","trailSurrogateOnly","nonSurrogate","offset","parseError","combineRepeatingPatternLeft","alternative","nbPossibleLengths","ceil","combineWithPreviousRepetition","previousChild","combineRepetitionWithPrevious","rightLength","_AZClassRanges","lower","_getSurrogatePairFrom","floor","getSurrogatePairFromCodePoint","code","displaySymbolAsValue"],"sourceRoot":""}